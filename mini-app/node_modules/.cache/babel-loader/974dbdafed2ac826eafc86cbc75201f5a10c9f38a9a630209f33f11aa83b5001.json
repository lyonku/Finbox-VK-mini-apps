{"ast":null,"code":"import { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { AppearanceProviderContext } from \"./AppearanceProviderContext\";\nimport { getScheme } from \"../../helpers/getScheme\";\nimport { classNamesString } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\nexport var generateVKUITokensClassName = function generateVKUITokensClassName(platform, appearance) {\n  var tokensPlatform;\n  switch (platform) {\n    case Platform.ANDROID:\n      tokensPlatform = \"vkBase\";\n      break;\n    case Platform.IOS:\n      tokensPlatform = \"vkIOS\";\n      break;\n    case Platform.VKCOM:\n      tokensPlatform = \"vkCom\";\n      break;\n    default:\n      tokensPlatform = platform;\n  }\n  return \"vkui--\".concat(tokensPlatform, \"--\").concat(appearance);\n};\nexport var AppearanceProvider = function AppearanceProvider(_ref) {\n  var children = _ref.children,\n    _ref$appearance = _ref.appearance,\n    appearance = _ref$appearance === void 0 ? \"light\" : _ref$appearance;\n  var platform = usePlatform();\n  var scheme = getScheme({\n    platform: platform,\n    appearance: appearance\n  });\n  return createScopedElement(AppearanceProviderContext.Provider, {\n    value: appearance\n  }, React.Children.map(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: classNamesString(child.props.className, \"vkui\".concat(scheme), generateVKUITokensClassName(platform, appearance))\n      });\n    }\n    return child;\n  }));\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,yBAAT;AACA,SAASC,SAAT;AACA,SAASC,gBAAT;AACA,SAASC,WAAT;AACA,SAASC,QAAT;AAMA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CACzCC,QADyC,EAEzCC,UAFyC,EAG9B;EACX,IAAIC,cAAJ;EACA,QAAQF,QAAR;IACE,KAAKF,QAAQ,CAACK,OAAd;MACED,cAAc,GAAG,QAAjB;MACA;IACF,KAAKJ,QAAQ,CAACM,GAAd;MACEF,cAAc,GAAG,OAAjB;MACA;IACF,KAAKJ,QAAQ,CAACO,KAAd;MACEH,cAAc,GAAG,OAAjB;MACA;IACF;MACEA,cAAc,GAAGF,QAAjB;EAAA;EAGJ,uBAAgBE,cAAhB,eAAmCD,UAAnC;AACD,CApBM;AAsBP,OAAO,IAAMK,kBAAqD,GAAG,SAAxDA,kBAAwD,OAG/D;EAAA,IAFJC,QAEI,QAFJA,QAEI;IAAAC,uBADJP,UACI;IADJA,UACI,gCADS,OACT;EACJ,IAAMD,QAAQ,GAAGH,WAAW,EAA5B;EACA,IAAMY,MAAM,GAAGd,SAAS,CAAC;IACvBK,QAAQ,EAARA,QADuB;IAEvBC,UAAU,EAAVA;EAFuB,CAAD,CAAxB;EAKA,OACES,oBAAChB,yBAAD,CAA2BiB,QAA3B;IAAoCC,KAAK,EAAEX;EAA3C,GACGR,KAAK,CAACoB,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,EAA6B,UAACQ,KAAD,EAAW;IACvC,kBAAItB,KAAK,CAACuB,cAAN,CAAqBD,KAArB,CAAJ,EAAiC;MAC/B,oBAAOtB,KAAK,CAACwB,YAAN,CAAmBF,KAAnB,EAA0B;QAC/BG,SAAS,EAAEtB,gBAAgB,CACzBmB,KAAK,CAACI,KAAN,CAAYD,SADa,gBAElBT,MAFkB,GAGzBV,2BAA2B,CAACC,QAAD,EAAWC,UAAX,CAHF;MADI,CAA1B,CAAP;IAOD;IACD,OAAOc,KAAP;EACD,CAXA,CADH,CADF;AAgBD,CA1BM","names":["React","AppearanceProviderContext","getScheme","classNamesString","usePlatform","Platform","generateVKUITokensClassName","platform","appearance","tokensPlatform","ANDROID","IOS","VKCOM","AppearanceProvider","children","_ref$appearance","scheme","createScopedElement","Provider","value","Children","map","child","isValidElement","cloneElement","className","props"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\AppearanceProvider\\AppearanceProvider.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { AppearanceType } from \"@vkontakte/vk-bridge\";\nimport { AppearanceProviderContext } from \"./AppearanceProviderContext\";\nimport { getScheme } from \"../../helpers/getScheme\";\nimport { classNamesString } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\n\nexport interface AppearanceProviderProps {\n  appearance?: AppearanceType;\n}\n\nexport const generateVKUITokensClassName = (\n  platform: string,\n  appearance: string\n): string => {\n  let tokensPlatform;\n  switch (platform) {\n    case Platform.ANDROID:\n      tokensPlatform = \"vkBase\";\n      break;\n    case Platform.IOS:\n      tokensPlatform = \"vkIOS\";\n      break;\n    case Platform.VKCOM:\n      tokensPlatform = \"vkCom\";\n      break;\n    default:\n      tokensPlatform = platform;\n  }\n\n  return `vkui--${tokensPlatform}--${appearance}`;\n};\n\nexport const AppearanceProvider: React.FC<AppearanceProviderProps> = ({\n  children,\n  appearance = \"light\",\n}) => {\n  const platform = usePlatform();\n  const scheme = getScheme({\n    platform,\n    appearance,\n  });\n\n  return (\n    <AppearanceProviderContext.Provider value={appearance}>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            className: classNamesString(\n              child.props.className,\n              `vkui${scheme}`,\n              generateVKUITokensClassName(platform, appearance)\n            ),\n          });\n        }\n        return child;\n      })}\n    </AppearanceProviderContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}