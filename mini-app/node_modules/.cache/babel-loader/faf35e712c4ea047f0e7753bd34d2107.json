{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"sizeY\", \"platform\"],\n  _excluded2 = [\"size\", \"mode\", \"appearance\", \"stretched\", \"align\", \"children\", \"before\", \"after\", \"getRootRef\", \"sizeY\", \"Component\", \"loading\", \"onClick\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport Tappable from \"../Tappable/Tappable\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { SizeType, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Headline from \"../Typography/Headline/Headline\";\nvar ButtonTypography = function ButtonTypography(props) {\n  var size = props.size,\n    sizeY = props.sizeY,\n    platform = props.platform,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var isCompact = sizeY === SizeType.COMPACT;\n  switch (size) {\n    case \"l\":\n      if (isCompact) {\n        return createScopedElement(Text, _extends({\n          weight: \"medium\"\n        }, restProps));\n      }\n      if (platform === ANDROID) {\n        return createScopedElement(Headline, _extends({\n          weight: \"medium\"\n        }, restProps));\n      }\n      return createScopedElement(Title, _extends({\n        level: \"3\",\n        weight: \"2\"\n      }, restProps));\n    case \"m\":\n      if (isCompact) {\n        return createScopedElement(Subhead, _extends({\n          weight: platform === VKCOM ? \"3\" : \"2\"\n        }, restProps));\n      }\n      return createScopedElement(Text, _extends({\n        weight: \"medium\"\n      }, restProps));\n    case \"s\":\n    default:\n      if (platform === IOS) {\n        return createScopedElement(Subhead, _extends({\n          weight: \"2\"\n        }, restProps));\n      }\n      if (platform === VKCOM) {\n        return createScopedElement(Caption, restProps);\n      }\n      if (isCompact) {\n        return createScopedElement(Caption, _extends({\n          weight: \"2\"\n        }, restProps));\n      }\n      return createScopedElement(Subhead, _extends({\n        weight: \"2\"\n      }, restProps));\n  }\n};\nfunction resolveButtonAppearance(appearance, mode) {\n  var resolvedAppearance = appearance;\n  var resolvedMode = mode;\n  if (appearance === undefined) {\n    switch (mode) {\n      case \"tertiary\":\n      case \"secondary\":\n      case \"primary\":\n      case \"outline\":\n        resolvedAppearance = \"accent\";\n        break;\n      case \"commerce\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"positive\";\n        break;\n      case \"destructive\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"negative\";\n        break;\n      case \"overlay_primary\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_secondary\":\n        resolvedMode = \"secondary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_outline\":\n        resolvedMode = \"outline\";\n        resolvedAppearance = \"overlay\";\n        break;\n    }\n  }\n  return {\n    resolvedAppearance: resolvedAppearance,\n    resolvedMode: resolvedMode\n  };\n}\nvar Button = function Button(props) {\n  var _classNames;\n  var platform = usePlatform();\n  var size = props.size,\n    mode = props.mode,\n    appearance = props.appearance,\n    stretched = props.stretched,\n    align = props.align,\n    children = props.children,\n    before = props.before,\n    after = props.after,\n    getRootRef = props.getRootRef,\n    sizeY = props.sizeY,\n    _props$Component = props.Component,\n    Component = _props$Component === void 0 ? \"button\" : _props$Component,\n    loading = props.loading,\n    onClick = props.onClick,\n    restProps = _objectWithoutProperties(props, _excluded2);\n  var hasIcons = Boolean(before || after);\n  var _resolveButtonAppeara = resolveButtonAppearance(appearance, mode),\n    resolvedMode = _resolveButtonAppeara.resolvedMode,\n    resolvedAppearance = _resolveButtonAppeara.resolvedAppearance;\n  var hasNewTokens = React.useContext(ConfigProviderContext).hasNewTokens;\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    Component: restProps.href ? \"a\" : Component,\n    onClick: loading ? undefined : onClick,\n    focusVisibleMode: \"outside\",\n    vkuiClass: classNames(\"Button\", \"Button--sz-\".concat(size), \"Button--lvl-\".concat(resolvedMode), \"Button--clr-\".concat(resolvedAppearance), \"Button--aln-\".concat(align), \"Button--sizeY-\".concat(sizeY), (_classNames = {}, _defineProperty(_classNames, \"Button--stretched\", stretched), _defineProperty(_classNames, \"Button--with-icon\", hasIcons), _defineProperty(_classNames, \"Button--singleIcon\", Boolean(!children && !after && before || !children && after && !before)), _classNames)),\n    getRootRef: getRootRef,\n    hoverMode: hasNewTokens ? \"Button--hover\" : \"background\",\n    activeMode: hasNewTokens ? \"Button--active\" : \"opacity\"\n  }), loading && createScopedElement(Spinner, {\n    size: \"small\",\n    vkuiClass: \"Button__spinner\"\n  }), createScopedElement(\"span\", {\n    vkuiClass: \"Button__in\"\n  }, before && createScopedElement(\"span\", {\n    vkuiClass: \"Button__before\"\n  }, before), children && createScopedElement(ButtonTypography, {\n    size: size,\n    sizeY: sizeY,\n    platform: platform,\n    vkuiClass: \"Button__content\",\n    Component: \"span\"\n  }, children), after && createScopedElement(\"span\", {\n    vkuiClass: \"Button__after\"\n  }, after)));\n};\nButton.defaultProps = {\n  mode: \"primary\",\n  align: \"center\",\n  size: \"s\",\n  stretched: false,\n  stopPropagation: true\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(Button, {\n  sizeY: true\n});","map":{"version":3,"mappings":"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","names":["React","classNames","ConfigProviderContext","Tappable","Title","Text","Subhead","Caption","usePlatform","SizeType","withAdaptivity","IOS","VKCOM","ANDROID","Spinner","Headline","ButtonTypography","props","size","sizeY","platform","restProps","isCompact","COMPACT","createScopedElement","weight","level","resolveButtonAppearance","appearance","mode","resolvedAppearance","resolvedMode","undefined","Button","stretched","align","children","before","after","getRootRef","_props$Component","Component","loading","onClick","hasIcons","Boolean","hasNewTokens","useContext","href","focusVisibleMode","vkuiClass","hoverMode","activeMode","defaultProps","stopPropagation"],"sources":["../../../src/components/Button/Button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport Tappable, { TappableProps } from \"../Tappable/Tappable\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { HasAlign, HasComponent } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport {\n  AdaptivityProps,\n  SizeType,\n  withAdaptivity,\n} from \"../../hoc/withAdaptivity\";\nimport { PlatformType, IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Headline from \"../Typography/Headline/Headline\";\nimport \"./Button.css\";\n\nexport interface VKUIButtonProps extends HasAlign {\n  /**\n   Значения `commerce`, `destructive`, `overlay_...` будут упразднены в 5.0.0\n   */\n  mode?:\n    | \"primary\"\n    | \"secondary\"\n    | \"tertiary\"\n    | \"outline\"\n    | \"commerce\"\n    | \"destructive\"\n    | \"overlay_primary\"\n    | \"overlay_secondary\"\n    | \"overlay_outline\";\n  appearance?: \"accent\" | \"positive\" | \"negative\" | \"neutral\" | \"overlay\";\n  size?: \"s\" | \"m\" | \"l\";\n  stretched?: boolean;\n  before?: React.ReactNode;\n  after?: React.ReactNode;\n  loading?: boolean;\n}\n\nexport interface ButtonProps\n  extends Omit<TappableProps, \"size\">,\n    VKUIButtonProps {}\n\ninterface ButtonTypographyProps extends HasComponent {\n  size: ButtonProps[\"size\"];\n  platform: PlatformType | undefined;\n  sizeY: AdaptivityProps[\"sizeY\"];\n  children?: ButtonProps[\"children\"];\n}\n\nconst ButtonTypography: React.FC<ButtonTypographyProps> = (\n  props: ButtonTypographyProps\n) => {\n  const { size, sizeY, platform, ...restProps } = props;\n  const isCompact = sizeY === SizeType.COMPACT;\n\n  switch (size) {\n    case \"l\":\n      if (isCompact) {\n        return <Text weight=\"medium\" {...restProps} />;\n      }\n      if (platform === ANDROID) {\n        return <Headline weight=\"medium\" {...restProps} />;\n      }\n      return <Title level=\"3\" weight=\"2\" {...restProps} />;\n    case \"m\":\n      if (isCompact) {\n        return (\n          <Subhead weight={platform === VKCOM ? \"3\" : \"2\"} {...restProps} />\n        );\n      }\n\n      return <Text weight=\"medium\" {...restProps} />;\n    case \"s\":\n    default:\n      if (platform === IOS) {\n        return <Subhead weight=\"2\" {...restProps} />;\n      }\n\n      if (platform === VKCOM) {\n        return <Caption {...restProps} />;\n      }\n\n      if (isCompact) {\n        return <Caption weight=\"2\" {...restProps} />;\n      }\n\n      return <Subhead weight=\"2\" {...restProps} />;\n  }\n};\n\ninterface ResolvedButtonAppearance {\n  resolvedAppearance: ButtonProps[\"appearance\"];\n  resolvedMode: ButtonProps[\"mode\"];\n}\n\nfunction resolveButtonAppearance(\n  appearance: ButtonProps[\"appearance\"],\n  mode: ButtonProps[\"mode\"]\n): ResolvedButtonAppearance {\n  let resolvedAppearance: ButtonProps[\"appearance\"] = appearance;\n  let resolvedMode: ButtonProps[\"mode\"] = mode;\n\n  if (appearance === undefined) {\n    switch (mode) {\n      case \"tertiary\":\n      case \"secondary\":\n      case \"primary\":\n      case \"outline\":\n        resolvedAppearance = \"accent\";\n        break;\n      case \"commerce\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"positive\";\n        break;\n      case \"destructive\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"negative\";\n        break;\n      case \"overlay_primary\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_secondary\":\n        resolvedMode = \"secondary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_outline\":\n        resolvedMode = \"outline\";\n        resolvedAppearance = \"overlay\";\n        break;\n    }\n  }\n\n  return {\n    resolvedAppearance,\n    resolvedMode,\n  };\n}\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  const {\n    size,\n    mode,\n    appearance,\n    stretched,\n    align,\n    children,\n    before,\n    after,\n    getRootRef,\n    sizeY,\n    Component = \"button\",\n    loading,\n    onClick,\n    ...restProps\n  } = props;\n  const hasIcons = Boolean(before || after);\n  const { resolvedMode, resolvedAppearance } = resolveButtonAppearance(\n    appearance,\n    mode\n  );\n  const hasNewTokens = React.useContext(ConfigProviderContext).hasNewTokens;\n\n  return (\n    <Tappable\n      {...restProps}\n      Component={restProps.href ? \"a\" : Component}\n      onClick={loading ? undefined : onClick}\n      focusVisibleMode=\"outside\"\n      vkuiClass={classNames(\n        \"Button\",\n        `Button--sz-${size}`,\n        `Button--lvl-${resolvedMode}`,\n        `Button--clr-${resolvedAppearance}`,\n        `Button--aln-${align}`,\n        `Button--sizeY-${sizeY}`,\n        {\n          [\"Button--stretched\"]: stretched,\n          [\"Button--with-icon\"]: hasIcons,\n          [\"Button--singleIcon\"]: Boolean(\n            (!children && !after && before) || (!children && after && !before)\n          ),\n        }\n      )}\n      getRootRef={getRootRef}\n      hoverMode={hasNewTokens ? \"Button--hover\" : \"background\"}\n      activeMode={hasNewTokens ? \"Button--active\" : \"opacity\"}\n    >\n      {loading && <Spinner size=\"small\" vkuiClass=\"Button__spinner\" />}\n      <span vkuiClass=\"Button__in\">\n        {before && <span vkuiClass=\"Button__before\">{before}</span>}\n        {children && (\n          <ButtonTypography\n            size={size}\n            sizeY={sizeY}\n            platform={platform}\n            vkuiClass=\"Button__content\"\n            Component=\"span\"\n          >\n            {children}\n          </ButtonTypography>\n        )}\n        {after && <span vkuiClass=\"Button__after\">{after}</span>}\n      </span>\n    </Tappable>\n  );\n};\n\nButton.defaultProps = {\n  mode: \"primary\",\n  align: \"center\",\n  size: \"s\",\n  stretched: false,\n  stopPropagation: true,\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(Button, {\n  sizeY: true,\n});\n"]},"metadata":{},"sourceType":"module"}