{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"Component\", \"onClose\", \"restoreFocus\", \"timeout\", \"getRootRef\", \"children\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { FOCUSABLE_ELEMENTS_LIST, Keys, pressedKey } from \"../../lib/accessibility\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop } from \"../../lib/utils\";\nimport { AppRootContext } from \"../AppRoot/AppRootContext\";\nvar FOCUSABLE_ELEMENTS = FOCUSABLE_ELEMENTS_LIST.join();\nexport var FocusTrap = function FocusTrap(_ref) {\n  var _ref$Component = _ref.Component,\n    Component = _ref$Component === void 0 ? \"div\" : _ref$Component,\n    _ref$onClose = _ref.onClose,\n    onClose = _ref$onClose === void 0 ? noop : _ref$onClose,\n    _ref$restoreFocus = _ref.restoreFocus,\n    restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n    _ref$timeout = _ref.timeout,\n    timeout = _ref$timeout === void 0 ? 0 : _ref$timeout,\n    getRootRef = _ref.getRootRef,\n    children = _ref.children,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var ref = useExternRef(getRootRef);\n  var _useDOM = useDOM(),\n    document = _useDOM.document,\n    window = _useDOM.window;\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focusableNodes = _React$useState2[0],\n    setFocusableNodes = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    restoreFocusTo = _React$useState4[0],\n    setRestoreFocusTo = _React$useState4[1]; // HANDLE TRAP MOUNT\n\n  var _React$useContext = React.useContext(AppRootContext),\n    keyboardInput = _React$useContext.keyboardInput;\n  var focusOnTrapMount = useTimeout(function () {\n    var _ref$current;\n    if (keyboardInput && !((_ref$current = ref.current) !== null && _ref$current !== void 0 && _ref$current.contains(document.activeElement)) && focusableNodes !== null && focusableNodes !== void 0 && focusableNodes.length) {\n      focusableNodes[0].focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(function () {\n    focusOnTrapMount.set();\n  }, []); // HANDLE FOCUSABLE NODES\n\n  useIsomorphicLayoutEffect(function () {\n    if (!ref.current) {\n      return noop();\n    }\n    var nodes = [];\n    Array.prototype.forEach.call(\n    // eslint-disable-next-line no-restricted-properties\n    ref.current.querySelectorAll(FOCUSABLE_ELEMENTS), function (focusableEl) {\n      var _getComputedStyle = window.getComputedStyle(focusableEl),\n        display = _getComputedStyle.display,\n        visibility = _getComputedStyle.visibility;\n      if (display !== \"none\" && visibility !== \"hidden\") {\n        nodes.push(focusableEl);\n      }\n    });\n    if (nodes !== null && nodes !== void 0 && nodes.length) {\n      setFocusableNodes(nodes);\n    }\n    return noop();\n  }, [children]); // HANDLE TRAP UNMOUNT\n\n  var focusOnTrapUnmount = useTimeout(function () {\n    if (restoreFocusTo) {\n      restoreFocusTo.focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(function () {\n    if (restoreFocus && document.activeElement) {\n      setRestoreFocusTo(document.activeElement);\n      return function () {\n        focusOnTrapUnmount.set();\n      };\n    }\n    return noop();\n  }, [restoreFocus]);\n  var onDocumentKeydown = function onDocumentKeydown(e) {\n    if (pressedKey(e) === Keys.TAB && focusableNodes !== null && focusableNodes !== void 0 && focusableNodes.length) {\n      var lastIdx = focusableNodes.length - 1;\n      var targetIdx = focusableNodes.findIndex(function (node) {\n        return node === e.target;\n      });\n      var shouldFocusFirstNode = targetIdx === -1 || targetIdx === lastIdx && !e.shiftKey;\n      if (shouldFocusFirstNode || targetIdx === 0 && e.shiftKey) {\n        e.preventDefault();\n        var node = focusableNodes[shouldFocusFirstNode ? 0 : lastIdx];\n        if (node !== document.activeElement) {\n          node.focus();\n        }\n        return false;\n      }\n    }\n    if (pressedKey(e) === Keys.ESCAPE) {\n      onClose();\n    }\n    return true;\n  };\n  useGlobalEventListener(document, \"keydown\", onDocumentKeydown, {\n    capture: true\n  });\n  return createScopedElement(Component, _extends({\n    ref: ref\n  }, restProps), children);\n};","map":{"version":3,"mappings":"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","names":["React","useExternRef","useGlobalEventListener","useTimeout","FOCUSABLE_ELEMENTS_LIST","Keys","pressedKey","useDOM","useIsomorphicLayoutEffect","noop","AppRootContext","FOCUSABLE_ELEMENTS","join","FocusTrap","Component","_ref$onClose","onClose","_ref$restoreFocus","restoreFocus","_ref$timeout","timeout","getRootRef","children","restProps","ref","document","window","useState","_React$useState2","focusableNodes","setFocusableNodes","_React$useState4","restoreFocusTo","setRestoreFocusTo","useContext","keyboardInput","focusOnTrapMount","current","_ref$current","contains","activeElement","length","focus","set","nodes","Array","prototype","forEach","call","querySelectorAll","focusableEl","getComputedStyle","display","visibility","push","focusOnTrapUnmount","onDocumentKeydown","e","TAB","lastIdx","targetIdx","findIndex","node","target","shouldFocusFirstNode","shiftKey","preventDefault","ESCAPE","capture","createScopedElement"],"sources":["../../../src/components/FocusTrap/FocusTrap.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport {\n  FOCUSABLE_ELEMENTS_LIST,\n  Keys,\n  pressedKey,\n} from \"../../lib/accessibility\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop } from \"../../lib/utils\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { AppRootContext } from \"../AppRoot/AppRootContext\";\n\nconst FOCUSABLE_ELEMENTS: string = FOCUSABLE_ELEMENTS_LIST.join();\n\nexport interface FocusTrapProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  onClose?: (props?: any) => void;\n  restoreFocus?: boolean;\n  timeout?: number;\n}\n\nexport const FocusTrap: React.FC<FocusTrapProps> = ({\n  Component = \"div\",\n  onClose = noop,\n  restoreFocus = true,\n  timeout = 0,\n  getRootRef,\n  children,\n  ...restProps\n}) => {\n  const ref = useExternRef<HTMLElement>(getRootRef);\n\n  const { document, window } = useDOM();\n\n  const [focusableNodes, setFocusableNodes] = React.useState<\n    HTMLElement[] | null\n  >(null);\n  const [restoreFocusTo, setRestoreFocusTo] =\n    React.useState<HTMLElement | null>(null);\n\n  // HANDLE TRAP MOUNT\n\n  const { keyboardInput } = React.useContext(AppRootContext);\n  const focusOnTrapMount = useTimeout(() => {\n    if (\n      keyboardInput &&\n      !ref.current?.contains(document!.activeElement) &&\n      focusableNodes?.length\n    ) {\n      focusableNodes[0].focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    focusOnTrapMount.set();\n  }, []);\n\n  // HANDLE FOCUSABLE NODES\n\n  useIsomorphicLayoutEffect(() => {\n    if (!ref.current) {\n      return noop();\n    }\n\n    const nodes: HTMLElement[] = [];\n    Array.prototype.forEach.call(\n      // eslint-disable-next-line no-restricted-properties\n      ref.current.querySelectorAll(FOCUSABLE_ELEMENTS),\n      (focusableEl: Element) => {\n        const { display, visibility } = window!.getComputedStyle(focusableEl);\n\n        if (display !== \"none\" && visibility !== \"hidden\") {\n          nodes.push(focusableEl as HTMLElement);\n        }\n      }\n    );\n\n    if (nodes?.length) {\n      setFocusableNodes(nodes);\n    }\n\n    return noop();\n  }, [children]);\n\n  // HANDLE TRAP UNMOUNT\n\n  const focusOnTrapUnmount = useTimeout(() => {\n    if (restoreFocusTo) {\n      restoreFocusTo.focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    if (restoreFocus && document!.activeElement) {\n      setRestoreFocusTo(document!.activeElement as HTMLElement);\n\n      return () => {\n        focusOnTrapUnmount.set();\n      };\n    }\n\n    return noop();\n  }, [restoreFocus]);\n\n  const onDocumentKeydown = (e: KeyboardEvent) => {\n    if (pressedKey(e) === Keys.TAB && focusableNodes?.length) {\n      const lastIdx = focusableNodes.length - 1;\n      const targetIdx = focusableNodes.findIndex((node) => node === e.target);\n\n      const shouldFocusFirstNode =\n        targetIdx === -1 || (targetIdx === lastIdx && !e.shiftKey);\n\n      if (shouldFocusFirstNode || (targetIdx === 0 && e.shiftKey)) {\n        e.preventDefault();\n\n        const node = focusableNodes[shouldFocusFirstNode ? 0 : lastIdx];\n\n        if (node !== document!.activeElement) {\n          node.focus();\n        }\n\n        return false;\n      }\n    }\n\n    if (pressedKey(e) === Keys.ESCAPE) {\n      onClose();\n    }\n\n    return true;\n  };\n  useGlobalEventListener(document, \"keydown\", onDocumentKeydown, {\n    capture: true,\n  });\n\n  return (\n    <Component ref={ref} {...restProps}>\n      {children}\n    </Component>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}