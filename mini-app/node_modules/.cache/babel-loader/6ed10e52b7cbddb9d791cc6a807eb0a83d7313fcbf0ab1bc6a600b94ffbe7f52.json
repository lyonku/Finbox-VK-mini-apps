{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onChange\", \"defaultValue\", \"min\", \"max\", \"value\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { clamp } from \"../../helpers/math\";\nimport { UniversalSlider } from \"../RangeSlider/UniversalSlider\";\nvar Slider = function Slider(_ref) {\n  var onChange = _ref.onChange,\n    defaultValue = _ref.defaultValue,\n    _ref$min = _ref.min,\n    min = _ref$min === void 0 ? 0 : _ref$min,\n    _ref$max = _ref.max,\n    max = _ref$max === void 0 ? 100 : _ref$max,\n    _ref$value = _ref.value,\n    value = _ref$value === void 0 ? 0 : _ref$value,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var isControlled = value != null;\n  var _React$useState = React.useState(defaultValue == null ? min : defaultValue),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    localValue = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var _value = clamp(isControlled ? value : localValue, min, max);\n  var handleChange = React.useCallback(function (nextValue, event) {\n    if (props.disabled || _value === nextValue[1]) {\n      return;\n    }\n    !isControlled && setValue(nextValue[1]);\n    onChange && onChange(nextValue[1], event);\n  }, [props.disabled, _value, isControlled, onChange]);\n  var rangeValue = React.useMemo(function () {\n    return [null, _value];\n  }, [_value]);\n  return createScopedElement(UniversalSlider, _extends({}, props, {\n    value: rangeValue,\n    onChange: handleChange,\n    min: min,\n    max: max\n  }));\n}; // eslint-disable-next-line import/no-default-export\n\nexport default Slider;","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT;AACA,SACEC,eADF;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAOI;EAAA,IANjBC,QAMiB,QANjBA,QAMiB;IALjBC,YAKiB,QALjBA,YAKiB;IAAAC,gBAJjBC,GAIiB;IAJjBA,GAIiB,yBAJX,CAIW;IAAAC,gBAHjBC,GAGiB;IAHjBA,GAGiB,yBAHX,GAGW;IAAAC,kBAFjBC,KAEiB;IAFjBA,KAEiB,2BAFT,CAES;IADdC,KACc;EACjB,IAAMC,YAAY,GAAGF,KAAK,IAAI,IAA9B;EAEA,sBAA+BX,KAAK,CAACc,QAAN,CAC7BT,YAAY,IAAI,IAAhB,GAAuBE,GAAvB,GAA6BF,YADA,CAA/B;IAAAU;IAAOC,UAAP;IAAmBC,QAAnB;EAGA,IAAMC,MAAM,GAAGjB,KAAK,CAACY,YAAY,GAAGF,KAAH,GAAWK,UAAxB,EAAoCT,GAApC,EAAyCE,GAAzC,CAApB;EAEA,IAAMU,YAA8D,GAClEnB,KAAK,CAACoB,WAAN,CACE,UAACC,SAAD,EAAYC,KAAZ,EAAsB;IACpB,IAAIV,KAAK,CAACW,QAAN,IAAkBL,MAAM,KAAKG,SAAS,CAAC,CAAD,CAA1C,EAA+C;MAC7C;IACD;IACD,CAACR,YAAD,IAAiBI,QAAQ,CAACI,SAAS,CAAC,CAAD,CAAV,CAAzB;IACAjB,QAAQ,IAAIA,QAAQ,CAACiB,SAAS,CAAC,CAAD,CAAV,EAAeC,KAAf,CAApB;EACD,CAPH,EAQE,CAACV,KAAK,CAACW,QAAP,EAAiBL,MAAjB,EAAyBL,YAAzB,EAAuCT,QAAvC,CARF,CADF;EAYA,IAAMoB,UAA0B,GAAGxB,KAAK,CAACyB,OAAN,CACjC;IAAA,OAAM,CAAC,IAAD,EAAOP,MAAP,CAAN;EAAA,CADiC,EAEjC,CAACA,MAAD,CAFiC,CAAnC;EAIA,OACEQ,oBAACxB,eAAD,eACMU,KADN;IAEED,KAAK,EAAEa,UAFT;IAGEpB,QAAQ,EAAEe,YAHZ;IAIEZ,GAAG,EAAEA,GAJP;IAKEE,GAAG,EAAEA;EALP,GADF;AASD,CAxCD,C,CA0CA;;AACA,eAAeN,MAAf","names":["React","clamp","UniversalSlider","Slider","onChange","defaultValue","_ref$min","min","_ref$max","max","_ref$value","value","props","isControlled","useState","_React$useState2","localValue","setValue","_value","handleChange","useCallback","nextValue","event","disabled","rangeValue","useMemo","createScopedElement"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\Slider\\Slider.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { clamp } from \"../../helpers/math\";\nimport {\n  UniversalSlider,\n  UniversalSliderProps,\n  UniversalValue,\n} from \"../RangeSlider/UniversalSlider\";\n\nexport type SliderProps = UniversalSliderProps<number>;\n\nconst Slider = ({\n  onChange,\n  defaultValue,\n  min = 0,\n  max = 100,\n  value = 0,\n  ...props\n}: SliderProps) => {\n  const isControlled = value != null;\n\n  const [localValue, setValue] = React.useState(\n    defaultValue == null ? min : defaultValue\n  );\n  const _value = clamp(isControlled ? value : localValue, min, max);\n\n  const handleChange: UniversalSliderProps<UniversalValue>[\"onChange\"] =\n    React.useCallback(\n      (nextValue, event) => {\n        if (props.disabled || _value === nextValue[1]) {\n          return;\n        }\n        !isControlled && setValue(nextValue[1]);\n        onChange && onChange(nextValue[1], event);\n      },\n      [props.disabled, _value, isControlled, onChange]\n    );\n\n  const rangeValue: [null, number] = React.useMemo(\n    () => [null, _value],\n    [_value]\n  );\n  return (\n    <UniversalSlider\n      {...props}\n      value={rangeValue}\n      onChange={handleChange}\n      min={min}\n      max={max}\n    />\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default Slider;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}