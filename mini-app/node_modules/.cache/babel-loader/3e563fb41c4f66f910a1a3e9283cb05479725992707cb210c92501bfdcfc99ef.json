{"ast":null,"code":"import _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nvar findAllIncludes = function findAllIncludes() {\n  var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var includes = [];\n  var i = target.indexOf(search);\n  while (i !== -1) {\n    includes.push(i);\n    i = target.indexOf(search, i + 1);\n  }\n  return includes;\n};\nvar letterRegexp; // На момент написания флаг u не поддерживался рядом браузеров, поэтому добавили фоллбэк.\n\ntry {\n  letterRegexp = new RegExp(\"\\\\p{L}\", \"u\");\n} catch (e) {}\nexport var defaultFilterFn = function defaultFilterFn() {\n  var _getOptionLabel;\n  var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var option = arguments.length > 1 ? arguments[1] : undefined;\n  var getOptionLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (option) {\n    return option.label;\n  };\n  query = query.toLocaleLowerCase();\n  var label = (_getOptionLabel = getOptionLabel(option)) === null || _getOptionLabel === void 0 ? void 0 : _getOptionLabel.toLocaleLowerCase();\n  if (label !== null && label !== void 0 && label.startsWith(query)) {\n    return true;\n  }\n  var includes = findAllIncludes(label, query); // Ищем вхождение перед началом которого не буква\n\n  if (letterRegexp && label) {\n    var _iterator = _createForOfIteratorHelper(includes),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _index = _step.value;\n        if (!letterRegexp.test(label[_index - 1])) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    // если regexp не поддерживается, то ищем любое вхождение\n    return includes.length > 0;\n  }\n  return false;\n};","map":{"version":3,"mappings":";AAOA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAA8B;EAAA,IAA7BC,MAA6B,uEAApB,EAAoB;EAAA,IAAhBC,MAAgB,uEAAP,EAAO;EACpD,IAAMC,QAAQ,GAAG,EAAjB;EAEA,IAAIC,CAAC,GAAGH,MAAM,CAACI,OAAP,CAAeH,MAAf,CAAR;EACA,OAAOE,CAAC,KAAK,CAAC,CAAd,EAAiB;IACfD,QAAQ,CAACG,IAAT,CAAcF,CAAd;IACAA,CAAC,GAAGH,MAAM,CAACI,OAAP,CAAeH,MAAf,EAAuBE,CAAC,GAAG,CAA3B,CAAJ;EACD;EAED,OAAOD,QAAP;AACD,CAVD;AAYA,IAAII,YAAJ,C,CAEA;;AACA,IAAI;EACFA,YAAY,GAAG,IAAIC,MAAJ,CAAW,QAAX,EAAqB,GAArB,CAAf;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;AAEd,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAI1B;EAAA;EAAA,IAHHC,KAGG,uEAHK,EAGL;EAAA,IAFHC,MAEG;EAAA,IADHC,cACG,uEAD8B,UAACD,MAAD;IAAA,OAAYA,MAAM,CAACE,KAAnB;EAAA,CAC9B;EACHH,KAAK,GAAGA,KAAK,CAACI,iBAAN,EAAR;EACA,IAAID,KAAK,sBAAGD,cAAc,CAACD,MAAD,CAAjB,oDAAGI,gBAAwBD,iBAAxB,EAAZ;EAEA,IAAID,KAAJ,aAAIA,KAAJ,eAAIA,KAAK,CAAEG,UAAP,CAAkBN,KAAlB,CAAJ,EAA8B;IAC5B,OAAO,IAAP;EACD;EAED,IAAMR,QAAQ,GAAGH,eAAe,CAACc,KAAD,EAAQH,KAAR,CAAhC,CARG,CAUH;;EACA,IAAIJ,YAAY,IAAIO,KAApB,EAA2B;IAAA,2CACLX,QADK;MAAAe;IAAA;MACzB,oDAA8B;QAAA,IAAnBC,MAAmB;QAC5B,IAAI,CAACZ,YAAY,CAACa,IAAb,CAAkBN,KAAK,CAACK,MAAK,GAAG,CAAT,CAAvB,CAAL,EAA0C;UACxC,OAAO,IAAP;QACD;MACF;IALwB;MAAAE;IAAA;MAAAA;IAAA;EAM1B,CAND,MAMO;IACL;IACA,OAAOlB,QAAQ,CAACmB,MAAT,GAAkB,CAAzB;EACD;EAED,OAAO,KAAP;AACD,CA3BM","names":["findAllIncludes","target","search","includes","i","indexOf","push","letterRegexp","RegExp","e","defaultFilterFn","query","option","getOptionLabel","label","toLocaleLowerCase","_getOptionLabel","startsWith","_step","index","test","_iterator","length"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\lib\\select.ts"],"sourcesContent":["type Option = {\n  label?: string;\n  [index: string]: any;\n};\n\ntype GetOptionLabel = (option: Option) => string | undefined;\n\nconst findAllIncludes = (target = \"\", search = \"\") => {\n  const includes = [];\n\n  let i = target.indexOf(search);\n  while (i !== -1) {\n    includes.push(i);\n    i = target.indexOf(search, i + 1);\n  }\n\n  return includes;\n};\n\nlet letterRegexp: RegExp;\n\n// На момент написания флаг u не поддерживался рядом браузеров, поэтому добавили фоллбэк.\ntry {\n  letterRegexp = new RegExp(\"\\\\p{L}\", \"u\");\n} catch (e) {}\n\nexport const defaultFilterFn = (\n  query = \"\",\n  option: Option,\n  getOptionLabel: GetOptionLabel = (option) => option.label\n) => {\n  query = query.toLocaleLowerCase();\n  let label = getOptionLabel(option)?.toLocaleLowerCase();\n\n  if (label?.startsWith(query)) {\n    return true;\n  }\n\n  const includes = findAllIncludes(label, query);\n\n  // Ищем вхождение перед началом которого не буква\n  if (letterRegexp && label) {\n    for (const index of includes) {\n      if (!letterRegexp.test(label[index - 1])) {\n        return true;\n      }\n    }\n  } else {\n    // если regexp не поддерживается, то ищем любое вхождение\n    return includes.length > 0;\n  }\n\n  return false;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}