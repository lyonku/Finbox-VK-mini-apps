{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"children\", \"Component\", \"onClick\", \"onKeyDown\", \"activeEffectDelay\", \"stopPropagation\", \"getRootRef\", \"sizeX\", \"hasMouse\", \"deviceHasHover\", \"hasHover\", \"hoverMode\", \"hasActive\", \"activeMode\", \"focusVisibleMode\", \"onEnter\", \"onLeave\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport mitt from \"mitt\";\nimport { noop } from \"@vkontakte/vkjs\";\nimport { Touch } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { ANDROID } from \"../../lib/platform\";\nimport { getOffsetRect } from \"../../lib/offset\";\nimport { coordX, coordY } from \"../../lib/touch\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { shouldTriggerClickOnEnterOrSpace } from \"../../lib/accessibility\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { FocusVisible } from \"../FocusVisible/FocusVisible\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useFocusVisible } from \"../../hooks/useFocusVisible\";\nimport { callMultiple } from \"../../lib/callMultiple\";\nimport { useBooleanState } from \"../../hooks/useBooleanState\";\nexport var ACTIVE_DELAY = 70;\nexport var ACTIVE_EFFECT_DELAY = 600;\nvar activeBus = mitt();\nvar TapState = {\n  none: 0,\n  pending: 1,\n  active: 2,\n  exiting: 3\n};\nvar TappableContext = /*#__PURE__*/React.createContext({\n  onHoverChange: noop\n});\nfunction useActivity(hasActive, stopDelay) {\n  var id = React.useMemo(function () {\n    return Math.round(Math.random() * 1e8).toString(16);\n  }, []);\n  var _React$useState = React.useState(TapState.none),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activity = _React$useState2[0],\n    setActivity = _React$useState2[1];\n  var _stop = function _stop() {\n    return setActivity(TapState.none);\n  };\n  var start = function start() {\n    return hasActive && setActivity(TapState.active);\n  };\n  var delayStart = function delayStart() {\n    hasActive && setActivity(TapState.pending);\n  };\n  var activeTimeout = useTimeout(start, ACTIVE_DELAY);\n  var stopTimeout = useTimeout(_stop, stopDelay);\n  useIsomorphicLayoutEffect(function () {\n    if (activity === TapState.pending) {\n      activeTimeout.set();\n      return activeTimeout.clear;\n    }\n    if (activity === TapState.exiting) {\n      return stopTimeout.clear;\n    }\n    if (activity === TapState.active) {\n      activeBus.emit(\"active\", id);\n    }\n    return noop;\n  }, [activity]);\n  useIsomorphicLayoutEffect(function () {\n    if (activity === TapState.none) {\n      return noop;\n    }\n    var onActiveChange = function onActiveChange(activeId) {\n      activeId !== id && _stop();\n    };\n    activeBus.on(\"active\", onActiveChange);\n    return function () {\n      return activeBus.off(\"active\", onActiveChange);\n    };\n  }, [activity === TapState.none]);\n  useIsomorphicLayoutEffect(function () {\n    !hasActive && _stop();\n  }, [hasActive]);\n  var stop = function stop(delay) {\n    if (delay) {\n      setActivity(TapState.exiting);\n      return stopTimeout.set(delay);\n    }\n    _stop();\n  };\n  return [activity, {\n    delayStart: delayStart,\n    start: start,\n    stop: stop\n  }];\n}\nvar Tappable = function Tappable(_ref) {\n  var _classNames;\n  var children = _ref.children,\n    Component = _ref.Component,\n    onClick = _ref.onClick,\n    _onKeyDown = _ref.onKeyDown,\n    _ref$activeEffectDela = _ref.activeEffectDelay,\n    activeEffectDelay = _ref$activeEffectDela === void 0 ? ACTIVE_EFFECT_DELAY : _ref$activeEffectDela,\n    _ref$stopPropagation = _ref.stopPropagation,\n    stopPropagation = _ref$stopPropagation === void 0 ? false : _ref$stopPropagation,\n    getRootRef = _ref.getRootRef,\n    sizeX = _ref.sizeX,\n    hasMouse = _ref.hasMouse,\n    deviceHasHover = _ref.deviceHasHover,\n    _ref$hasHover = _ref.hasHover,\n    _hasHover = _ref$hasHover === void 0 ? true : _ref$hasHover,\n    _ref$hoverMode = _ref.hoverMode,\n    hoverMode = _ref$hoverMode === void 0 ? \"background\" : _ref$hoverMode,\n    _ref$hasActive = _ref.hasActive,\n    _hasActive = _ref$hasActive === void 0 ? true : _ref$hasActive,\n    _ref$activeMode = _ref.activeMode,\n    activeMode = _ref$activeMode === void 0 ? \"background\" : _ref$activeMode,\n    _ref$focusVisibleMode = _ref.focusVisibleMode,\n    focusVisibleMode = _ref$focusVisibleMode === void 0 ? \"inside\" : _ref$focusVisibleMode,\n    onEnter = _ref.onEnter,\n    onLeave = _ref.onLeave,\n    props = _objectWithoutProperties(_ref, _excluded);\n  Component = Component || (props.href ? \"a\" : \"div\");\n  var _React$useContext = React.useContext(TappableContext),\n    onHoverChange = _React$useContext.onHoverChange;\n  var insideTouchRoot = React.useContext(TouchRootContext);\n  var platform = usePlatform();\n  var _useFocusVisible = useFocusVisible(),\n    focusVisible = _useFocusVisible.focusVisible,\n    onBlur = _useFocusVisible.onBlur,\n    onFocus = _useFocusVisible.onFocus;\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    clicks = _React$useState4[0],\n    setClicks = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    childHover = _React$useState6[0],\n    setChildHover = _React$useState6[1];\n  var _useBooleanState = useBooleanState(false),\n    _hovered = _useBooleanState.value,\n    setHoveredTrue = _useBooleanState.setTrue,\n    setHoveredFalse = _useBooleanState.setFalse;\n  var hovered = _hovered && !props.disabled;\n  var hasActive = _hasActive && !childHover && !props.disabled;\n  var hasHover = deviceHasHover && _hasHover && !childHover;\n  var isCustomElement = Component !== \"a\" && Component !== \"button\" && !props.contentEditable;\n  var isPresetHoverMode = [\"opacity\", \"background\"].includes(hoverMode);\n  var isPresetActiveMode = [\"opacity\", \"background\"].includes(activeMode);\n  var isPresetFocusVisibleMode = [\"inside\", \"outside\"].includes(focusVisibleMode);\n  var _useActivity = useActivity(hasActive, activeEffectDelay),\n    _useActivity2 = _slicedToArray(_useActivity, 2),\n    activity = _useActivity2[0],\n    _useActivity2$ = _useActivity2[1],\n    start = _useActivity2$.start,\n    stop = _useActivity2$.stop,\n    delayStart = _useActivity2$.delayStart;\n  var active = activity === TapState.active || activity === TapState.exiting;\n  var containerRef = useExternRef(getRootRef); // hover propagation\n\n  var childContext = React.useRef({\n    onHoverChange: setChildHover\n  }).current;\n  useIsomorphicLayoutEffect(function () {\n    if (!hovered) {\n      return noop;\n    }\n    onHoverChange(true);\n    return function () {\n      return onHoverChange(false);\n    };\n  }, [hovered]);\n  /*\n   * [a11y]\n   * Обрабатывает событие onkeydown\n   * для кастомных доступных элементов:\n   * - role=\"link\" (активация по Enter)\n   * - role=\"button\" (активация по Space и Enter)\n   */\n\n  function onKeyDown(e) {\n    if (isCustomElement && shouldTriggerClickOnEnterOrSpace(e)) {\n      var _containerRef$current;\n      e.preventDefault();\n      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.click();\n    }\n  }\n  function onStart(_ref2) {\n    var originalEvent = _ref2.originalEvent;\n    if (hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        // r сожалению я так и не понял, что это делает и можно ли упихнуть его в Touch\n        return stop();\n      }\n      if (platform === ANDROID) {\n        var _getOffsetRect = getOffsetRect(containerRef.current),\n          top = _getOffsetRect.top,\n          left = _getOffsetRect.left;\n        var x = coordX(originalEvent) - (left !== null && left !== void 0 ? left : 0);\n        var y = coordY(originalEvent) - (top !== null && top !== void 0 ? top : 0);\n        setClicks([].concat(_toConsumableArray(clicks), [{\n          x: x,\n          y: y,\n          id: Date.now().toString()\n        }]));\n      }\n      delayStart();\n    }\n  }\n  function onMove(_ref3) {\n    var isSlide = _ref3.isSlide;\n    if (isSlide) {\n      stop();\n    }\n  }\n  function onEnd(_ref4) {\n    var duration = _ref4.duration;\n    if (activity === TapState.none) {\n      return;\n    }\n    if (activity === TapState.pending) {\n      // активировать при коротком тапе\n      start();\n    } // отключить без задержки при длинном тапе\n\n    var activeDuraion = duration - ACTIVE_DELAY;\n    stop(activeDuraion >= 100 ? 0 : activeEffectDelay - activeDuraion);\n  }\n  var classes = classNames(getClassName(\"Tappable\", platform), \"Tappable--sizeX-\".concat(sizeX), hasHover && hovered && !isPresetHoverMode && hoverMode, hasActive && active && !isPresetActiveMode && activeMode, focusVisible && !isPresetFocusVisibleMode && focusVisibleMode, (_classNames = {\n    \"Tappable--active\": hasActive && active,\n    \"Tappable--mouse\": hasMouse\n  }, _defineProperty(_classNames, \"Tappable--hover-\".concat(hoverMode), hasHover && hovered && isPresetHoverMode), _defineProperty(_classNames, \"Tappable--active-\".concat(activeMode), hasActive && active && isPresetActiveMode), _defineProperty(_classNames, \"Tappable--focus-visible\", focusVisible), _classNames));\n  var handlers = {\n    onStart: callMultiple(onStart, props.onStart),\n    onMove: callMultiple(onMove, props.onMove),\n    onEnd: callMultiple(onEnd, props.onEnd),\n    onClick: onClick,\n    onKeyDown: callMultiple(onKeyDown, _onKeyDown)\n  };\n  var role = props.href ? \"link\" : \"button\";\n  return createScopedElement(Touch, _extends({\n    onEnter: callMultiple(setHoveredTrue, onEnter),\n    onLeave: callMultiple(setHoveredFalse, onLeave),\n    type: Component === \"button\" ? \"button\" : undefined,\n    tabIndex: isCustomElement && !props.disabled ? 0 : undefined,\n    role: isCustomElement ? role : undefined,\n    \"aria-disabled\": isCustomElement ? props.disabled : undefined,\n    stopPropagation: stopPropagation && !insideTouchRoot && !props.disabled\n  }, props, {\n    slideThreshold: 20,\n    usePointerHover: true,\n    vkuiClass: classes,\n    Component: Component,\n    getRootRef: containerRef,\n    onBlur: callMultiple(onBlur, props.onBlur),\n    onFocus: callMultiple(onFocus, props.onFocus)\n  }, props.disabled ? {} : handlers), createScopedElement(TappableContext.Provider, {\n    value: childContext\n  }, children), platform === ANDROID && !hasMouse && hasActive && activeMode === \"background\" && createScopedElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    vkuiClass: \"Tappable__waves\"\n  }, clicks.map(function (wave) {\n    return createScopedElement(Wave, _extends({}, wave, {\n      key: wave.id,\n      onClear: function onClear() {\n        return setClicks(clicks.filter(function (c) {\n          return c.id !== wave.id;\n        }));\n      }\n    }));\n  })), hasHover && hoverMode === \"background\" && createScopedElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    vkuiClass: \"Tappable__hoverShadow\"\n  }), !props.disabled && isPresetFocusVisibleMode && createScopedElement(FocusVisible, {\n    mode: focusVisibleMode\n  }));\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(Tappable, {\n  sizeX: true,\n  hasMouse: true,\n  deviceHasHover: true\n});\nfunction Wave(_ref5) {\n  var x = _ref5.x,\n    y = _ref5.y,\n    onClear = _ref5.onClear;\n  var timeout = useTimeout(onClear, 225);\n  React.useEffect(function () {\n    return timeout.set();\n  }, [timeout]);\n  return createScopedElement(\"span\", {\n    vkuiClass: \"Tappable__wave\",\n    style: {\n      top: y,\n      left: x\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["React","mitt","noop","Touch","TouchRootContext","classNames","getClassName","ANDROID","getOffsetRect","coordX","coordY","withAdaptivity","shouldTriggerClickOnEnterOrSpace","useIsomorphicLayoutEffect","FocusVisible","useTimeout","useExternRef","usePlatform","useFocusVisible","callMultiple","useBooleanState","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","activeBus","TapState","none","pending","active","exiting","TappableContext","createContext","onHoverChange","useActivity","hasActive","stopDelay","id","useMemo","Math","round","random","toString","useState","_React$useState2","activity","setActivity","_stop","start","delayStart","activeTimeout","stopTimeout","set","clear","emit","onActiveChange","activeId","on","off","stop","delay","Tappable","children","Component","onClick","_onKeyDown","onKeyDown","_ref$activeEffectDela","activeEffectDelay","_ref$stopPropagation","stopPropagation","getRootRef","sizeX","hasMouse","deviceHasHover","_ref$hasHover","hasHover","_hasHover","_ref$hoverMode","hoverMode","_ref$hasActive","_hasActive","_ref$activeMode","activeMode","_ref$focusVisibleMode","focusVisibleMode","onEnter","onLeave","props","href","useContext","insideTouchRoot","platform","focusVisible","onBlur","onFocus","_React$useState4","clicks","setClicks","_React$useState6","childHover","setChildHover","_hovered","value","setHoveredTrue","setTrue","setHoveredFalse","setFalse","hovered","disabled","isCustomElement","contentEditable","isPresetHoverMode","includes","isPresetActiveMode","isPresetFocusVisibleMode","_useActivity2","_useActivity2$","containerRef","childContext","useRef","current","e","preventDefault","click","onStart","originalEvent","touches","length","top","left","x","y","Date","now","onMove","isSlide","onEnd","duration","activeDuraion","classes","handlers","role","createScopedElement","type","undefined","tabIndex","slideThreshold","usePointerHover","vkuiClass","Provider","map","wave","Wave","key","onClear","filter","c","mode","timeout","useEffect","style"],"sources":["../../../src/components/Tappable/Tappable.tsx"],"sourcesContent":["import * as React from \"react\";\nimport mitt from \"mitt\";\nimport { noop } from \"@vkontakte/vkjs\";\nimport { Touch, TouchEvent, TouchProps } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { ANDROID } from \"../../lib/platform\";\nimport { getOffsetRect } from \"../../lib/offset\";\nimport { coordX, coordY } from \"../../lib/touch\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { shouldTriggerClickOnEnterOrSpace } from \"../../lib/accessibility\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { FocusVisible, FocusVisibleMode } from \"../FocusVisible/FocusVisible\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useFocusVisible } from \"../../hooks/useFocusVisible\";\nimport { callMultiple } from \"../../lib/callMultiple\";\nimport { useBooleanState } from \"../../hooks/useBooleanState\";\nimport \"./Tappable.css\";\n\nexport interface TappableProps\n  extends Omit<\n      React.AllHTMLAttributes<HTMLElement>,\n      | \"onTouchStart\"\n      | \"onTouchMove\"\n      | \"onTouchEnd\"\n      | \"onTouchCancel\"\n      | \"onMouseDown\"\n      | \"onMouseMove\"\n      | \"onMouseUp\"\n      | \"onMouseLeave\"\n    >,\n    HasRootRef<HTMLElement>,\n    AdaptivityProps,\n    HasComponent,\n    Pick<TouchProps, \"onStart\" | \"onEnd\" | \"onMove\"> {\n  /**\n   * Длительность показа active-состояния\n   */\n  activeEffectDelay?: number;\n  stopPropagation?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на hover-состояние\n   */\n  hasHover?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на active-состояние\n   */\n  hasActive?: boolean;\n  /**\n   * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active\n   */\n  activeMode?: \"opacity\" | \"background\" | string;\n  /**\n   * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover\n   */\n  hoverMode?: \"opacity\" | \"background\" | string;\n  /**\n   * Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс во время focus-visible\n   */\n  focusVisibleMode?: FocusVisibleMode | string;\n  onEnter?: (outputEvent: MouseEvent) => void;\n  onLeave?: (outputEvent: MouseEvent) => void;\n}\n\ninterface Wave {\n  x: number;\n  y: number;\n  id: string;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: React.Ref<HTMLElement>;\n}\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nconst activeBus = mitt<{ active: string }>();\nconst TapState = { none: 0, pending: 1, active: 2, exiting: 3 } as const;\n\ntype TappableContextInterface = { onHoverChange: (s: boolean) => void };\nconst TappableContext = React.createContext<TappableContextInterface>({\n  onHoverChange: noop,\n});\n\nfunction useActivity(hasActive: boolean, stopDelay: number) {\n  const id = React.useMemo(\n    () => Math.round(Math.random() * 1e8).toString(16),\n    []\n  );\n\n  const [activity, setActivity] = React.useState<\n    typeof TapState[keyof typeof TapState]\n  >(TapState.none);\n  const _stop = () => setActivity(TapState.none);\n  const start = () => hasActive && setActivity(TapState.active);\n  const delayStart = () => {\n    hasActive && setActivity(TapState.pending);\n  };\n\n  const activeTimeout = useTimeout(start, ACTIVE_DELAY);\n  const stopTimeout = useTimeout(_stop, stopDelay);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.pending) {\n      activeTimeout.set();\n      return activeTimeout.clear;\n    }\n    if (activity === TapState.exiting) {\n      return stopTimeout.clear;\n    }\n    if (activity === TapState.active) {\n      activeBus.emit(\"active\", id);\n    }\n    return noop;\n  }, [activity]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.none) {\n      return noop;\n    }\n    const onActiveChange = (activeId: string) => {\n      activeId !== id && _stop();\n    };\n    activeBus.on(\"active\", onActiveChange);\n    return () => activeBus.off(\"active\", onActiveChange);\n  }, [activity === TapState.none]);\n\n  useIsomorphicLayoutEffect(() => {\n    !hasActive && _stop();\n  }, [hasActive]);\n\n  const stop = (delay?: number) => {\n    if (delay) {\n      setActivity(TapState.exiting);\n      return stopTimeout.set(delay);\n    }\n    _stop();\n  };\n\n  return [activity, { delayStart, start, stop }] as const;\n}\n\nconst Tappable: React.FC<TappableProps> = ({\n  children,\n  Component,\n  onClick,\n  onKeyDown: _onKeyDown,\n  activeEffectDelay = ACTIVE_EFFECT_DELAY,\n  stopPropagation = false,\n  getRootRef,\n  sizeX,\n  hasMouse,\n  deviceHasHover,\n  hasHover: _hasHover = true,\n  hoverMode = \"background\",\n  hasActive: _hasActive = true,\n  activeMode = \"background\",\n  focusVisibleMode = \"inside\",\n  onEnter,\n  onLeave,\n  ...props\n}: TappableProps) => {\n  Component = Component || ((props.href ? \"a\" : \"div\") as React.ElementType);\n\n  const { onHoverChange } = React.useContext(TappableContext);\n  const insideTouchRoot = React.useContext(TouchRootContext);\n  const platform = usePlatform();\n  const { focusVisible, onBlur, onFocus } = useFocusVisible();\n\n  const [clicks, setClicks] = React.useState<Wave[]>([]);\n  const [childHover, setChildHover] = React.useState(false);\n  const {\n    value: _hovered,\n    setTrue: setHoveredTrue,\n    setFalse: setHoveredFalse,\n  } = useBooleanState(false);\n\n  const hovered = _hovered && !props.disabled;\n  const hasActive = _hasActive && !childHover && !props.disabled;\n  const hasHover = deviceHasHover && _hasHover && !childHover;\n  const isCustomElement =\n    Component !== \"a\" && Component !== \"button\" && !props.contentEditable;\n  const isPresetHoverMode = [\"opacity\", \"background\"].includes(hoverMode);\n  const isPresetActiveMode = [\"opacity\", \"background\"].includes(activeMode);\n  const isPresetFocusVisibleMode = [\"inside\", \"outside\"].includes(\n    focusVisibleMode\n  );\n\n  const [activity, { start, stop, delayStart }] = useActivity(\n    hasActive,\n    activeEffectDelay\n  );\n  const active = activity === TapState.active || activity === TapState.exiting;\n\n  const containerRef = useExternRef(getRootRef);\n\n  // hover propagation\n  const childContext = React.useRef({ onHoverChange: setChildHover }).current;\n  useIsomorphicLayoutEffect(() => {\n    if (!hovered) {\n      return noop;\n    }\n    onHoverChange(true);\n    return () => onHoverChange(false);\n  }, [hovered]);\n\n  /*\n   * [a11y]\n   * Обрабатывает событие onkeydown\n   * для кастомных доступных элементов:\n   * - role=\"link\" (активация по Enter)\n   * - role=\"button\" (активация по Space и Enter)\n   */\n  function onKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (isCustomElement && shouldTriggerClickOnEnterOrSpace(e)) {\n      e.preventDefault();\n      containerRef.current?.click();\n    }\n  }\n\n  function onStart({ originalEvent }: TouchEvent) {\n    if (hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        // r сожалению я так и не понял, что это делает и можно ли упихнуть его в Touch\n        return stop();\n      }\n\n      if (platform === ANDROID) {\n        const { top, left } = getOffsetRect(containerRef.current);\n        const x = coordX(originalEvent) - (left ?? 0);\n        const y = coordY(originalEvent) - (top ?? 0);\n        setClicks([...clicks, { x, y, id: Date.now().toString() }]);\n      }\n\n      delayStart();\n    }\n  }\n\n  function onMove({ isSlide }: TouchEvent) {\n    if (isSlide) {\n      stop();\n    }\n  }\n\n  function onEnd({ duration }: TouchEvent) {\n    if (activity === TapState.none) {\n      return;\n    }\n    if (activity === TapState.pending) {\n      // активировать при коротком тапе\n      start();\n    }\n\n    // отключить без задержки при длинном тапе\n    const activeDuraion = duration - ACTIVE_DELAY;\n    stop(activeDuraion >= 100 ? 0 : activeEffectDelay - activeDuraion);\n  }\n\n  const classes = classNames(\n    getClassName(\"Tappable\", platform),\n    `Tappable--sizeX-${sizeX}`,\n    hasHover && hovered && !isPresetHoverMode && hoverMode,\n    hasActive && active && !isPresetActiveMode && activeMode,\n    focusVisible && !isPresetFocusVisibleMode && focusVisibleMode,\n    {\n      \"Tappable--active\": hasActive && active,\n      \"Tappable--mouse\": hasMouse,\n      [`Tappable--hover-${hoverMode}`]:\n        hasHover && hovered && isPresetHoverMode,\n      [`Tappable--active-${activeMode}`]:\n        hasActive && active && isPresetActiveMode,\n      \"Tappable--focus-visible\": focusVisible,\n    }\n  );\n\n  const handlers: RootComponentProps = {\n    onStart: callMultiple(onStart, props.onStart),\n    onMove: callMultiple(onMove, props.onMove),\n    onEnd: callMultiple(onEnd, props.onEnd),\n    onClick,\n    onKeyDown: callMultiple(onKeyDown, _onKeyDown),\n  };\n  const role = props.href ? \"link\" : \"button\";\n\n  return (\n    <Touch\n      onEnter={callMultiple(setHoveredTrue, onEnter)}\n      onLeave={callMultiple(setHoveredFalse, onLeave)}\n      type={Component === \"button\" ? \"button\" : undefined}\n      tabIndex={isCustomElement && !props.disabled ? 0 : undefined}\n      role={isCustomElement ? role : undefined}\n      aria-disabled={isCustomElement ? props.disabled : undefined}\n      stopPropagation={stopPropagation && !insideTouchRoot && !props.disabled}\n      {...props}\n      slideThreshold={20}\n      usePointerHover\n      vkuiClass={classes}\n      Component={Component}\n      getRootRef={containerRef}\n      onBlur={callMultiple(onBlur, props.onBlur)}\n      onFocus={callMultiple(onFocus, props.onFocus)}\n      {...(props.disabled ? {} : handlers)}\n    >\n      <TappableContext.Provider value={childContext}>\n        {children}\n      </TappableContext.Provider>\n      {platform === ANDROID &&\n        !hasMouse &&\n        hasActive &&\n        activeMode === \"background\" && (\n          <span aria-hidden=\"true\" vkuiClass=\"Tappable__waves\">\n            {clicks.map((wave) => (\n              <Wave\n                {...wave}\n                key={wave.id}\n                onClear={() =>\n                  setClicks(clicks.filter((c) => c.id !== wave.id))\n                }\n              />\n            ))}\n          </span>\n        )}\n      {hasHover && hoverMode === \"background\" && (\n        <span aria-hidden=\"true\" vkuiClass=\"Tappable__hoverShadow\" />\n      )}\n      {!props.disabled && isPresetFocusVisibleMode && (\n        <FocusVisible mode={focusVisibleMode as FocusVisibleMode} />\n      )}\n    </Touch>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(Tappable, {\n  sizeX: true,\n  hasMouse: true,\n  deviceHasHover: true,\n});\n\nfunction Wave({ x, y, onClear }: Wave & { onClear: VoidFunction }) {\n  const timeout = useTimeout(onClear, 225);\n  React.useEffect(() => timeout.set(), [timeout]);\n  return <span vkuiClass=\"Tappable__wave\" style={{ top: y, left: x }} />;\n}\n"]},"metadata":{},"sourceType":"module"}