{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from \"react\";\n\n/**\n * Хук взаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\nexport var usePagination = function usePagination() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$currentPage = _ref.currentPage,\n    currentPage = _ref$currentPage === void 0 ? 1 : _ref$currentPage,\n    _ref$siblingCount = _ref.siblingCount,\n    siblingCount = _ref$siblingCount === void 0 ? 1 : _ref$siblingCount,\n    _ref$boundaryCount = _ref.boundaryCount,\n    boundaryCount = _ref$boundaryCount === void 0 ? 1 : _ref$boundaryCount,\n    _ref$totalPages = _ref.totalPages,\n    endPage = _ref$totalPages === void 0 ? 1 : _ref$totalPages;\n  return React.useMemo(function () {\n    var range = function range(from, to) {\n      var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var range = [];\n      var i = from;\n      while (i <= to) {\n        range.push(i);\n        i += step;\n      }\n      return range;\n    };\n    var startPages = range(1, Math.min(boundaryCount, endPage));\n    var endPages = range(Math.max(endPage - boundaryCount + 1, boundaryCount + 1), endPage);\n    var lowerBoundaryWhenCurrentPageHigh = endPage - boundaryCount - 1 - 2 * siblingCount;\n    var siblingsStart = Math.max(Math.min(currentPage - siblingCount, lowerBoundaryWhenCurrentPageHigh), boundaryCount + 2);\n    var upperBounadryWhenCurrentPageLow = boundaryCount + 2 + 2 * siblingCount;\n    var siblingsEnd = Math.min(Math.max(currentPage + siblingCount, upperBounadryWhenCurrentPageLow), endPages.length > 0 ? endPages[0] - 2 : endPage - 1);\n    var pages = startPages;\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push(\"start-ellipsis\");\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n    pages.push.apply(pages, _toConsumableArray(range(siblingsStart, siblingsEnd)));\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push(\"end-ellipsis\");\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n    pages.push.apply(pages, _toConsumableArray(endPages));\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;EAAA,+EAKL,EALK;IAAAC,wBAC3BC,WAD2B;IAC3BA,WAD2B,iCACb,CADa;IAAAC,yBAE3BC,YAF2B;IAE3BA,YAF2B,kCAEZ,CAFY;IAAAC,0BAG3BC,aAH2B;IAG3BA,aAH2B,mCAGX,CAHW;IAAAC,uBAI3BC,UAJ2B;IAIfC,OAJe,gCAIL,CAJK;EAAA,OAM3BV,KAAK,CAACW,OAAN,CAAc,YAAM;IAClB,IAAMC,KAAK,GAAG,eAACC,IAAD,EAAeC,EAAf,EAAwC;MAAA,IAAbC,IAAa,uEAAN,CAAM;MACpD,IAAMH,KAAK,GAAG,EAAd;MACA,IAAII,CAAC,GAAGH,IAAR;MAEA,OAAOG,CAAC,IAAIF,EAAZ,EAAgB;QACdF,KAAK,CAACK,IAAN,CAAWD,CAAX;QACAA,CAAC,IAAID,IAAL;MACD;MAED,OAAOH,KAAP;IACD,CAVD;IAYA,IAAMM,UAAU,GAAGN,KAAK,CAAC,CAAD,EAAIO,IAAI,CAACC,GAAL,CAASb,aAAT,EAAwBG,OAAxB,CAAJ,CAAxB;IACA,IAAMW,QAAQ,GAAGT,KAAK,CACpBO,IAAI,CAACG,GAAL,CAASZ,OAAO,GAAGH,aAAV,GAA0B,CAAnC,EAAsCA,aAAa,GAAG,CAAtD,CADoB,EAEpBG,OAFoB,CAAtB;IAKA,IAAMa,gCAAgC,GACpCb,OAAO,GAAGH,aAAV,GAA0B,CAA1B,GAA8B,IAAIF,YADpC;IAEA,IAAMmB,aAAa,GAAGL,IAAI,CAACG,GAAL,CACpBH,IAAI,CAACC,GAAL,CAASjB,WAAW,GAAGE,YAAvB,EAAqCkB,gCAArC,CADoB,EAEpBhB,aAAa,GAAG,CAFI,CAAtB;IAKA,IAAMkB,+BAA+B,GACnClB,aAAa,GAAG,CAAhB,GAAoB,IAAIF,YAD1B;IAEA,IAAMqB,WAAW,GAAGP,IAAI,CAACC,GAAL,CAClBD,IAAI,CAACG,GAAL,CAASnB,WAAW,GAAGE,YAAvB,EAAqCoB,+BAArC,CADkB,EAElBJ,QAAQ,CAACM,MAAT,GAAkB,CAAlB,GAAsBN,QAAQ,CAAC,CAAD,CAAR,GAAc,CAApC,GAAwCX,OAAO,GAAG,CAFhC,CAApB;IAKA,IAAMkB,KAA0B,GAAGV,UAAnC;IAEA,IAAIM,aAAa,GAAGjB,aAAa,GAAG,CAApC,EAAuC;MACrCqB,KAAK,CAACX,IAAN,CAAW,gBAAX;IACD,CAFD,MAEO,IAAIV,aAAa,GAAG,CAAhB,GAAoBG,OAAO,GAAGH,aAAlC,EAAiD;MACtDqB,KAAK,CAACX,IAAN,CAAWV,aAAa,GAAG,CAA3B;IACD;IAEDqB,KAAK,CAACX,IAAN,YAAK,qBAASL,KAAK,CAACY,aAAD,EAAgBE,WAAhB,CAAd,EAAL;IAEA,IAAIA,WAAW,GAAGhB,OAAO,GAAGH,aAAV,GAA0B,CAA5C,EAA+C;MAC7CqB,KAAK,CAACX,IAAN,CAAW,cAAX;IACD,CAFD,MAEO,IAAIP,OAAO,GAAGH,aAAV,GAA0BA,aAA9B,EAA6C;MAClDqB,KAAK,CAACX,IAAN,CAAWP,OAAO,GAAGH,aAArB;IACD;IAEDqB,KAAK,CAACX,IAAN,YAAK,qBAASI,QAAT,EAAL;IAEA,OAAOO,KAAP;EACD,CApDD,EAoDG,CAACzB,WAAD,EAAcO,OAAd,EAAuBL,YAAvB,EAAqCE,aAArC,CApDH,CAN2B;AAAA,CAAtB","names":["React","usePagination","_ref$currentPage","currentPage","_ref$siblingCount","siblingCount","_ref$boundaryCount","boundaryCount","_ref$totalPages","totalPages","endPage","useMemo","range","from","to","step","i","push","startPages","Math","min","endPages","max","lowerBoundaryWhenCurrentPageHigh","siblingsStart","upperBounadryWhenCurrentPageLow","siblingsEnd","length","pages"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\usePagination.ts"],"sourcesContent":["import * as React from \"react\";\n\ninterface UsePagintaionProps {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n}\n\nexport type PaginationPageType = \"start-ellipsis\" | \"end-ellipsis\" | number;\n\nexport type UsePaginationResult = PaginationPageType[];\n\n/**\n * Хук взаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\nexport const usePagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages: endPage = 1,\n}: UsePagintaionProps = {}): UsePaginationResult =>\n  React.useMemo(() => {\n    const range = (from: number, to: number, step = 1) => {\n      const range = [];\n      let i = from;\n\n      while (i <= to) {\n        range.push(i);\n        i += step;\n      }\n\n      return range;\n    };\n\n    const startPages = range(1, Math.min(boundaryCount, endPage));\n    const endPages = range(\n      Math.max(endPage - boundaryCount + 1, boundaryCount + 1),\n      endPage\n    );\n\n    const lowerBoundaryWhenCurrentPageHigh =\n      endPage - boundaryCount - 1 - 2 * siblingCount;\n    const siblingsStart = Math.max(\n      Math.min(currentPage - siblingCount, lowerBoundaryWhenCurrentPageHigh),\n      boundaryCount + 2\n    );\n\n    const upperBounadryWhenCurrentPageLow =\n      boundaryCount + 2 + 2 * siblingCount;\n    const siblingsEnd = Math.min(\n      Math.max(currentPage + siblingCount, upperBounadryWhenCurrentPageLow),\n      endPages.length > 0 ? endPages[0] - 2 : endPage - 1\n    );\n\n    const pages: UsePaginationResult = startPages;\n\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push(\"start-ellipsis\");\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n\n    pages.push(...range(siblingsStart, siblingsEnd));\n\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push(\"end-ellipsis\");\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n\n    pages.push(...endPages);\n\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}