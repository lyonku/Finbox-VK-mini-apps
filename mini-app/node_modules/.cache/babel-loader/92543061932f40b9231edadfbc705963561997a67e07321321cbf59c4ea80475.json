{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"mode\", \"children\", \"showArrows\", \"getScrollToLeft\", \"getScrollToRight\", \"scrollAnimationDuration\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport HorizontalScroll from \"../HorizontalScroll/HorizontalScroll\";\nvar defaultScrollToLeft = function defaultScrollToLeft(x) {\n  return x - 240;\n};\nvar defaultScrollToRight = function defaultScrollToRight(x) {\n  return x + 240;\n};\nexport var SubnavigationBar = function SubnavigationBar(_ref) {\n  var _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? \"overflow\" : _ref$mode,\n    children = _ref.children,\n    _ref$showArrows = _ref.showArrows,\n    showArrows = _ref$showArrows === void 0 ? true : _ref$showArrows,\n    _ref$getScrollToLeft = _ref.getScrollToLeft,\n    getScrollToLeft = _ref$getScrollToLeft === void 0 ? defaultScrollToLeft : _ref$getScrollToLeft,\n    _ref$getScrollToRight = _ref.getScrollToRight,\n    getScrollToRight = _ref$getScrollToRight === void 0 ? defaultScrollToRight : _ref$getScrollToRight,\n    scrollAnimationDuration = _ref.scrollAnimationDuration,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var platform = usePlatform();\n  var ScrollWrapper;\n  var scrollWrapperProps = {};\n  if (mode === \"fixed\") {\n    ScrollWrapper = \"div\";\n  } else {\n    ScrollWrapper = HorizontalScroll;\n    scrollWrapperProps = {\n      showArrows: showArrows,\n      getScrollToLeft: getScrollToLeft,\n      getScrollToRight: getScrollToRight,\n      scrollAnimationDuration: scrollAnimationDuration\n    };\n  }\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"SubnavigationBar\", platform), \"SubnavigationBar--\".concat(mode))\n  }), createScopedElement(ScrollWrapper, _extends({\n    vkuiClass: \"SubnavigationBar__in\"\n  }, scrollWrapperProps), createScopedElement(\"div\", {\n    vkuiClass: \"SubnavigationBar__scrollIn\"\n  }, children)));\n};","map":{"version":3,"mappings":";;;;AACA,SAASA,WAAT;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,OAAOC,gBAAP;AAkBA,IAAMC,mBAA0C,GAAG,SAA7CA,mBAA6C,CAACC,CAAD;EAAA,OAAOA,CAAC,GAAG,GAAX;AAAA,CAAnD;AAEA,IAAMC,oBAA2C,GAAG,SAA9CA,oBAA8C,CAACD,CAAD;EAAA,OAAOA,CAAC,GAAG,GAAX;AAAA,CAApD;AAEA,OAAO,IAAME,gBAAiD,GAAG,SAApDA,gBAAoD,OAQpC;EAAA,qBAP3BC,IAO2B;IAP3BA,IAO2B,0BAPpB,UAOoB;IAN3BC,QAM2B,QAN3BA,QAM2B;IAAAC,uBAL3BC,UAK2B;IAL3BA,UAK2B,gCALd,IAKc;IAAAC,4BAJ3BC,eAI2B;IAJ3BA,eAI2B,qCAJTT,mBAIS;IAAAU,6BAH3BC,gBAG2B;IAH3BA,gBAG2B,sCAHRT,oBAGQ;IAF3BU,uBAE2B,QAF3BA,uBAE2B;IADxBC,SACwB;EAC3B,IAAMC,QAAQ,GAAGlB,WAAW,EAA5B;EAEA,IAAImB,aAAJ;EACA,IAAIC,kBAAkB,GAAG,EAAzB;EAEA,IAAIZ,IAAI,KAAK,OAAb,EAAsB;IACpBW,aAAa,GAAG,KAAhB;EACD,CAFD,MAEO;IACLA,aAAa,GAAGhB,gBAAhB;IACAiB,kBAAkB,GAAG;MACnBT,UAAU,EAAVA,UADmB;MAEnBE,eAAe,EAAfA,eAFmB;MAGnBE,gBAAgB,EAAhBA,gBAHmB;MAInBC,uBAAuB,EAAvBA;IAJmB,CAArB;EAMD;EAED,OACEK,wCACMJ,SADN;IAEEK,SAAS,EAAErB,UAAU,CACnBC,YAAY,CAAC,kBAAD,EAAqBgB,QAArB,CADO,8BAEEV,IAFF;EAFvB,IAOEa,oBAACF,aAAD;IAAeG,SAAS,EAAC;EAAzB,GAAoDF,kBAApD,GACEC;IAAKC,SAAS,EAAC;EAAf,GAA6Cb,QAA7C,CADF,CAPF,CADF;AAaD,CAvCM","names":["usePlatform","classNames","getClassName","HorizontalScroll","defaultScrollToLeft","x","defaultScrollToRight","SubnavigationBar","mode","children","_ref$showArrows","showArrows","_ref$getScrollToLeft","getScrollToLeft","_ref$getScrollToRight","getScrollToRight","scrollAnimationDuration","restProps","platform","ScrollWrapper","scrollWrapperProps","createScopedElement","vkuiClass"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\SubnavigationBar\\SubnavigationBar.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport HorizontalScroll, {\n  HorizontalScrollProps,\n  ScrollPositionHandler,\n} from \"../HorizontalScroll/HorizontalScroll\";\nimport \"./SubnavigationBar.css\";\n\nexport interface SubnavigationBarProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    Pick<\n      HorizontalScrollProps,\n      | \"showArrows\"\n      | \"getScrollToLeft\"\n      | \"getScrollToRight\"\n      | \"scrollAnimationDuration\"\n    > {\n  mode?: \"fixed\" | \"overflow\";\n}\n\nconst defaultScrollToLeft: ScrollPositionHandler = (x) => x - 240;\n\nconst defaultScrollToRight: ScrollPositionHandler = (x) => x + 240;\n\nexport const SubnavigationBar: React.FC<SubnavigationBarProps> = ({\n  mode = \"overflow\",\n  children,\n  showArrows = true,\n  getScrollToLeft = defaultScrollToLeft,\n  getScrollToRight = defaultScrollToRight,\n  scrollAnimationDuration,\n  ...restProps\n}: SubnavigationBarProps) => {\n  const platform = usePlatform();\n\n  let ScrollWrapper: React.ElementType;\n  let scrollWrapperProps = {};\n\n  if (mode === \"fixed\") {\n    ScrollWrapper = \"div\";\n  } else {\n    ScrollWrapper = HorizontalScroll;\n    scrollWrapperProps = {\n      showArrows,\n      getScrollToLeft,\n      getScrollToRight,\n      scrollAnimationDuration,\n    };\n  }\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"SubnavigationBar\", platform),\n        `SubnavigationBar--${mode}`\n      )}\n    >\n      <ScrollWrapper vkuiClass=\"SubnavigationBar__in\" {...scrollWrapperProps}>\n        <div vkuiClass=\"SubnavigationBar__scrollIn\">{children}</div>\n      </ScrollWrapper>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}