{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zpili\\\\Desktop\\\\Finbox-VK-mini-apps\\\\mini-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Home from \"./panels/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [scheme, setScheme] = useState(\"bright_light\");\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [groups, setGroups] = useState([]); // const [fetchedUser, setUser] = useState(null);\n  // const [popout, setPopout] = useState(null);\n\n  useEffect(() => {\n    bridge.subscribe(_ref => {\n      let {\n        detail: {\n          type,\n          data\n        }\n      } = _ref;\n\n      if (type === \"VKWebAppUpdateConfig\") {\n        setScheme(data.scheme);\n      }\n    });\n\n    async function fetchUser() {\n      const token = await bridge.send(\"VKWebAppGetAuthToken\", {\n        app_id: 51435408,\n        scope: \"status,groups,stats,video \"\n      });\n      const userGroup = await bridge.send(\"VKWebAppCallAPIMethod\", {\n        method: \"groups.get\",\n        request_id: \"getGroups\",\n        params: {\n          filter: \"admin\",\n          extended: \"1\",\n          fields: \"is_admin\",\n          v: \"5.131\",\n          access_token: token.access_token\n        }\n      });\n      setGroups(userGroup.response.items);\n    }\n\n    fetchUser();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    scheme: scheme,\n    children: /*#__PURE__*/_jsxDEV(AdaptivityProvider, {\n      children: /*#__PURE__*/_jsxDEV(AppRoot, {\n        children: /*#__PURE__*/_jsxDEV(SplitLayout, {\n          children: /*#__PURE__*/_jsxDEV(SplitCol, {\n            children: /*#__PURE__*/_jsxDEV(View, {\n              activePanel: activePanel,\n              children: /*#__PURE__*/_jsxDEV(Home, {\n                id: \"home\",\n                groups: groups\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ZpKiCn+qNOcFNsMBNLPhbymLgXc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/zpili/Desktop/Finbox-VK-mini-apps/mini-app/src/App.js"],"names":["React","useState","useEffect","bridge","View","ScreenSpinner","AdaptivityProvider","AppRoot","ConfigProvider","SplitLayout","SplitCol","Home","App","scheme","setScheme","activePanel","setActivePanel","groups","setGroups","subscribe","detail","type","data","fetchUser","token","send","app_id","scope","userGroup","method","request_id","params","filter","extended","fields","v","access_token","response","items","go","e","currentTarget","dataset","to"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,IADF,EAEEC,aAFF,EAGEC,kBAHF,EAIEC,OAJF,EAKEC,cALF,EAMEC,WANF,EAOEC,QAPF,QAQO,iBARP;AASA,OAAO,+BAAP;AAEA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,cAAD,CAApC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,MAAD,CAA9C;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC,CAHgB,CAIhB;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,MAAM,CAACgB,SAAP,CAAiB,QAAgC;AAAA,UAA/B;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR;AAAV,OAA+B;;AAC/C,UAAID,IAAI,KAAK,sBAAb,EAAqC;AACnCP,QAAAA,SAAS,CAACQ,IAAI,CAACT,MAAN,CAAT;AACD;AACF,KAJD;;AAMA,mBAAeU,SAAf,GAA2B;AACzB,YAAMC,KAAK,GAAG,MAAMrB,MAAM,CAACsB,IAAP,CAAY,sBAAZ,EAAoC;AACtDC,QAAAA,MAAM,EAAE,QAD8C;AAEtDC,QAAAA,KAAK,EAAE;AAF+C,OAApC,CAApB;AAIA,YAAMC,SAAS,GAAG,MAAMzB,MAAM,CAACsB,IAAP,CAAY,uBAAZ,EAAqC;AAC3DI,QAAAA,MAAM,EAAE,YADmD;AAE3DC,QAAAA,UAAU,EAAE,WAF+C;AAG3DC,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE,OADF;AAENC,UAAAA,QAAQ,EAAE,GAFJ;AAGNC,UAAAA,MAAM,EAAE,UAHF;AAINC,UAAAA,CAAC,EAAE,OAJG;AAKNC,UAAAA,YAAY,EAAEZ,KAAK,CAACY;AALd;AAHmD,OAArC,CAAxB;AAWAlB,MAAAA,SAAS,CAACU,SAAS,CAACS,QAAV,CAAmBC,KAApB,CAAT;AACD;;AACDf,IAAAA,SAAS;AACV,GA1BQ,EA0BN,EA1BM,CAAT;;AA4BA,QAAMgB,EAAE,GAAIC,CAAD,IAAO;AAChBxB,IAAAA,cAAc,CAACwB,CAAC,CAACC,aAAF,CAAgBC,OAAhB,CAAwBC,EAAzB,CAAd;AACD,GAFD;;AAIA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAE9B,MAAxB;AAAA,2BACE,QAAC,kBAAD;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE,QAAC,WAAD;AAAA,iCACE,QAAC,QAAD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,WAAW,EAAEE,WAAnB;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,MAAT;AAAgB,gBAAA,MAAM,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtDD;;GAAML,G;;KAAAA,G;AAwDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  View,\n  ScreenSpinner,\n  AdaptivityProvider,\n  AppRoot,\n  ConfigProvider,\n  SplitLayout,\n  SplitCol,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\n\nconst App = () => {\n  const [scheme, setScheme] = useState(\"bright_light\");\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [groups, setGroups] = useState([]);\n  // const [fetchedUser, setUser] = useState(null);\n  // const [popout, setPopout] = useState(null);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        setScheme(data.scheme);\n      }\n    });\n\n    async function fetchUser() {\n      const token = await bridge.send(\"VKWebAppGetAuthToken\", {\n        app_id: 51435408,\n        scope: \"status,groups,stats,video \",\n      });\n      const userGroup = await bridge.send(\"VKWebAppCallAPIMethod\", {\n        method: \"groups.get\",\n        request_id: \"getGroups\",\n        params: {\n          filter: \"admin\",\n          extended: \"1\",\n          fields: \"is_admin\",\n          v: \"5.131\",\n          access_token: token.access_token,\n        },\n      });\n      setGroups(userGroup.response.items);\n    }\n    fetchUser();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <ConfigProvider scheme={scheme}>\n      <AdaptivityProvider>\n        <AppRoot>\n          <SplitLayout>\n            <SplitCol>\n              <View activePanel={activePanel}>\n                <Home id=\"home\" groups={groups} />\n              </View>\n            </SplitCol>\n          </SplitLayout>\n        </AppRoot>\n      </AdaptivityProvider>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}