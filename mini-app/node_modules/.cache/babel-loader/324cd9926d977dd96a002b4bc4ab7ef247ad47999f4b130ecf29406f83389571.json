{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar e = require(\"react/jsx-runtime\"),\n  t = require(\"react\"),\n  _o = function o() {\n    return _o = Object.assign || function (e) {\n      for (var t, o = 1, n = arguments.length; o < n; o++) {\n        for (var i in t = arguments[o]) {\n          Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);\n        }\n      }\n      return e;\n    }, _o.apply(this, arguments);\n  };\nfunction n(e, t, o) {\n  if (o || 2 === arguments.length) for (var n, i = 0, r = t.length; i < r; i++) {\n    !n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);\n  }\n  return e.concat(n || Array.prototype.slice.call(t));\n}\nfunction i(t) {\n  var n = t.size,\n    i = void 0 === n ? 25 : n,\n    r = t.SVGstrokeColor,\n    l = void 0 === r ? \"currentColor\" : r,\n    a = t.SVGstorkeWidth,\n    s = void 0 === a ? 0 : a,\n    c = t.SVGclassName,\n    d = void 0 === c ? \"star-svg\" : c,\n    u = t.SVGstyle;\n  return e.jsx(\"svg\", _o({\n    className: d,\n    style: u,\n    stroke: l,\n    fill: \"currentColor\",\n    strokeWidth: s,\n    viewBox: \"0 0 24 24\",\n    width: i,\n    height: i,\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, {\n    children: e.jsx(\"path\", {\n      d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n    })\n  }));\n}\nfunction r(e, t) {\n  switch (t.type) {\n    case \"PointerMove\":\n      return _o(_o({}, e), {\n        hoverValue: t.payload,\n        hoverIndex: t.index\n      });\n    case \"PointerLeave\":\n      return _o(_o({}, e), {\n        ratingValue: e.ratingValue,\n        hoverIndex: 0,\n        hoverValue: null\n      });\n    case \"MouseClick\":\n      return _o(_o({}, e), {\n        valueIndex: e.hoverIndex,\n        ratingValue: t.payload\n      });\n    default:\n      return e;\n  }\n}\nvar l = \"style-module_starRatingWrap__q-lJC\",\n  a = \"style-module_simpleStarRating__nWUxf\",\n  s = \"style-module_fillIcons__6---A\",\n  c = \"style-module_emptyIcons__Bg-FZ\",\n  d = \"style-module_tooltip__tKc3i\";\nfunction u() {\n  return \"undefined\" != typeof window && window.matchMedia(\"(pointer: coarse)\").matches || \"ontouchstart\" in window || \"undefined\" != typeof navigator && navigator.maxTouchPoints > 0;\n}\n!function (e, t) {\n  void 0 === t && (t = {});\n  var o = t.insertAt;\n  if (e && \"undefined\" != typeof document) {\n    var n = document.head || document.getElementsByTagName(\"head\")[0],\n      i = document.createElement(\"style\");\n    i.type = \"text/css\", \"top\" === o && n.firstChild ? n.insertBefore(i, n.firstChild) : n.appendChild(i), i.styleSheet ? i.styleSheet.cssText = e : i.appendChild(document.createTextNode(e));\n  }\n}(\".style-module_starRatingWrap__q-lJC{display:inline-block;touch-action:none}.style-module_simpleStarRating__nWUxf{display:inline-block;overflow:hidden;position:relative;touch-action:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;vertical-align:middle;white-space:nowrap}.style-module_fillIcons__6---A{display:inline-block;overflow:hidden;position:absolute;top:0;white-space:nowrap}.style-module_emptyIcons__Bg-FZ{display:inline-block}.style-module_tooltip__tKc3i{background-color:#333;border-radius:5px;color:#fff;display:inline-block;padding:5px 15px;vertical-align:middle}\"), exports.Rating = function (v) {\n  var p,\n    h,\n    f = v.onClick,\n    y = v.onPointerMove,\n    m = v.onPointerEnter,\n    g = v.onPointerLeave,\n    x = v.initialValue,\n    _ = void 0 === x ? 0 : x,\n    C = v.iconsCount,\n    w = void 0 === C ? 5 : C,\n    V = v.size,\n    k = void 0 === V ? 40 : V,\n    S = v.readonly,\n    b = void 0 !== S && S,\n    M = v.rtl,\n    G = void 0 !== M && M,\n    I = v.customIcons,\n    N = void 0 === I ? [] : I,\n    j = v.allowFraction,\n    P = void 0 !== j && j,\n    A = v.style,\n    L = v.className,\n    R = void 0 === L ? \"react-simple-star-rating\" : L,\n    W = v.transition,\n    T = void 0 !== W && W,\n    z = v.allowHover,\n    B = void 0 === z || z,\n    F = v.disableFillHover,\n    E = void 0 !== F && F,\n    q = v.fillIcon,\n    O = void 0 === q ? null : q,\n    H = v.fillColor,\n    J = void 0 === H ? \"#ffbc0b\" : H,\n    K = v.fillColorArray,\n    U = void 0 === K ? [] : K,\n    Z = v.fillStyle,\n    D = v.fillClassName,\n    X = void 0 === D ? \"filled-icons\" : D,\n    Y = v.emptyIcon,\n    Q = void 0 === Y ? null : Y,\n    $ = v.emptyColor,\n    ee = void 0 === $ ? \"#cccccc\" : $,\n    te = v.emptyStyle,\n    oe = v.emptyClassName,\n    ne = void 0 === oe ? \"empty-icons\" : oe,\n    ie = v.showTooltip,\n    re = void 0 !== ie && ie,\n    le = v.tooltipDefaultText,\n    ae = void 0 === le ? \"Your Rate\" : le,\n    se = v.tooltipArray,\n    ce = void 0 === se ? [] : se,\n    de = v.tooltipStyle,\n    ue = v.tooltipClassName,\n    ve = void 0 === ue ? \"react-simple-star-rating-tooltip\" : ue,\n    pe = v.SVGclassName,\n    he = void 0 === pe ? \"star-svg\" : pe,\n    fe = v.titleSeparator,\n    ye = void 0 === fe ? \"out of\" : fe,\n    me = v.SVGstyle,\n    ge = v.SVGstorkeWidth,\n    xe = void 0 === ge ? 0 : ge,\n    _e = v.SVGstrokeColor,\n    Ce = void 0 === _e ? \"currentColor\" : _e,\n    we = t.useReducer(r, {\n      hoverIndex: 0,\n      valueIndex: 0,\n      ratingValue: 0,\n      hoverValue: null\n    }),\n    Ve = we[0],\n    ke = Ve.ratingValue,\n    Se = Ve.hoverValue,\n    be = Ve.hoverIndex,\n    Me = Ve.valueIndex,\n    Ge = we[1],\n    Ie = t.useMemo(function () {\n      return P ? 2 * w : w;\n    }, [P, w]),\n    Ne = t.useMemo(function () {\n      return _ > Ie ? 0 : P || Math.floor(_) === _ ? Math.round(_ / w * 100) : 2 * Math.ceil(_) * 10;\n    }, [P, _, w, Ie]),\n    je = t.useMemo(function () {\n      return (P ? 2 * _ - 1 : _ - 1) || 0;\n    }, [P, _]),\n    Pe = t.useCallback(function (e) {\n      return w % 2 != 0 ? e / 2 / 10 : e / w;\n    }, [w]),\n    Ae = function Ae(e) {\n      for (var t = e.clientX, o = e.currentTarget.children[0].getBoundingClientRect(), n = o.left, i = o.right, r = o.width, l = G ? i - t : t - n, a = Ie, s = Math.round(r / Ie), c = 0; c <= Ie; c += 1) {\n        if (l <= s * c) {\n          a = 0 === c && l < s ? 0 : c;\n          break;\n        }\n      }\n      var d = a - 1;\n      a > 0 && (Ge({\n        type: \"PointerMove\",\n        payload: 100 * a / Ie,\n        index: d\n      }), y && Se && y(Pe(Se), d, e));\n    },\n    Le = function Le(e) {\n      Se && (Ge({\n        type: \"MouseClick\",\n        payload: Se\n      }), f && f(Pe(Se), be, e));\n    },\n    Re = t.useMemo(function () {\n      if (B) {\n        if (E) {\n          var e = ke && ke || Ne;\n          return Se && Se > e ? Se : e;\n        }\n        return Se && Se || ke && ke || Ne;\n      }\n      return ke && ke || Ne;\n    }, [B, E, Se, ke, Ne]);\n  t.useEffect(function () {\n    ce.length > Ie && console.error(\"tooltipArray Array length is bigger then Icons Count length.\");\n  }, [ce.length, Ie]);\n  var We = t.useCallback(function (e) {\n      return Se && e[be] || ke && e[Me] || _ && e[je];\n    }, [Se, be, ke, Me, _, je]),\n    Te = t.useMemo(function () {\n      return Se && Pe(Se) || ke && Pe(ke) || _ && Pe(Ne);\n    }, [Se, Pe, ke, _, Ne]);\n  return e.jsxs(\"span\", _o({\n    className: l,\n    style: {\n      direction: \"\".concat(G ? \"rtl\" : \"ltr\")\n    }\n  }, {\n    children: [e.jsxs(\"span\", _o({\n      className: \"\".concat(a, \" \").concat(R),\n      style: _o({\n        cursor: b ? \"\" : \"pointer\"\n      }, A),\n      onPointerMove: b ? void 0 : Ae,\n      onPointerEnter: b ? void 0 : function (e) {\n        m && m(e), u() && Ae(e);\n      },\n      onPointerLeave: b ? void 0 : function (e) {\n        u() && Le(), Ge({\n          type: \"PointerLeave\"\n        }), g && g(e);\n      },\n      onClick: b ? void 0 : Le,\n      \"aria-hidden\": \"true\"\n    }, {\n      children: [e.jsx(\"span\", _o({\n        className: \"\".concat(c, \" \").concat(ne),\n        style: _o({\n          color: ee\n        }, te)\n      }, {\n        children: n([], Array(w), !0).map(function (o, n) {\n          var r;\n          return e.jsx(t.Fragment, {\n            children: (null === (r = N[n]) || void 0 === r ? void 0 : r.icon) || Q || e.jsx(i, {\n              SVGclassName: he,\n              SVGstyle: me,\n              SVGstorkeWidth: xe,\n              SVGstrokeColor: Ce,\n              size: k\n            })\n          }, n);\n        })\n      })), e.jsx(\"span\", _o({\n        className: \"\".concat(s, \" \").concat(X),\n        style: _o((p = {}, p[G ? \"right\" : \"left\"] = 0, p.color = We(U) || J, p.transition = T ? \"width .2s ease, color .2s ease\" : \"\", p.width = \"\".concat(Re, \"%\"), p), Z),\n        title: \"\".concat(Se && Pe(Se) || Pe(Ne), \" \").concat(ye, \" \").concat(w)\n      }, {\n        children: n([], Array(w), !0).map(function (o, n) {\n          var r;\n          return e.jsx(t.Fragment, {\n            children: (null === (r = N[n]) || void 0 === r ? void 0 : r.icon) || O || e.jsx(i, {\n              SVGclassName: he,\n              SVGstyle: me,\n              SVGstorkeWidth: xe,\n              SVGstrokeColor: Ce,\n              size: k\n            })\n          }, n);\n        })\n      }))]\n    })), re && e.jsx(\"span\", _o({\n      className: \"\".concat(d, \" \").concat(ve),\n      style: _o((h = {}, h[G ? \"marginRight\" : \"marginLeft\"] = 20, h), de)\n    }, {\n      children: (ce.length > 0 ? We(ce) : Te) || ae\n    }))]\n  }));\n};","map":{"version":3,"mappings":"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","names":["StarIcon","_a","size","_b","_c","SVGstrokeColor","_d","SVGstorkeWidth","_e","SVGclassName","SVGstyle","_jsx","className","style","stroke","fill","strokeWidth","viewBox","width","height","xmlns","children","jsx","d","state","action","type","hoverValue","payload","hoverIndex","index","ratingValue","valueIndex","a","s","c","isTouchDevice","window","matchMedia","matches","navigator","maxTouchPoints","css","ref","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","onClick","onPointerMove","onPointerEnter","onPointerLeave","initialValue","iconsCount","_f","_g","readonly","_h","rtl","_j","customIcons","_k","allowFraction","_l","_m","transition","_o","allowHover","_p","disableFillHover","_q","fillIcon","_r","fillColor","_s","fillColorArray","fillStyle","_t","fillClassName","_u","emptyIcon","_v","emptyColor","emptyStyle","_w","emptyClassName","_x","showTooltip","_y","tooltipDefaultText","_z","tooltipArray","tooltipStyle","_0","tooltipClassName","_1","_2","titleSeparator","_3","_4","_5","useReducer","reducer","_6","dispatch","totalIcons","useMemo","localRating","Math","floor","round","ceil","localRatingIndex","renderValue","useCallback","value","handlePointerMove","event","clientX","currentTarget","getBoundingClientRect","left","right","positionX","currentValue","iconWidth","i","handleClick","valuePercentage","useEffect","length","console","error","ratingArray","array","ratingRenderValues","_jsxs","direction","concat","__assign","cursor","undefined","color","Array","map","_","Fragment","icon","title"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\react-simple-star-rating\\src\\components\\StarIcon.tsx","C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\react-simple-star-rating\\src\\reducer.ts","C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\react-simple-star-rating\\src\\components\\Rating.tsx","C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\react-simple-star-rating\\node_modules\\style-inject\\dist\\style-inject.es.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport interface StarIconProps {\r\n  /** Icon width / height in `px` */\r\n  size?: number\r\n  SVGstrokeColor?: string\r\n  SVGstorkeWidth?: string | number\r\n  SVGclassName?: string\r\n  SVGstyle?: React.CSSProperties\r\n}\r\n\r\nexport function StarIcon({\r\n  size = 25,\r\n  SVGstrokeColor = 'currentColor',\r\n  SVGstorkeWidth = 0,\r\n  SVGclassName = 'star-svg',\r\n  SVGstyle\r\n}: StarIconProps) {\r\n  return (\r\n    <svg\r\n      className={SVGclassName}\r\n      style={SVGstyle}\r\n      stroke={SVGstrokeColor}\r\n      fill='currentColor'\r\n      strokeWidth={SVGstorkeWidth}\r\n      viewBox='0 0 24 24'\r\n      width={size}\r\n      height={size}\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <path d='M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z'></path>\r\n    </svg>\r\n  )\r\n}\r\n","type State = {\r\n  ratingValue: number | null\r\n  hoverValue: number | null\r\n  hoverIndex: number\r\n  valueIndex: number\r\n}\r\n\r\ntype Action =\r\n  | { type: 'PointerMove'; payload: number | null; index: number }\r\n  | { type: 'PointerLeave' }\r\n  | { type: 'MouseClick'; payload: number }\r\n\r\nexport function reducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case 'PointerMove':\r\n      return {\r\n        ...state,\r\n        hoverValue: action.payload,\r\n        hoverIndex: action.index\r\n      }\r\n\r\n    case 'PointerLeave':\r\n      return {\r\n        ...state,\r\n        ratingValue: state.ratingValue,\r\n        hoverIndex: 0,\r\n        hoverValue: null\r\n      }\r\n\r\n    case 'MouseClick':\r\n      return {\r\n        ...state,\r\n        valueIndex: state.hoverIndex,\r\n        ratingValue: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  useMemo,\r\n  useReducer,\r\n  useCallback,\r\n  Fragment,\r\n  ReactNode,\r\n  CSSProperties,\r\n  MouseEvent,\r\n  PointerEvent,\r\n  useEffect\r\n} from 'react'\r\nimport { StarIcon, StarIconProps } from './StarIcon'\r\nimport { reducer } from '../reducer'\r\nimport css from '../style.module.css'\r\n\r\nexport interface RatingProps extends StarIconProps {\r\n  /** Handles the returned rating value */\r\n  onClick?: (value: number, index: number, event?: MouseEvent<HTMLSpanElement>) => void\r\n  /** onPointerMove callback function with `hover`, `index` alongside `event` values passed */\r\n  onPointerMove?: (value: number, index: number, event: PointerEvent<HTMLSpanElement>) => void\r\n  /** onPointerEnter callback function */\r\n  onPointerEnter?: (event: PointerEvent<HTMLSpanElement>) => void\r\n  /** onPointerLeave callback function */\r\n  onPointerLeave?: (event: PointerEvent<HTMLSpanElement>) => void\r\n  /** Set initial value */\r\n  initialValue?: number\r\n  /** Number of the icons */\r\n  iconsCount?: number\r\n  /** Read only mode */\r\n  readonly?: boolean\r\n  /** Add a group of icons */\r\n  customIcons?: {\r\n    icon: ReactNode\r\n  }[]\r\n  /** RTL mode */\r\n  rtl?: boolean\r\n  /** Enable a fractional rate (half icon) */\r\n  allowFraction?: boolean\r\n  /** Enable / Disable hover effect on empty icons */\r\n  allowHover?: boolean\r\n  /** Enable / Disable hover effect on filled icons */\r\n  disableFillHover?: boolean\r\n  /** Enable / Disable transition effect on mouse hover */\r\n  transition?: boolean\r\n  /** Applied to the `main` span */\r\n  className?: string\r\n  /** Inline style applied to the `main` span */\r\n  style?: CSSProperties\r\n\r\n  /** Custom fill icon SVG */\r\n  fillIcon?: ReactNode | null\r\n  /** Filled icons color */\r\n  fillColor?: string\r\n  /** Array of string to add color range */\r\n  fillColorArray?: string[]\r\n  /** Inline style applied to `filled-icons` icon span  */\r\n  fillStyle?: CSSProperties\r\n  /** Filled icons `span` className */\r\n  fillClassName?: string\r\n\r\n  /** Custom empty icon SVG */\r\n  emptyIcon?: ReactNode | null\r\n  /** Empty icons color */\r\n  emptyColor?: string\r\n  /** Inline style applied to `empty-icons` span  */\r\n  emptyStyle?: CSSProperties\r\n  /** ٌُEmpty icons `span` className */\r\n  emptyClassName?: string\r\n\r\n  /** Show a tooltip with live values */\r\n  showTooltip?: boolean\r\n  /** Initial tooltip text if there is no rating value */\r\n  tooltipDefaultText?: string\r\n  /** Array of strings that will show inside the tooltip */\r\n  tooltipArray?: string[]\r\n  /** Inline style applied to the `tooltip` span */\r\n  tooltipStyle?: CSSProperties\r\n  /** Tooltip CSS className */\r\n  tooltipClassName?: string\r\n  /** Separator word in a title of a rating star `(1 out of 5)` */\r\n  titleSeparator?: string\r\n}\r\n\r\n/**\r\n * Check for touch devices\r\n * @returns `boolean`\r\n */\r\nfunction isTouchDevice() {\r\n  return (\r\n    (typeof window !== 'undefined' && window.matchMedia('(pointer: coarse)').matches) ||\r\n    'ontouchstart' in window ||\r\n    (typeof navigator !== 'undefined' && navigator.maxTouchPoints > 0)\r\n  )\r\n}\r\n\r\nexport function Rating({\r\n  onClick,\r\n  onPointerMove,\r\n  onPointerEnter,\r\n  onPointerLeave,\r\n  initialValue = 0,\r\n  iconsCount = 5,\r\n  size = 40,\r\n  readonly = false,\r\n  rtl = false,\r\n  customIcons = [],\r\n  allowFraction = false,\r\n  style,\r\n  className = 'react-simple-star-rating',\r\n  transition = false,\r\n\r\n  allowHover = true,\r\n  disableFillHover = false,\r\n\r\n  fillIcon = null,\r\n  fillColor = '#ffbc0b',\r\n  fillColorArray = [],\r\n  fillStyle,\r\n  fillClassName = 'filled-icons',\r\n\r\n  emptyIcon = null,\r\n  emptyColor = '#cccccc',\r\n  emptyStyle,\r\n  emptyClassName = 'empty-icons',\r\n\r\n  showTooltip = false,\r\n  tooltipDefaultText = 'Your Rate',\r\n  tooltipArray = [],\r\n  tooltipStyle,\r\n  tooltipClassName = 'react-simple-star-rating-tooltip',\r\n\r\n  SVGclassName = 'star-svg',\r\n  titleSeparator = 'out of',\r\n  SVGstyle,\r\n  SVGstorkeWidth = 0,\r\n  SVGstrokeColor = 'currentColor'\r\n}: RatingProps) {\r\n  const [{ ratingValue, hoverValue, hoverIndex, valueIndex }, dispatch] = useReducer(reducer, {\r\n    hoverIndex: 0,\r\n    valueIndex: 0,\r\n    ratingValue: 0,\r\n    hoverValue: null\r\n  })\r\n\r\n  const totalIcons = useMemo(() => (allowFraction ? iconsCount * 2 : iconsCount), [allowFraction, iconsCount])\r\n\r\n  // Convert local rating value to precentage\r\n  const localRating = useMemo(() => {\r\n    if (initialValue > totalIcons) return 0\r\n\r\n    // Check for a decimal value\r\n    if (!allowFraction && Math.floor(initialValue) !== initialValue) {\r\n      return Math.ceil(initialValue) * 2 * 10\r\n    }\r\n\r\n    return Math.round((initialValue / iconsCount) * 100)\r\n  }, [allowFraction, initialValue, iconsCount, totalIcons])\r\n\r\n  const localRatingIndex = useMemo(() => (allowFraction ? initialValue * 2 - 1 : initialValue - 1) || 0, [\r\n    allowFraction,\r\n    initialValue\r\n  ])\r\n\r\n  const renderValue = useCallback((value: number) => (iconsCount % 2 !== 0 ? value / 2 / 10 : value / iconsCount), [\r\n    iconsCount\r\n  ])\r\n\r\n  const handlePointerMove = (event: PointerEvent<HTMLSpanElement>) => {\r\n    const { clientX, currentTarget } = event\r\n    // Get main span element position and width\r\n    const { left, right, width } = currentTarget.children[0].getBoundingClientRect()\r\n\r\n    // Handle RTL\r\n    const positionX = rtl ? right - clientX : clientX - left\r\n\r\n    // Get current pointer position while moves over the icons\r\n    let currentValue = totalIcons\r\n    const iconWidth = Math.round(width / totalIcons)\r\n\r\n    for (let i = 0; i <= totalIcons; i = i + 1) {\r\n      if (positionX <= iconWidth * i) {\r\n        if (i === 0 && positionX < iconWidth) currentValue = 0\r\n        else currentValue = i\r\n        break\r\n      }\r\n    }\r\n\r\n    const index = currentValue - 1\r\n\r\n    if (currentValue > 0) {\r\n      // Set value and index state\r\n      dispatch({ type: 'PointerMove', payload: (currentValue * 100) / totalIcons, index })\r\n\r\n      if (onPointerMove) {\r\n        if (hoverValue) onPointerMove(renderValue(hoverValue), index, event)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handlePointerEnter = (event: PointerEvent<HTMLSpanElement>) => {\r\n    if (onPointerEnter) onPointerEnter(event)\r\n    // Enable only on touch devices\r\n    if (!isTouchDevice()) return\r\n\r\n    handlePointerMove(event)\r\n  }\r\n\r\n  const handleClick = (event?: MouseEvent<HTMLSpanElement>) => {\r\n    if (hoverValue) {\r\n      dispatch({ type: 'MouseClick', payload: hoverValue })\r\n      if (onClick) onClick(renderValue(hoverValue), hoverIndex, event)\r\n    }\r\n  }\r\n\r\n  const handlePointerLeave = (event: PointerEvent<HTMLSpanElement>) => {\r\n    if (isTouchDevice()) handleClick()\r\n\r\n    dispatch({ type: 'PointerLeave' })\r\n    if (onPointerLeave) onPointerLeave(event)\r\n  }\r\n\r\n  const valuePercentage = useMemo(() => {\r\n    if (allowHover) {\r\n      if (disableFillHover) {\r\n        const currentValue = (ratingValue && ratingValue) || localRating\r\n        return hoverValue && hoverValue > currentValue ? hoverValue : currentValue\r\n      }\r\n      return (hoverValue && hoverValue) || (ratingValue && ratingValue) || localRating\r\n    }\r\n\r\n    return (ratingValue && ratingValue) || localRating\r\n  }, [allowHover, disableFillHover, hoverValue, ratingValue, localRating])\r\n\r\n  useEffect(() => {\r\n    if (tooltipArray.length > totalIcons) {\r\n      console.error('tooltipArray Array length is bigger then Icons Count length.')\r\n    }\r\n  }, [tooltipArray.length, totalIcons])\r\n\r\n  // const handleTooltip = useCallback(\r\n  //   (value: number) => {\r\n  //     return tooltipArray.length > 0\r\n  //       ? tooltipArray[hoverIndex || valueIndex || localRatingIndex]\r\n  //       : renderValue(value) || 0\r\n  //   },\r\n  //   [tooltipArray, hoverIndex, valueIndex, localRatingIndex, renderValue]\r\n  // )\r\n\r\n  const ratingArray = useCallback(\r\n    (array: string[]) => {\r\n      return (\r\n        (hoverValue && array[hoverIndex]) ||\r\n        (ratingValue && array[valueIndex]) ||\r\n        (initialValue && array[localRatingIndex])\r\n      )\r\n    },\r\n    [hoverValue, hoverIndex, ratingValue, valueIndex, initialValue, localRatingIndex]\r\n  )\r\n\r\n  const ratingRenderValues = useMemo(() => {\r\n    return (\r\n      (hoverValue && renderValue(hoverValue)) ||\r\n      (ratingValue && renderValue(ratingValue)) ||\r\n      (initialValue && renderValue(localRating))\r\n    )\r\n  }, [hoverValue, renderValue, ratingValue, initialValue, localRating])\r\n\r\n  return (\r\n    <span className={css.starRatingWrap} style={{ direction: `${rtl ? 'rtl' : 'ltr'}` }}>\r\n      <span\r\n        className={`${css.simpleStarRating} ${className}`}\r\n        style={{\r\n          cursor: readonly ? '' : 'pointer',\r\n          ...style\r\n        }}\r\n        onPointerMove={readonly ? undefined : handlePointerMove}\r\n        onPointerEnter={readonly ? undefined : handlePointerEnter}\r\n        onPointerLeave={readonly ? undefined : handlePointerLeave}\r\n        onClick={readonly ? undefined : handleClick}\r\n        aria-hidden='true'\r\n      >\r\n        <span\r\n          className={`${css.emptyIcons} ${emptyClassName}`}\r\n          style={{\r\n            color: emptyColor,\r\n            ...emptyStyle\r\n          }}\r\n        >\r\n          {[...Array(iconsCount)].map((_, index) => (\r\n            <Fragment key={index}>\r\n              {customIcons[index]?.icon || emptyIcon || (\r\n                <StarIcon\r\n                  SVGclassName={SVGclassName}\r\n                  SVGstyle={SVGstyle}\r\n                  SVGstorkeWidth={SVGstorkeWidth}\r\n                  SVGstrokeColor={SVGstrokeColor}\r\n                  size={size}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          ))}\r\n        </span>\r\n\r\n        <span\r\n          className={`${css.fillIcons} ${fillClassName}`}\r\n          style={{\r\n            [rtl ? 'right' : 'left']: 0,\r\n            color: ratingArray(fillColorArray) || fillColor,\r\n\r\n            transition: transition ? 'width .2s ease, color .2s ease' : '',\r\n            width: `${valuePercentage}%`,\r\n            ...fillStyle\r\n          }}\r\n          title={`${\r\n            (hoverValue && renderValue(hoverValue)) || renderValue(localRating)\r\n          } ${titleSeparator} ${iconsCount}`}\r\n        >\r\n          {[...Array(iconsCount)].map((_, index) => (\r\n            <Fragment key={index}>\r\n              {customIcons[index]?.icon || fillIcon || (\r\n                <StarIcon\r\n                  SVGclassName={SVGclassName}\r\n                  SVGstyle={SVGstyle}\r\n                  SVGstorkeWidth={SVGstorkeWidth}\r\n                  SVGstrokeColor={SVGstrokeColor}\r\n                  size={size}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          ))}\r\n        </span>\r\n      </span>\r\n\r\n      {showTooltip && (\r\n        <span\r\n          className={`${css.tooltip} ${tooltipClassName}`}\r\n          style={{\r\n            [rtl ? 'marginRight' : 'marginLeft']: 20,\r\n            ...tooltipStyle\r\n          }}\r\n        >\r\n          {/* {tooltipArray.length > 0\r\n            ? (hoverValue && tooltipArray[hoverIndex]) ||\r\n              (ratingValue && tooltipArray[valueIndex]) ||\r\n              (initialValue && tooltipArray[localRatingIndex])\r\n            : (hoverValue && renderValue(hoverValue)) ||\r\n              (ratingValue && renderValue(ratingValue)) ||\r\n              renderValue(localRating) ||\r\n              tooltipDefaultText} */}\r\n\r\n          {(tooltipArray.length > 0 ? ratingArray(tooltipArray) : ratingRenderValues) || tooltipDefaultText}\r\n        </span>\r\n      )}\r\n    </span>\r\n  )\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}