{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport { subMonths, addMonths, isSameDay, isBefore, endOfDay, isAfter, startOfDay } from \"date-fns\";\nexport function useCalendar(_ref) {\n  var _ref2;\n  var value = _ref.value,\n    disablePast = _ref.disablePast,\n    disableFuture = _ref.disableFuture,\n    shouldDisableDate = _ref.shouldDisableDate;\n  var _React$useState = React.useState((_ref2 = Array.isArray(value) ? value[0] : value) !== null && _ref2 !== void 0 ? _ref2 : new Date()),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    viewDate = _React$useState2[0],\n    setViewDate = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    focusedDay = _React$useState4[0],\n    setFocusedDay = _React$useState4[1];\n  var setPrevMonth = React.useCallback(function () {\n    return setViewDate(subMonths(viewDate, 1));\n  }, [viewDate]);\n  var setNextMonth = React.useCallback(function () {\n    return setViewDate(addMonths(viewDate, 1));\n  }, [viewDate]);\n  var isDayFocused = React.useCallback(function (day) {\n    return Boolean(focusedDay && isSameDay(day, focusedDay));\n  }, [focusedDay]);\n  var isDayDisabled = React.useCallback(function (day) {\n    var now = new Date();\n    var disabled = false;\n    if (disablePast) {\n      disabled = isBefore(endOfDay(day), now);\n    }\n    if (disableFuture) {\n      disabled = isAfter(startOfDay(day), now);\n    }\n    if (shouldDisableDate) {\n      disabled = shouldDisableDate(day);\n    }\n    return disabled;\n  }, [disableFuture, disablePast, shouldDisableDate]);\n  var resetSelectedDay = React.useCallback(function () {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n  return {\n    viewDate: viewDate,\n    setViewDate: setViewDate,\n    setPrevMonth: setPrevMonth,\n    setNextMonth: setNextMonth,\n    focusedDay: focusedDay,\n    setFocusedDay: setFocusedDay,\n    isDayFocused: isDayFocused,\n    isDayDisabled: isDayDisabled,\n    resetSelectedDay: resetSelectedDay\n  };\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,OANF,EAOEC,UAPF,QAQO,UARP;AAiBA,OAAO,SAASC,WAAT,OAKqB;EAAA;EAAA,IAJ1BC,KAI0B,QAJ1BA,KAI0B;IAH1BC,WAG0B,QAH1BA,WAG0B;IAF1BC,aAE0B,QAF1BA,aAE0B;IAD1BC,iBAC0B,QAD1BA,iBAC0B;EAC1B,sBAAgCZ,KAAK,CAACa,QAAN,UAC7BC,KAAK,CAACC,OAAN,CAAcN,KAAd,IAAuBA,KAAK,CAAC,CAAD,CAA5B,GAAkCA,KADL,yCACe,IAAIO,IAAJ,EADf,CAAhC;IAAAC;IAAOC,QAAP;IAAiBC,WAAjB;EAGA,uBAAoCnB,KAAK,CAACa,QAAN,EAApC;IAAAO;IAAOC,UAAP;IAAmBC,aAAnB;EAEA,IAAMC,YAAY,GAAGvB,KAAK,CAACwB,WAAN,CACnB;IAAA,OAAML,WAAW,CAAClB,SAAS,CAACiB,QAAD,EAAW,CAAX,CAAV,CAAjB;EAAA,CADmB,EAEnB,CAACA,QAAD,CAFmB,CAArB;EAIA,IAAMO,YAAY,GAAGzB,KAAK,CAACwB,WAAN,CACnB;IAAA,OAAML,WAAW,CAACjB,SAAS,CAACgB,QAAD,EAAW,CAAX,CAAV,CAAjB;EAAA,CADmB,EAEnB,CAACA,QAAD,CAFmB,CAArB;EAKA,IAAMQ,YAAY,GAAG1B,KAAK,CAACwB,WAAN,CACnB,UAACG,GAAD;IAAA,OAAeC,OAAO,CAACP,UAAU,IAAIlB,SAAS,CAACwB,GAAD,EAAMN,UAAN,CAAxB,CAAtB;EAAA,CADmB,EAEnB,CAACA,UAAD,CAFmB,CAArB;EAKA,IAAMQ,aAAa,GAAG7B,KAAK,CAACwB,WAAN,CACpB,UAACG,GAAD,EAAe;IACb,IAAMG,GAAG,GAAG,IAAId,IAAJ,EAAZ;IACA,IAAIe,QAAQ,GAAG,KAAf;IACA,IAAIrB,WAAJ,EAAiB;MACfqB,QAAQ,GAAG3B,QAAQ,CAACC,QAAQ,CAACsB,GAAD,CAAT,EAAgBG,GAAhB,CAAnB;IACD;IACD,IAAInB,aAAJ,EAAmB;MACjBoB,QAAQ,GAAGzB,OAAO,CAACC,UAAU,CAACoB,GAAD,CAAX,EAAkBG,GAAlB,CAAlB;IACD;IACD,IAAIlB,iBAAJ,EAAuB;MACrBmB,QAAQ,GAAGnB,iBAAiB,CAACe,GAAD,CAA5B;IACD;IAED,OAAOI,QAAP;EACD,CAfmB,EAgBpB,CAACpB,aAAD,EAAgBD,WAAhB,EAA6BE,iBAA7B,CAhBoB,CAAtB;EAmBA,IAAMoB,gBAAgB,GAAGhC,KAAK,CAACwB,WAAN,CAAkB,YAAM;IAC/CF,aAAa,CAACW,SAAD,CAAb;EACD,CAFwB,EAEtB,CAACX,aAAD,CAFsB,CAAzB;EAIA,OAAO;IACLJ,QAAQ,EAARA,QADK;IAELC,WAAW,EAAXA,WAFK;IAGLI,YAAY,EAAZA,YAHK;IAILE,YAAY,EAAZA,YAJK;IAKLJ,UAAU,EAAVA,UALK;IAMLC,aAAa,EAAbA,aANK;IAOLI,YAAY,EAAZA,YAPK;IAQLG,aAAa,EAAbA,aARK;IASLG,gBAAgB,EAAhBA;EATK,CAAP;AAWD","names":["React","subMonths","addMonths","isSameDay","isBefore","endOfDay","isAfter","startOfDay","useCalendar","value","disablePast","disableFuture","shouldDisableDate","useState","Array","isArray","Date","_React$useState2","viewDate","setViewDate","_React$useState4","focusedDay","setFocusedDay","setPrevMonth","useCallback","setNextMonth","isDayFocused","day","Boolean","isDayDisabled","now","disabled","resetSelectedDay","undefined"],"sources":["../../src/hooks/useCalendar.ts"],"sourcesContent":["import * as React from \"react\";\nimport {\n  subMonths,\n  addMonths,\n  isSameDay,\n  isBefore,\n  endOfDay,\n  isAfter,\n  startOfDay,\n} from \"date-fns\";\n\nexport interface UseCalendarDependencies {\n  value?: Array<Date | null> | Date;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  shouldDisableDate?(value: Date): boolean;\n}\n\nexport function useCalendar({\n  value,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n}: UseCalendarDependencies) {\n  const [viewDate, setViewDate] = React.useState(\n    (Array.isArray(value) ? value[0] : value) ?? new Date()\n  );\n  const [focusedDay, setFocusedDay] = React.useState<Date>();\n\n  const setPrevMonth = React.useCallback(\n    () => setViewDate(subMonths(viewDate, 1)),\n    [viewDate]\n  );\n  const setNextMonth = React.useCallback(\n    () => setViewDate(addMonths(viewDate, 1)),\n    [viewDate]\n  );\n\n  const isDayFocused = React.useCallback(\n    (day: Date) => Boolean(focusedDay && isSameDay(day, focusedDay)),\n    [focusedDay]\n  );\n\n  const isDayDisabled = React.useCallback(\n    (day: Date) => {\n      const now = new Date();\n      let disabled = false;\n      if (disablePast) {\n        disabled = isBefore(endOfDay(day), now);\n      }\n      if (disableFuture) {\n        disabled = isAfter(startOfDay(day), now);\n      }\n      if (shouldDisableDate) {\n        disabled = shouldDisableDate(day);\n      }\n\n      return disabled;\n    },\n    [disableFuture, disablePast, shouldDisableDate]\n  );\n\n  const resetSelectedDay = React.useCallback(() => {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n\n  return {\n    viewDate,\n    setViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}