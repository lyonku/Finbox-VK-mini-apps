{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"defaultValue\", \"grow\", \"style\", \"onResize\", \"className\", \"getRootRef\", \"getRef\", \"sizeY\", \"rows\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField } from \"../FormField/FormField\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { useEnsuredControl } from \"../../hooks/useEnsuredControl\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nvar Textarea = /*#__PURE__*/React.memo(function (_ref) {\n  var _ref$defaultValue = _ref.defaultValue,\n    defaultValue = _ref$defaultValue === void 0 ? \"\" : _ref$defaultValue,\n    _ref$grow = _ref.grow,\n    grow = _ref$grow === void 0 ? true : _ref$grow,\n    style = _ref.style,\n    onResize = _ref.onResize,\n    className = _ref.className,\n    getRootRef = _ref.getRootRef,\n    getRef = _ref.getRef,\n    sizeY = _ref.sizeY,\n    _ref$rows = _ref.rows,\n    rows = _ref$rows === void 0 ? 2 : _ref$rows,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var _useEnsuredControl = useEnsuredControl(restProps, {\n      defaultValue: defaultValue\n    }),\n    _useEnsuredControl2 = _slicedToArray(_useEnsuredControl, 2),\n    value = _useEnsuredControl2[0],\n    onChange = _useEnsuredControl2[1];\n  var currentScrollHeight = React.useRef();\n  var elementRef = useExternRef(getRef);\n  var platform = usePlatform(); // autosize input\n\n  React.useEffect(function () {\n    var el = elementRef.current;\n    if (grow && el !== null && el !== void 0 && el.offsetParent) {\n      el.style.height = \"\";\n      el.style.height = \"\".concat(el.scrollHeight, \"px\");\n      if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n        onResize(el);\n        currentScrollHeight.current = el.scrollHeight;\n      }\n    }\n  }, [grow, value, sizeY, elementRef, onResize]);\n  return createScopedElement(FormField, {\n    vkuiClass: classNames(getClassName(\"Textarea\", platform), \"Textarea--sizeY-\".concat(sizeY)),\n    className: className,\n    style: style,\n    getRootRef: getRootRef,\n    disabled: restProps.disabled\n  }, createScopedElement(\"textarea\", _extends({}, restProps, {\n    rows: rows,\n    vkuiClass: \"Textarea__el\",\n    value: value,\n    onChange: onChange,\n    ref: elementRef\n  })));\n}); // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(Textarea, {\n  sizeY: true\n});","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT;AACA,SAASC,SAAT;AAEA,SAASC,cAAT;AACA,SAASC,YAAT;AACA,SAASC,iBAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AAaA,IAAMC,QAAiC,gBAAGR,KAAK,CAACS,IAAN,CACxC,gBAWqB;EAAA,6BAVnBC,YAUmB;IAVnBA,YAUmB,kCAVJ,EAUI;IAAAC,iBATnBC,IASmB;IATnBA,IASmB,0BATZ,IASY;IARnBC,KAQmB,QARnBA,KAQmB;IAPnBC,QAOmB,QAPnBA,QAOmB;IANnBC,SAMmB,QANnBA,SAMmB;IALnBC,UAKmB,QALnBA,UAKmB;IAJnBC,MAImB,QAJnBA,MAImB;IAHnBC,KAGmB,QAHnBA,KAGmB;IAAAC,iBAFnBC,IAEmB;IAFnBA,IAEmB,0BAFZ,CAEY;IADhBC,SACgB;EACnB,yBAA0BhB,iBAAiB,CAACgB,SAAD,EAAY;MAAEX,YAAY,EAAZA;IAAF,CAAZ,CAA3C;IAAAY;IAAOC,KAAP;IAAcC,QAAd;EACA,IAAMC,mBAAmB,GAAGzB,KAAK,CAAC0B,MAAN,EAA5B;EACA,IAAMC,UAAU,GAAGrB,YAAY,CAACW,MAAD,CAA/B;EACA,IAAMW,QAAQ,GAAGrB,WAAW,EAA5B,CAJmB,CAMnB;;EACAP,KAAK,CAAC6B,SAAN,CAAgB,YAAM;IACpB,IAAMC,EAAE,GAAGH,UAAU,CAACI,OAAtB;IAEA,IAAInB,IAAI,IAAIkB,EAAJ,aAAIA,EAAJ,eAAIA,EAAE,CAAEE,YAAhB,EAA8B;MAC5BF,EAAE,CAACjB,KAAH,CAASoB,MAAT,GAAkB,EAAlB;MACAH,EAAE,CAACjB,KAAH,CAASoB,MAAT,aAAqBH,EAAE,CAACI,YAAxB;MAEA,IAAIJ,EAAE,CAACI,YAAH,KAAoBT,mBAAmB,CAACM,OAAxC,IAAmDjB,QAAvD,EAAiE;QAC/DA,QAAQ,CAACgB,EAAD,CAAR;QACAL,mBAAmB,CAACM,OAApB,GAA8BD,EAAE,CAACI,YAAjC;MACD;IACF;EACF,CAZD,EAYG,CAACtB,IAAD,EAAOW,KAAP,EAAcL,KAAd,EAAqBS,UAArB,EAAiCb,QAAjC,CAZH;EAcA,OACEqB,oBAACjC,SAAD;IACEkC,SAAS,EAAEnC,UAAU,CACnBG,YAAY,CAAC,UAAD,EAAawB,QAAb,CADO,4BAEAV,KAFA,EADvB;IAKEH,SAAS,EAAEA,SALb;IAMEF,KAAK,EAAEA,KANT;IAOEG,UAAU,EAAEA,UAPd;IAQEqB,QAAQ,EAAEhB,SAAS,CAACgB;EARtB,GAUEF,6CACMd,SADN;IAEED,IAAI,EAAEA,IAFR;IAGEgB,SAAS,EAAC,cAHZ;IAIEb,KAAK,EAAEA,KAJT;IAKEC,QAAQ,EAAEA,QALZ;IAMEc,GAAG,EAAEX;EANP,GAVF,CADF;AAqBD,CAtDuC,CAA1C,C,CAyDA;;AACA,eAAexB,cAAc,CAACK,QAAD,EAAW;EAAEU,KAAK,EAAE;AAAT,CAAX,CAA7B","names":["React","classNames","FormField","withAdaptivity","getClassName","useEnsuredControl","useExternRef","usePlatform","Textarea","memo","defaultValue","_ref$grow","grow","style","onResize","className","getRootRef","getRef","sizeY","_ref$rows","rows","restProps","_useEnsuredControl2","value","onChange","currentScrollHeight","useRef","elementRef","platform","useEffect","el","current","offsetParent","height","scrollHeight","createScopedElement","vkuiClass","disabled","ref"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\Textarea\\Textarea.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField } from \"../FormField/FormField\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { useEnsuredControl } from \"../../hooks/useEnsuredControl\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport \"./Textarea.css\";\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HasRef<HTMLTextAreaElement>,\n    HasRootRef<HTMLElement>,\n    AdaptivityProps {\n  grow?: boolean;\n  onResize?(el: HTMLTextAreaElement): void;\n  defaultValue?: string;\n}\n\nconst Textarea: React.FC<TextareaProps> = React.memo(\n  ({\n    defaultValue = \"\",\n    grow = true,\n    style,\n    onResize,\n    className,\n    getRootRef,\n    getRef,\n    sizeY,\n    rows = 2,\n    ...restProps\n  }: TextareaProps) => {\n    const [value, onChange] = useEnsuredControl(restProps, { defaultValue });\n    const currentScrollHeight = React.useRef<number>();\n    const elementRef = useExternRef(getRef);\n    const platform = usePlatform();\n\n    // autosize input\n    React.useEffect(() => {\n      const el = elementRef.current;\n\n      if (grow && el?.offsetParent) {\n        el.style.height = \"\";\n        el.style.height = `${el.scrollHeight}px`;\n\n        if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n          onResize(el);\n          currentScrollHeight.current = el.scrollHeight;\n        }\n      }\n    }, [grow, value, sizeY, elementRef, onResize]);\n\n    return (\n      <FormField\n        vkuiClass={classNames(\n          getClassName(\"Textarea\", platform),\n          `Textarea--sizeY-${sizeY}`\n        )}\n        className={className}\n        style={style}\n        getRootRef={getRootRef}\n        disabled={restProps.disabled}\n      >\n        <textarea\n          {...restProps}\n          rows={rows}\n          vkuiClass=\"Textarea__el\"\n          value={value}\n          onChange={onChange}\n          ref={elementRef}\n        />\n      </FormField>\n    );\n  }\n);\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(Textarea, { sizeY: true });\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}