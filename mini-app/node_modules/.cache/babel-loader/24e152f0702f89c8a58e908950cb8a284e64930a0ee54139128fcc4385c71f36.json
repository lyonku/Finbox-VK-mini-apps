{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"hasMouse\", \"monthNames\", \"day\", \"month\", \"year\", \"onDateChange\", \"disabled\"],\n  _excluded2 = [\"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"hasMouse\", \"day\", \"month\", \"year\", \"onDateChange\"],\n  _excluded3 = [\"hasMouse\", \"defaultValue\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport Input from \"../Input/Input\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { leadingZero } from \"../../lib/utils\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nvar DefaultMonths = [\"Января\", \"Февраля\", \"Марта\", \"Апреля\", \"Мая\", \"Июня\", \"Июля\", \"Августа\", \"Сентября\", \"Октября\", \"Ноября\", \"Декабря\"];\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat(_ref) {\n  var _ref$day = _ref.day,\n    day = _ref$day === void 0 ? 0 : _ref$day,\n    _ref$month = _ref.month,\n    month = _ref$month === void 0 ? 0 : _ref$month,\n    _ref$year = _ref.year,\n    year = _ref$year === void 0 ? 0 : _ref$year;\n  return \"\".concat(year, \"-\").concat(leadingZero(month), \"-\").concat(leadingZero(day));\n} // Переводим дату формата гг-мм-дд к объекту\n\nfunction parseInputDate(date) {\n  var splited = date.split(\"-\");\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0])\n  };\n}\nfunction getMonthMaxDay(month, year) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\nvar range = function range(start, end) {\n  var swap = start > end;\n  var arr = [];\n  for (var i = Math.min(start, end); i <= Math.max(start, end); i++) {\n    arr.push(i);\n  }\n  return swap ? arr.reverse() : arr;\n};\nvar DatePickerCustom = function DatePickerCustom(_ref2) {\n  var name = _ref2.name,\n    _ref2$min = _ref2.min,\n    min = _ref2$min === void 0 ? {\n      day: 0,\n      month: 0,\n      year: 0\n    } : _ref2$min,\n    _ref2$max = _ref2.max,\n    max = _ref2$max === void 0 ? {\n      day: 31,\n      month: 12,\n      year: 2100\n    } : _ref2$max,\n    dayPlaceholder = _ref2.dayPlaceholder,\n    monthPlaceholder = _ref2.monthPlaceholder,\n    yearPlaceholder = _ref2.yearPlaceholder,\n    popupDirection = _ref2.popupDirection,\n    defaultValue = _ref2.defaultValue,\n    hasMouse = _ref2.hasMouse,\n    monthNames = _ref2.monthNames,\n    _ref2$day = _ref2.day,\n    day = _ref2$day === void 0 ? 0 : _ref2$day,\n    _ref2$month = _ref2.month,\n    month = _ref2$month === void 0 ? 0 : _ref2$month,\n    _ref2$year = _ref2.year,\n    year = _ref2$year === void 0 ? 0 : _ref2$year,\n    onDateChange = _ref2.onDateChange,\n    disabled = _ref2.disabled,\n    restProps = _objectWithoutProperties(_ref2, _excluded);\n  var onSelectChange = function onSelectChange(e) {\n    onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(_defineProperty({\n      day: day,\n      month: month,\n      year: year\n    }, e.target.name, Number(e.target.value)));\n  };\n  var dayOptions = range(1, getMonthMaxDay(month, year)).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  var monthOptions = (monthNames || DefaultMonths).map(function (name, index) {\n    return {\n      label: name,\n      value: index + 1\n    };\n  });\n  var yearOptions = range(max.year, min.year).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  return createScopedElement(\"div\", _extends({\n    vkuiClass: \"DatePicker\"\n  }, restProps), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__container\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__day\"\n  }, createScopedElement(CustomSelect, {\n    name: \"day\",\n    value: day,\n    options: dayOptions,\n    placeholder: dayPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__month\"\n  }, createScopedElement(CustomSelect, {\n    vkuiClass: \"DatePicker__monthSelect\",\n    name: \"month\",\n    value: month,\n    options: monthOptions,\n    placeholder: monthPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__year\"\n  }, createScopedElement(CustomSelect, {\n    name: \"year\",\n    value: year,\n    options: yearOptions,\n    placeholder: yearPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  }))), createScopedElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  }));\n};\nvar DatePickerNative = function DatePickerNative(_ref3) {\n  var _ref3$min = _ref3.min,\n    min = _ref3$min === void 0 ? {\n      day: 0,\n      month: 0,\n      year: 0\n    } : _ref3$min,\n    _ref3$max = _ref3.max,\n    max = _ref3$max === void 0 ? {\n      day: 31,\n      month: 12,\n      year: 2100\n    } : _ref3$max,\n    dayPlaceholder = _ref3.dayPlaceholder,\n    monthPlaceholder = _ref3.monthPlaceholder,\n    yearPlaceholder = _ref3.yearPlaceholder,\n    popupDirection = _ref3.popupDirection,\n    defaultValue = _ref3.defaultValue,\n    hasMouse = _ref3.hasMouse,\n    day = _ref3.day,\n    month = _ref3.month,\n    year = _ref3.year,\n    onDateChange = _ref3.onDateChange,\n    restProps = _objectWithoutProperties(_ref3, _excluded2);\n  var defProps = day && month && year ? {\n    defaultValue: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  } : {};\n  var onStringChange = React.useCallback(function (e) {\n    onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(parseInputDate(e.currentTarget.value));\n  }, [onDateChange]);\n  return createScopedElement(Input, _extends({}, restProps, {\n    type: \"date\",\n    onChange: onStringChange,\n    min: convertToInputFormat(min),\n    max: convertToInputFormat(max)\n  }, defProps));\n};\nvar DatePicker = function DatePicker(_ref4) {\n  var hasMouse = _ref4.hasMouse,\n    defaultValue = _ref4.defaultValue,\n    props = _objectWithoutProperties(_ref4, _excluded3);\n  var _React$useState = React.useState(function () {\n      return {\n        day: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.day) || 0,\n        month: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.month) || 0,\n        year: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.year) || 0\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var onDateChange = React.useCallback(function (update) {\n    setValue(update);\n    props.onDateChange && props.onDateChange(_objectSpread({}, update));\n  }, [props]);\n  var Cmp = hasMouse ? DatePickerCustom : DatePickerNative;\n  return createScopedElement(Cmp, _extends({}, props, value, {\n    onDateChange: onDateChange\n  }));\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(DatePicker, {\n  hasMouse: true\n});","map":{"version":3,"mappings":"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","names":["React","Input","withAdaptivity","leadingZero","CustomSelect","DefaultMonths","convertToInputFormat","day","_ref$month","month","_ref$year","year","parseInputDate","date","splited","split","Number","getMonthMaxDay","Date","getDate","range","start","end","swap","arr","i","Math","min","max","push","reverse","DatePickerCustom","name","_ref2$min","_ref2$max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","hasMouse","monthNames","_ref2$day","_ref2$month","_ref2$year","onDateChange","disabled","restProps","onSelectChange","e","target","value","dayOptions","map","label","String","monthOptions","index","yearOptions","createScopedElement","vkuiClass","options","placeholder","onChange","type","DatePickerNative","_ref3$max","defProps","onStringChange","useCallback","currentTarget","DatePicker","props","useState","_React$useState2","setValue","update","Cmp"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\DatePicker\\DatePicker.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Input from \"../Input/Input\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { HasPlatform } from \"../../types\";\nimport { leadingZero } from \"../../lib/utils\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport \"./DatePicker.css\";\n\nconst DefaultMonths: string[] = [\n  \"Января\",\n  \"Февраля\",\n  \"Марта\",\n  \"Апреля\",\n  \"Мая\",\n  \"Июня\",\n  \"Июля\",\n  \"Августа\",\n  \"Сентября\",\n  \"Октября\",\n  \"Ноября\",\n  \"Декабря\",\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps\n  extends Omit<\n      React.HTMLAttributes<HTMLDivElement>,\n      \"defaultValue\" | \"min\" | \"max\"\n    >,\n    HasPlatform,\n    AdaptivityProps {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: \"top\" | \"bottom\";\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({\n  day = 0,\n  month = 0,\n  year = 0,\n}: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split(\"-\");\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst range = (start: number, end: number) => {\n  const swap = start > end;\n  const arr = [];\n  for (let i = Math.min(start, end); i <= Math.max(start, end); i++) {\n    arr.push(i);\n  }\n  return swap ? arr.reverse() : arr;\n};\n\nconst DatePickerCustom: React.FC<\n  DatePickerProps & Partial<DatePickerDateFormat>\n> = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  hasMouse,\n  monthNames,\n  day = 0,\n  month = 0,\n  year = 0,\n  onDateChange,\n  disabled,\n  ...restProps\n}) => {\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange?.({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <div vkuiClass=\"DatePicker\" {...restProps}>\n      <div vkuiClass=\"DatePicker__container\">\n        <div vkuiClass=\"DatePicker__day\">\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div vkuiClass=\"DatePicker__month\">\n          <CustomSelect\n            vkuiClass=\"DatePicker__monthSelect\"\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div vkuiClass=\"DatePicker__year\">\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input\n        type=\"hidden\"\n        name={name}\n        value={convertToInputFormat({ day, month, year })}\n      />\n    </div>\n  );\n};\n\nconst DatePickerNative: React.FC<\n  DatePickerProps & Partial<DatePickerDateFormat>\n> = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  hasMouse,\n  day,\n  month,\n  year,\n  onDateChange,\n  ...restProps\n}) => {\n  const defProps =\n    day && month && year\n      ? { defaultValue: convertToInputFormat({ day, month, year }) }\n      : {};\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> =\n    React.useCallback(\n      (e) => {\n        onDateChange?.(parseInputDate(e.currentTarget.value));\n      },\n      [onDateChange]\n    );\n  return (\n    <Input\n      {...restProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\nconst DatePicker: React.FC<DatePickerProps> = ({\n  hasMouse,\n  defaultValue,\n  ...props\n}) => {\n  const [value, setValue] = React.useState<Partial<DatePickerDateFormat>>(\n    () => ({\n      day: defaultValue?.day || 0,\n      month: defaultValue?.month || 0,\n      year: defaultValue?.year || 0,\n    })\n  );\n\n  const onDateChange = React.useCallback(\n    (update: DatePickerDateFormat) => {\n      setValue(update);\n      props.onDateChange && props.onDateChange({ ...update });\n    },\n    [props]\n  );\n\n  const Cmp = hasMouse ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(DatePicker, {\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}