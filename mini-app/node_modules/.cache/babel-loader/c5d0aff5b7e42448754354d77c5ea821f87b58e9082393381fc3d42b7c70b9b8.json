{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nexport var useBooleanState = function useBooleanState() {\n  var defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var _React$useState = React.useState(defaultValue),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var setTrue = React.useCallback(function () {\n    setValue(true);\n  }, []);\n  var setFalse = React.useCallback(function () {\n    setValue(false);\n  }, []);\n  var toggle = React.useCallback(function () {\n    setValue(!value);\n  }, [value]);\n  return {\n    value: value,\n    setTrue: setTrue,\n    setFalse: setFalse,\n    toggle: toggle\n  };\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAA0B;EAAA,IAAzBC,YAAyB,uEAAV,KAAU;EACvD,sBAA0BF,KAAK,CAACG,QAAN,CAAeD,YAAf,CAA1B;IAAAE;IAAOC,KAAP;IAAcC,QAAd;EAEA,IAAMC,OAAO,GAAGP,KAAK,CAACQ,WAAN,CAAkB,YAAM;IACtCF,QAAQ,CAAC,IAAD,CAAR;EACD,CAFe,EAEb,EAFa,CAAhB;EAIA,IAAMG,QAAQ,GAAGT,KAAK,CAACQ,WAAN,CAAkB,YAAM;IACvCF,QAAQ,CAAC,KAAD,CAAR;EACD,CAFgB,EAEd,EAFc,CAAjB;EAIA,IAAMI,MAAM,GAAGV,KAAK,CAACQ,WAAN,CAAkB,YAAM;IACrCF,QAAQ,CAAC,CAACD,KAAF,CAAR;EACD,CAFc,EAEZ,CAACA,KAAD,CAFY,CAAf;EAIA,OAAO;IAAEA,KAAK,EAALA,KAAF;IAASE,OAAO,EAAPA,OAAT;IAAkBE,QAAQ,EAARA,QAAlB;IAA4BC,MAAM,EAANA;EAA5B,CAAP;AACD,CAhBM","names":["React","useBooleanState","defaultValue","useState","_React$useState2","value","setValue","setTrue","useCallback","setFalse","toggle"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useBooleanState.ts"],"sourcesContent":["import * as React from \"react\";\n\nexport const useBooleanState = (defaultValue = false) => {\n  const [value, setValue] = React.useState(defaultValue);\n\n  const setTrue = React.useCallback(() => {\n    setValue(true);\n  }, []);\n\n  const setFalse = React.useCallback(() => {\n    setValue(false);\n  }, []);\n\n  const toggle = React.useCallback(() => {\n    setValue(!value);\n  }, [value]);\n\n  return { value, setTrue, setFalse, toggle };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}