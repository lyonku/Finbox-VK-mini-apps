{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as React from \"react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nvar initialState = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null\n};\nfunction resolveInsets(e) {\n  var _e$detail = e.detail,\n    type = _e$detail.type,\n    data = _e$detail.data;\n  switch (type) {\n    case \"VKWebAppUpdateConfig\":\n    case \"VKWebAppUpdateInsets\":\n      // Устаревшее событие vk-bridge\n      var insets = data.insets;\n      if (insets) {\n        return _objectSpread(_objectSpread({}, insets), {}, {\n          bottom: insets.bottom > 150 ? 0 : insets.bottom // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        });\n      }\n  }\n\n  return null;\n}\nvkBridge.subscribe(function (e) {\n  var insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\nexport function useInsets() {\n  var _React$useState = React.useState(initialState),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    insets = _React$useState2[0],\n    setInsets = _React$useState2[1];\n  useIsomorphicLayoutEffect(function () {\n    function connectListener(e) {\n      var insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n    vkBridge.subscribe(connectListener);\n    return function () {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n  return insets;\n}","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAiD,sBAAjD;AACA,SAASC,yBAAT;AASA,IAAIC,YAAoB,GAAG;EACzBC,MAAM,EAAE,IADiB;EAEzBC,GAAG,EAAE,IAFoB;EAGzBC,IAAI,EAAE,IAHmB;EAIzBC,KAAK,EAAE;AAJkB,CAA3B;AAgBA,SAASC,aAAT,CAAuBC,CAAvB,EAAsD;EACpD,gBAAuBA,CAAC,CAACC,MAAzB;IAAQC,IAAR,aAAQA,IAAR;IAAcC,IAAd,aAAcA,IAAd;EACA,QAAQD,IAAR;IACE,KAAK,sBAAL;IACA,KAAK,sBAAL;MAA6B;MAC3B,IAAQE,MAAR,GAAmBD,IAAnB,CAAQC,MAAR;MACA,IAAIA,MAAJ,EAAY;QACV,uCACKA,MADL;UAEET,MAAM,EAAES,MAAM,CAACT,MAAP,GAAgB,GAAhB,GAAsB,CAAtB,GAA0BS,MAAM,CAACT,MAF3C,CAEmD;QAFnD;MAID;EAAA;;EAEL,OAAO,IAAP;AACD;AAEDH,QAAQ,CAACa,SAAT,CAAmB,UAACL,CAAD,EAAoB;EACrC,IAAMI,MAAM,GAAGL,aAAa,CAACC,CAAD,CAA5B;EACA,IAAII,MAAJ,EAAY;IACVV,YAAY,GAAGU,MAAf;EACD;AACF,CALD;AAOA,OAAO,SAASE,SAAT,GAA6B;EAClC,sBAA4Bf,KAAK,CAACgB,QAAN,CAAuBb,YAAvB,CAA5B;IAAAc;IAAOJ,MAAP;IAAeK,SAAf;EAEAhB,yBAAyB,CAAC,YAAM;IAC9B,SAASiB,eAAT,CAAyBV,CAAzB,EAAyC;MACvC,IAAMI,MAAM,GAAGL,aAAa,CAACC,CAAD,CAA5B;MACA,IAAII,MAAJ,EAAY;QACVK,SAAS,CAACL,MAAD,CAAT;MACD;IACF;IAEDZ,QAAQ,CAACa,SAAT,CAAmBK,eAAnB;IACA,OAAO,YAAM;MACXlB,QAAQ,CAACmB,WAAT,CAAqBD,eAArB;IACD,CAFD;EAGD,CAZwB,EAYtB,EAZsB,CAAzB;EAcA,OAAON,MAAP;AACD","names":["React","vkBridge","useIsomorphicLayoutEffect","initialState","bottom","top","left","right","resolveInsets","e","detail","type","data","insets","subscribe","useInsets","useState","_React$useState2","setInsets","connectListener","unsubscribe"],"sources":["../../src/hooks/useInsets.ts"],"sourcesContent":["import * as React from \"react\";\nimport vkBridge, { Insets as BridgeInsets } from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\nexport interface Insets {\n  bottom: BridgeInsets[\"bottom\"] | null;\n  top: BridgeInsets[\"top\"] | null;\n  left: BridgeInsets[\"left\"] | null;\n  right: BridgeInsets[\"right\"] | null;\n}\n\nlet initialState: Insets = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null,\n};\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nfunction resolveInsets(e: BridgeEvent): Insets | null {\n  const { type, data } = e.detail;\n  switch (type) {\n    case \"VKWebAppUpdateConfig\":\n    case \"VKWebAppUpdateInsets\": // Устаревшее событие vk-bridge\n      const { insets } = data;\n      if (insets) {\n        return {\n          ...insets,\n          bottom: insets.bottom > 150 ? 0 : insets.bottom, // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        };\n      }\n  }\n  return null;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\n\nexport function useInsets(): Insets {\n  const [insets, setInsets] = React.useState<Insets>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function connectListener(e: BridgeEvent) {\n      const insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n\n    vkBridge.subscribe(connectListener);\n    return () => {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n\n  return insets;\n}\n"]},"metadata":{},"sourceType":"module"}