{"ast":null,"code":"import _classCallCheck from \"C:/Users/zpili/Desktop/Finbox-VK-mini-apps/mini-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/zpili/Desktop/Finbox-VK-mini-apps/mini-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport firebase from '@firebase/app-compat';\nimport { Component } from '@firebase/component';\nimport { trace as _trace } from '@firebase/performance';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PerformanceCompatImpl = /*#__PURE__*/function () {\n  function PerformanceCompatImpl(app, _delegate) {\n    _classCallCheck(this, PerformanceCompatImpl);\n    this.app = app;\n    this._delegate = _delegate;\n  }\n  _createClass(PerformanceCompatImpl, [{\n    key: \"instrumentationEnabled\",\n    get: function get() {\n      return this._delegate.instrumentationEnabled;\n    },\n    set: function set(val) {\n      this._delegate.instrumentationEnabled = val;\n    }\n  }, {\n    key: \"dataCollectionEnabled\",\n    get: function get() {\n      return this._delegate.dataCollectionEnabled;\n    },\n    set: function set(val) {\n      this._delegate.dataCollectionEnabled = val;\n    }\n  }, {\n    key: \"trace\",\n    value: function trace(traceName) {\n      return _trace(this._delegate, traceName);\n    }\n  }]);\n  return PerformanceCompatImpl;\n}();\nvar name = \"@firebase/performance-compat\";\nvar version = \"0.1.17\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerPerformanceCompat(firebaseInstance) {\n  firebaseInstance.INTERNAL.registerComponent(new Component('performance-compat', performanceFactory, \"PUBLIC\" /* PUBLIC */));\n  firebaseInstance.registerVersion(name, version);\n}\nfunction performanceFactory(container) {\n  var app = container.getProvider('app-compat').getImmediate();\n  // The following call will always succeed.\n  var performance = container.getProvider('performance').getImmediate();\n  return new PerformanceCompatImpl(app, performance);\n}\nregisterPerformanceCompat(firebase);","map":{"version":3,"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;AAeG;AAfH,IA0BaA,qBAAqB;EAGhC,+BACSC,GAAgB,EACdC,SAA8B;IAAA;IADhC,IAAG,OAAHD,GAAG;IACD,IAAS,aAATC,SAAS;;EAChB;IAAA;IAAA,KAEJ,eAA0B;MACxB,OAAO,IAAI,CAACA,SAAS,CAACC,sBAAsB;KAC7C;IAAA,KAED,aAA2BC,GAAY;MACrC,IAAI,CAACF,SAAS,CAACC,sBAAsB,GAAGC,GAAG;;EAC5C;IAAA;IAAA,KAED,eAAyB;MACvB,OAAO,IAAI,CAACF,SAAS,CAACG,qBAAqB;KAC5C;IAAA,KAED,aAA0BD,GAAY;MACpC,IAAI,CAACF,SAAS,CAACG,qBAAqB,GAAGD,GAAG;;EAC3C;IAAA;IAAA,OAED,eAAME,SAAiB;MACrB,OAAOC,MAAK,CAAC,IAAI,CAACL,SAAS,EAAEI,SAAS,CAAC;;EACxC;EAAA;AAAA;;;;ACpDH;;;;;;;;;;;;;;;AAeG;AAYH,SAASE,yBAAyB,CAACC,gBAAoC;EACrEA,gBAAgB,CAACC,QAAQ,CAACC,iBAAiB,CACzC,IAAIC,SAAS,CACX,oBAAoB,EACpBC,kBAAkB,wBAEnB,CACF;EAEDJ,gBAAgB,CAACK,eAAe,CAACC,IAAW,EAAEC,OAAO,CAAC;AACxD;AAEA,SAASH,kBAAkB,CACzBI,SAA6B;EAE7B,IAAMhB,GAAG,GAAGgB,SAAS,CAACC,WAAW,CAAC,YAAY,CAAC,CAACC,YAAY,EAAE;;EAE9D,IAAMC,WAAW,GAAGH,SAAS,CAACC,WAAW,CAAC,aAAa,CAAC,CAACC,YAAY,EAAE;EAEvE,OAAO,IAAInB,qBAAqB,CAACC,GAAG,EAAEmB,WAAW,CAAC;AACpD;AAEAZ,yBAAyB,CAACa,QAA8B,CAAC","names":["PerformanceCompatImpl","app","_delegate","instrumentationEnabled","val","dataCollectionEnabled","traceName","trace","registerPerformanceCompat","firebaseInstance","INTERNAL","registerComponent","Component","performanceFactory","registerVersion","packageName","version","container","getProvider","getImmediate","performance","firebase"],"sources":["../../src/performance.ts","../../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  trace,\n  FirebasePerformance,\n  // The PerformanceTrace type has not changed between modular and non-modular packages.\n  PerformanceTrace\n} from '@firebase/performance';\nimport { FirebasePerformance as FirebasePerformanceCompat } from '@firebase/performance-types';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\n\nexport class PerformanceCompatImpl\n  implements FirebasePerformanceCompat, _FirebaseService\n{\n  constructor(\n    public app: FirebaseApp,\n    readonly _delegate: FirebasePerformance\n  ) {}\n\n  get instrumentationEnabled(): boolean {\n    return this._delegate.instrumentationEnabled;\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    this._delegate.instrumentationEnabled = val;\n  }\n\n  get dataCollectionEnabled(): boolean {\n    return this._delegate.dataCollectionEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    this._delegate.dataCollectionEnabled = val;\n  }\n\n  trace(traceName: string): PerformanceTrace {\n    return trace(this._delegate, traceName);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType\n} from '@firebase/component';\nimport { PerformanceCompatImpl } from './performance';\nimport { name as packageName, version } from '../package.json';\nimport { FirebasePerformance as FirebasePerformanceCompat } from '@firebase/performance-types';\n\nfunction registerPerformanceCompat(firebaseInstance: _FirebaseNamespace): void {\n  firebaseInstance.INTERNAL.registerComponent(\n    new Component(\n      'performance-compat',\n      performanceFactory,\n      ComponentType.PUBLIC\n    )\n  );\n\n  firebaseInstance.registerVersion(packageName, version);\n}\n\nfunction performanceFactory(\n  container: ComponentContainer\n): PerformanceCompatImpl {\n  const app = container.getProvider('app-compat').getImmediate();\n  // The following call will always succeed.\n  const performance = container.getProvider('performance').getImmediate();\n\n  return new PerformanceCompatImpl(app, performance);\n}\n\nregisterPerformanceCompat(firebase as _FirebaseNamespace);\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    performance: {\n      (app?: FirebaseApp): FirebasePerformanceCompat;\n    };\n  }\n  interface FirebaseApp {\n    performance(): FirebasePerformanceCompat;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}