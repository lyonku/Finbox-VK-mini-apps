{"ast":null,"code":"import _classCallCheck from \"C:/Users/zpili/Desktop/Finbox-VK-mini-apps/mini-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/zpili/Desktop/Finbox-VK-mini-apps/mini-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport firebase from '@firebase/app-compat';\nimport { httpsCallable as _httpsCallable, httpsCallableFromURL as _httpsCallableFromURL, connectFunctionsEmulator } from '@firebase/functions';\nimport { FirebaseError } from '@firebase/util';\nimport { Component } from '@firebase/component';\nvar name = \"@firebase/functions-compat\";\nvar version = \"0.2.8\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FunctionsService = /*#__PURE__*/function () {\n  function FunctionsService(app, _delegate) {\n    _classCallCheck(this, FunctionsService);\n    this.app = app;\n    this._delegate = _delegate;\n    this._region = this._delegate.region;\n    this._customDomain = this._delegate.customDomain;\n  }\n  _createClass(FunctionsService, [{\n    key: \"httpsCallable\",\n    value: function httpsCallable(name, options) {\n      return _httpsCallable(this._delegate, name, options);\n    }\n  }, {\n    key: \"httpsCallableFromURL\",\n    value: function httpsCallableFromURL(url, options) {\n      return _httpsCallableFromURL(this._delegate, url, options);\n    }\n    /**\r\n     * Deprecated in pre-modularized repo, does not exist in modularized\r\n     * functions package, need to convert to \"host\" and \"port\" args that\r\n     * `useFunctionsEmulatorExp` takes.\r\n     * @deprecated\r\n     */\n  }, {\n    key: \"useFunctionsEmulator\",\n    value: function useFunctionsEmulator(origin) {\n      var match = origin.match('[a-zA-Z]+://([a-zA-Z0-9.-]+)(?::([0-9]+))?');\n      if (match == null) {\n        throw new FirebaseError('functions', 'No origin provided to useFunctionsEmulator()');\n      }\n      if (match[2] == null) {\n        throw new FirebaseError('functions', 'Port missing in origin provided to useFunctionsEmulator()');\n      }\n      return connectFunctionsEmulator(this._delegate, match[1], Number(match[2]));\n    }\n  }, {\n    key: \"useEmulator\",\n    value: function useEmulator(host, port) {\n      return connectFunctionsEmulator(this._delegate, host, port);\n    }\n  }]);\n  return FunctionsService;\n}(); /**\r\n      * @license\r\n      * Copyright 2020 Google LLC\r\n      *\r\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n      * you may not use this file except in compliance with the License.\r\n      * You may obtain a copy of the License at\r\n      *\r\n      *   http://www.apache.org/licenses/LICENSE-2.0\r\n      *\r\n      * Unless required by applicable law or agreed to in writing, software\r\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n      * See the License for the specific language governing permissions and\r\n      * limitations under the License.\r\n      */\nvar DEFAULT_REGION = 'us-central1';\nvar factory = function factory(container, _ref) {\n  var regionOrCustomDomain = _ref.instanceIdentifier;\n  // Dependencies\n  var app = container.getProvider('app-compat').getImmediate();\n  var functionsServiceExp = container.getProvider('functions').getImmediate({\n    identifier: regionOrCustomDomain !== null && regionOrCustomDomain !== void 0 ? regionOrCustomDomain : DEFAULT_REGION\n  });\n  return new FunctionsService(app, functionsServiceExp);\n};\nfunction registerFunctions() {\n  var namespaceExports = {\n    Functions: FunctionsService\n  };\n  firebase.INTERNAL.registerComponent(new Component('functions-compat', factory, \"PUBLIC\" /* PUBLIC */).setServiceProps(namespaceExports).setMultipleInstances(true));\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nregisterFunctions();\nfirebase.registerVersion(name, version);","map":{"version":3,"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeG;AAfH,IA4BaA,gBAAgB;EAY3B,0BACSC,GAAgB,EACdC,SAA8B;IAAA;IADhC,IAAG,OAAHD,GAAG;IACD,IAAS,aAATC,SAAS;IAElB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACD,SAAS,CAACE,MAAM;IACpC,IAAI,CAACC,aAAa,GAAG,IAAI,CAACH,SAAS,CAACI,YAAY;;EACjD;IAAA;IAAA,OACD,uBAAcC,IAAY,EAAEC,OAA8B;MACxD,OAAOC,cAAgB,CAAC,IAAI,CAACP,SAAS,EAAEK,IAAI,EAAEC,OAAO,CAAC;;EACvD;IAAA;IAAA,OACD,8BACEE,GAAW,EACXF,OAA8B;MAE9B,OAAOG,qBAAuB,CAAC,IAAI,CAACT,SAAS,EAAEQ,GAAG,EAAEF,OAAO,CAAC;;IAE9D;;;;;AAKG;EALH;IAAA;IAAA,OAMA,8BAAqBI,MAAc;MACjC,IAAMC,KAAK,GAAGD,MAAM,CAACC,KAAK,CAAC,4CAA4C,CAAC;MACxE,IAAIA,KAAK,IAAI,IAAI,EAAE;QACjB,MAAM,IAAIC,aAAa,CACrB,WAAW,EACX,8CAA8C,CAC/C;MACF;MACD,IAAID,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;QACpB,MAAM,IAAIC,aAAa,CACrB,WAAW,EACX,2DAA2D,CAC5D;MACF;MACD,OAAOC,wBAAuB,CAAC,IAAI,CAACb,SAAS,EAAEW,KAAK,CAAC,CAAC,CAAC,EAAEG,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;EAC3E;IAAA;IAAA,OACD,qBAAYI,IAAY,EAAEC,IAAY;MACpC,OAAOH,wBAAuB,CAAC,IAAI,CAACb,SAAS,EAAEe,IAAI,EAAEC,IAAI,CAAC;;EAC3D;EAAA;AAAA,KChFH;;;;;;;;;;;;;;;AAeG;AAYH,IAAMC,cAAc,GAAG,aAAa;AAEpC,IAAMC,OAAO,GAAwC,SAA/CA,OAAO,CACXC,SAA6B,QAE3B;EAAA,IADoBC,oBAAoB,QAAxCC,kBAAkB;;EAGpB,IAAMtB,GAAG,GAAGoB,SAAS,CAACG,WAAW,CAAC,YAAY,CAAC,CAACC,YAAY,EAAE;EAC9D,IAAMC,mBAAmB,GAAGL,SAAS,CAACG,WAAW,CAAC,WAAW,CAAC,CAACC,YAAY,CAAC;IAC1EE,UAAU,EAAEL,oBAAoB,aAApBA,oBAAoB,KAApB,6BAAoB,GAAIH;EACrC,EAAC;EAEF,OAAO,IAAInB,gBAAgB,CAACC,GAAG,EAAEyB,mBAAmB,CAAC;AACvD,CAAC;SAEeE,iBAAiB;EAC/B,IAAMC,gBAAgB,GAAG;IACvBC,SAAS,EAAE9B;GACZ;EACA+B,QAA+B,CAACC,QAAQ,CAACC,iBAAiB,CACzD,IAAIC,SAAS,CAAC,kBAAkB,EAAEd,OAAO,EAAuB,uBAC7De,eAAe,CAACN,gBAAgB,CAAC,CACjCO,oBAAoB,CAAC,IAAI,CAAC,CAC9B;AACH;;ACnDA;;;;;;;;;;;;;;;AAeG;AAOHR,iBAAiB,EAAE;AACnBG,QAAQ,CAACM,eAAe,CAAC9B,IAAI,EAAE+B,OAAO,CAAC","names":["FunctionsService","app","_delegate","_region","region","_customDomain","customDomain","name","options","httpsCallableExp","url","httpsCallableFromURLExp","origin","match","FirebaseError","useFunctionsEmulatorExp","Number","host","port","DEFAULT_REGION","factory","container","regionOrCustomDomain","instanceIdentifier","getProvider","getImmediate","functionsServiceExp","identifier","registerFunctions","namespaceExports","Functions","firebase","INTERNAL","registerComponent","Component","setServiceProps","setMultipleInstances","registerVersion","version"],"sources":["../src/service.ts","../src/register.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseFunctions, HttpsCallable } from '@firebase/functions-types';\nimport {\n  httpsCallable as httpsCallableExp,\n  httpsCallableFromURL as httpsCallableFromURLExp,\n  connectFunctionsEmulator as useFunctionsEmulatorExp,\n  HttpsCallableOptions,\n  Functions as FunctionsServiceExp\n} from '@firebase/functions';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport { FirebaseError } from '@firebase/util';\n\nexport class FunctionsService implements FirebaseFunctions, _FirebaseService {\n  /**\n   * For testing.\n   * @internal\n   */\n  _region: string;\n  /**\n   * For testing.\n   * @internal\n   */\n  _customDomain: string | null;\n\n  constructor(\n    public app: FirebaseApp,\n    readonly _delegate: FunctionsServiceExp\n  ) {\n    this._region = this._delegate.region;\n    this._customDomain = this._delegate.customDomain;\n  }\n  httpsCallable(name: string, options?: HttpsCallableOptions): HttpsCallable {\n    return httpsCallableExp(this._delegate, name, options);\n  }\n  httpsCallableFromURL(\n    url: string,\n    options?: HttpsCallableOptions\n  ): HttpsCallable {\n    return httpsCallableFromURLExp(this._delegate, url, options);\n  }\n  /**\n   * Deprecated in pre-modularized repo, does not exist in modularized\n   * functions package, need to convert to \"host\" and \"port\" args that\n   * `useFunctionsEmulatorExp` takes.\n   * @deprecated\n   */\n  useFunctionsEmulator(origin: string): void {\n    const match = origin.match('[a-zA-Z]+://([a-zA-Z0-9.-]+)(?::([0-9]+))?');\n    if (match == null) {\n      throw new FirebaseError(\n        'functions',\n        'No origin provided to useFunctionsEmulator()'\n      );\n    }\n    if (match[2] == null) {\n      throw new FirebaseError(\n        'functions',\n        'Port missing in origin provided to useFunctionsEmulator()'\n      );\n    }\n    return useFunctionsEmulatorExp(this._delegate, match[1], Number(match[2]));\n  }\n  useEmulator(host: string, port: number): void {\n    return useFunctionsEmulatorExp(this._delegate, host, port);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport { FunctionsService } from './service';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nconst DEFAULT_REGION = 'us-central1';\n\nconst factory: InstanceFactory<'functions-compat'> = (\n  container: ComponentContainer,\n  { instanceIdentifier: regionOrCustomDomain }: InstanceFactoryOptions\n) => {\n  // Dependencies\n  const app = container.getProvider('app-compat').getImmediate();\n  const functionsServiceExp = container.getProvider('functions').getImmediate({\n    identifier: regionOrCustomDomain ?? DEFAULT_REGION\n  });\n\n  return new FunctionsService(app, functionsServiceExp);\n};\n\nexport function registerFunctions(): void {\n  const namespaceExports = {\n    Functions: FunctionsService\n  };\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component('functions-compat', factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../package.json';\nimport { registerFunctions } from './register';\nimport * as types from '@firebase/functions-types';\n\nregisterFunctions();\nfirebase.registerVersion(name, version);\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    functions: {\n      (app?: FirebaseApp): types.FirebaseFunctions;\n      Functions: typeof types.FirebaseFunctions;\n    };\n  }\n  interface FirebaseApp {\n    functions(regionOrCustomDomain?: string): types.FirebaseFunctions;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}