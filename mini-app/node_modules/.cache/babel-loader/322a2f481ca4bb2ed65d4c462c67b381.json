{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"width\", \"maxWidth\", \"minWidth\", \"spaced\", \"animate\", \"fixed\", \"style\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nexport var SplitColContext = /*#__PURE__*/React.createContext({\n  colRef: null,\n  animate: true\n});\nexport var SplitCol = function SplitCol(props) {\n  var children = props.children,\n    width = props.width,\n    maxWidth = props.maxWidth,\n    minWidth = props.minWidth,\n    spaced = props.spaced,\n    _props$animate = props.animate,\n    animate = _props$animate === void 0 ? false : _props$animate,\n    fixed = props.fixed,\n    style = props.style,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var baseRef = React.useRef(null);\n  var contextValue = React.useMemo(function () {\n    return {\n      colRef: baseRef,\n      animate: animate\n    };\n  }, [baseRef, animate]);\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      width: width,\n      maxWidth: maxWidth,\n      minWidth: minWidth\n    }),\n    ref: baseRef,\n    vkuiClass: classNames(\"SplitCol\", {\n      \"SplitCol--spaced\": spaced,\n      \"SplitCol--fixed\": fixed\n    })\n  }), createScopedElement(SplitColContext.Provider, {\n    value: contextValue\n  }, fixed ? createScopedElement(\"div\", {\n    vkuiClass: \"SplitCol__fixedInner\"\n  }, children) : children));\n};","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT;AAQA,OAAO,IAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAN,CAA0C;EACvEC,MAAM,EAAE,IAD+D;EAEvEC,OAAO,EAAE;AAF8D,CAA1C,CAAxB;AAoBP,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,CAACC,KAAD,EAA0B;EACzE,IACEC,QADF,GAUID,KAVJ,CACEC,QADF;IAEEC,KAFF,GAUIF,KAVJ,CAEEE,KAFF;IAGEC,QAHF,GAUIH,KAVJ,CAGEG,QAHF;IAIEC,QAJF,GAUIJ,KAVJ,CAIEI,QAJF;IAKEC,MALF,GAUIL,KAVJ,CAKEK,MALF;IAAAC,iBAUIN,KAVJ,CAMEF,OANF;IAMEA,OANF,+BAMY,KANZ;IAOES,KAPF,GAUIP,KAVJ,CAOEO,KAPF;IAQEC,KARF,GAUIR,KAVJ,CAQEQ,KARF;IASKC,SATL,4BAUIT,KAVJ;EAWA,IAAMU,OAAO,GAAGjB,KAAK,CAACkB,MAAN,CAA6B,IAA7B,CAAhB;EAEA,IAAMC,YAAY,GAAGnB,KAAK,CAACoB,OAAN,CAAc,YAAM;IACvC,OAAO;MACLhB,MAAM,EAAEa,OADH;MAELZ,OAAO,EAAPA;IAFK,CAAP;EAID,CALoB,EAKlB,CAACY,OAAD,EAAUZ,OAAV,CALkB,CAArB;EAOA,OACEgB,wCACML,SADN;IAEED,KAAK,kCACAA,KADA;MAEHN,KAAK,EAAEA,KAFJ;MAGHC,QAAQ,EAAEA,QAHP;MAIHC,QAAQ,EAAEA;IAJP,EAFP;IAQEW,GAAG,EAAEL,OARP;IASEM,SAAS,EAAEtB,UAAU,CAAC,UAAD,EAAa;MAChC,oBAAoBW,MADY;MAEhC,mBAAmBE;IAFa,CAAb;EATvB,IAcEO,oBAACnB,eAAD,CAAiBsB,QAAjB;IAA0BC,KAAK,EAAEN;EAAjC,GACGL,KAAK,GACJO;IAAKE,SAAS,EAAC;EAAf,GAAuCf,QAAvC,CADI,GAGJA,QAJJ,CAdF,CADF;AAwBD,CA7CM","names":["React","classNames","SplitColContext","createContext","colRef","animate","SplitCol","props","children","width","maxWidth","minWidth","spaced","_props$animate","fixed","style","restProps","baseRef","useRef","contextValue","useMemo","createScopedElement","ref","vkuiClass","Provider","value"],"sources":["../../../src/components/SplitCol/SplitCol.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./SplitCol.css\";\n\nexport interface SplitColContextProps {\n  colRef: React.RefObject<HTMLDivElement> | null;\n  animate: boolean;\n}\n\nexport const SplitColContext = React.createContext<SplitColContextProps>({\n  colRef: null,\n  animate: true,\n});\n\nexport interface SplitColProps extends React.HTMLAttributes<HTMLDivElement> {\n  width?: number | string;\n  maxWidth?: number | string;\n  minWidth?: number | string;\n  /**\n   * Если false, то переходы между Panel происходят без анимации\n   */\n  animate?: boolean;\n  /**\n   * Если true, то добавляются боковые отступы фиксированной величины\n   */\n  spaced?: boolean;\n  fixed?: boolean;\n}\n\nexport const SplitCol: React.FC<SplitColProps> = (props: SplitColProps) => {\n  const {\n    children,\n    width,\n    maxWidth,\n    minWidth,\n    spaced,\n    animate = false,\n    fixed,\n    style,\n    ...restProps\n  } = props;\n  const baseRef = React.useRef<HTMLDivElement>(null);\n\n  const contextValue = React.useMemo(() => {\n    return {\n      colRef: baseRef,\n      animate,\n    };\n  }, [baseRef, animate]);\n\n  return (\n    <div\n      {...restProps}\n      style={{\n        ...style,\n        width: width,\n        maxWidth: maxWidth,\n        minWidth: minWidth,\n      }}\n      ref={baseRef}\n      vkuiClass={classNames(\"SplitCol\", {\n        \"SplitCol--spaced\": spaced,\n        \"SplitCol--fixed\": fixed,\n      })}\n    >\n      <SplitColContext.Provider value={contextValue}>\n        {fixed ? (\n          <div vkuiClass=\"SplitCol__fixedInner\">{children}</div>\n        ) : (\n          children\n        )}\n      </SplitColContext.Provider>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}