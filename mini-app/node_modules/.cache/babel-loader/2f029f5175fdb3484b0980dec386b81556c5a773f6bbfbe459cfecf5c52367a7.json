{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"children\", \"isShown\", \"offsetX\", \"offsetY\", \"alignX\", \"alignY\", \"onClose\", \"cornerOffset\", \"cornerAbsoluteOffset\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { useNavTransition } from \"../NavTransitionContext/NavTransitionContext\";\nimport { usePopper } from \"react-popper\";\nimport { tooltipContainerAttr } from \"./TooltipContainer\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useDOM } from \"../../lib/dom\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nvar isDOMTypeElement = function isDOMTypeElement(element) {\n  return /*#__PURE__*/React.isValidElement(element) && typeof element.type === \"string\";\n};\nvar baseClassName = getClassName(\"Tooltip\");\nvar warn = warnOnce(\"Tooltip\");\nvar IS_DEV = process.env.NODE_ENV === \"development\";\nvar SimpleTooltip = /*#__PURE__*/React.forwardRef(function SimpleTooltip(_ref, ref) {\n  var _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? \"accent\" : _ref$mode,\n    header = _ref.header,\n    text = _ref.text,\n    arrowRef = _ref.arrowRef,\n    _ref$style = _ref.style,\n    style = _ref$style === void 0 ? {} : _ref$style,\n    attributes = _ref.attributes;\n  return createScopedElement(\"div\", {\n    vkuiClass: classNames(baseClassName, \"Tooltip--\".concat(mode))\n  }, createScopedElement(\"div\", _extends({\n    vkuiClass: \"Tooltip__container\",\n    ref: ref,\n    style: style.container\n  }, attributes === null || attributes === void 0 ? void 0 : attributes.container), createScopedElement(\"div\", _extends({\n    vkuiClass: \"Tooltip__corner\",\n    style: style.arrow\n  }, attributes === null || attributes === void 0 ? void 0 : attributes.arrow, {\n    ref: arrowRef\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"Tooltip__content\"\n  }, header && createScopedElement(Subhead, {\n    weight: \"1\",\n    vkuiClass: \"Tooltip__title\"\n  }, header), text && createScopedElement(Subhead, {\n    vkuiClass: \"Tooltip__text\"\n  }, text))));\n});\nfunction mapAlignX(x) {\n  switch (x) {\n    case \"left\":\n      return \"start\";\n    case \"right\":\n      return \"end\";\n    default:\n      return \"\";\n  }\n}\nfunction getPlacement(alignX, alignY) {\n  return [alignY || \"bottom\", mapAlignX(alignX || \"left\")].filter(function (p) {\n    return !!p;\n  }).join(\"-\");\n}\nfunction isVerticalPlacement(placement) {\n  return placement.startsWith(\"top\") || placement.startsWith(\"bottom\");\n}\nvar Tooltip = function Tooltip(_ref2) {\n  var _attributes$arrow, _attributes$popper;\n  var children = _ref2.children,\n    _isShown = _ref2.isShown,\n    _ref2$offsetX = _ref2.offsetX,\n    offsetX = _ref2$offsetX === void 0 ? 0 : _ref2$offsetX,\n    _ref2$offsetY = _ref2.offsetY,\n    offsetY = _ref2$offsetY === void 0 ? 15 : _ref2$offsetY,\n    alignX = _ref2.alignX,\n    alignY = _ref2.alignY,\n    onClose = _ref2.onClose,\n    _ref2$cornerOffset = _ref2.cornerOffset,\n    cornerOffset = _ref2$cornerOffset === void 0 ? 0 : _ref2$cornerOffset,\n    cornerAbsoluteOffset = _ref2.cornerAbsoluteOffset,\n    restProps = _objectWithoutProperties(_ref2, _excluded);\n  var _useNavTransition = useNavTransition(),\n    entering = _useNavTransition.entering;\n  var isShown = _isShown && !entering;\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    tooltipRef = _React$useState2[0],\n    setTooltipRef = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    tooltipArrowRef = _React$useState4[0],\n    setTooltipArrowRef = _React$useState4[1];\n  var _React$useState5 = React.useState(),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    target = _React$useState6[0],\n    setTarget = _React$useState6[1];\n  if (IS_DEV) {\n    var multiChildren = React.Children.count(children) > 1; // Empty children is a noop\n\n    var primitiveChild = hasReactNode(children) && _typeof(children) !== \"object\";\n    (multiChildren || primitiveChild) && warn([\"children must be a single React element, got\", multiChildren && \"multiple\", primitiveChild && JSON.stringify(children)].filter(Boolean).join(\" \"));\n  }\n  /* eslint-disable no-restricted-properties */\n\n  /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion*/\n\n  var tooltipContainer = React.useMemo(function () {\n    return target === null || target === void 0 ? void 0 : target.closest(\"[\".concat(tooltipContainerAttr, \"]\"));\n  }, [target]);\n  var strategy = React.useMemo(function () {\n    return (target === null || target === void 0 ? void 0 : target.style.position) === \"fixed\" ? \"fixed\" : \"absolute\";\n  }, [target]);\n  /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion*/\n\n  /* eslint-enable no-restricted-properties */\n\n  if (IS_DEV && target && !tooltipContainer) {\n    throw new Error(\"Use TooltipContainer for Tooltip outside Panel (see docs)\");\n  }\n  var arrowOffsetModiifer = React.useMemo(function () {\n    return {\n      name: \"arrowOffset\",\n      enabled: true,\n      phase: \"main\",\n      fn: function fn(_ref3) {\n        var state = _ref3.state;\n        if (!state.modifiersData.arrow) {\n          return;\n        }\n        if (isVerticalPlacement(state.placement)) {\n          if (cornerAbsoluteOffset !== undefined) {\n            state.modifiersData.arrow.x = cornerAbsoluteOffset;\n          } else {\n            var _state$modifiersData$;\n            if (((_state$modifiersData$ = state.modifiersData.arrow) === null || _state$modifiersData$ === void 0 ? void 0 : _state$modifiersData$.x) !== undefined) {\n              state.modifiersData.arrow.x += cornerOffset;\n            }\n          }\n        } else {\n          if (cornerAbsoluteOffset !== undefined) {\n            state.modifiersData.arrow.y = cornerAbsoluteOffset;\n          } else {\n            var _state$modifiersData$2;\n            if (((_state$modifiersData$2 = state.modifiersData.arrow) === null || _state$modifiersData$2 === void 0 ? void 0 : _state$modifiersData$2.y) !== undefined) {\n              state.modifiersData.arrow.y += cornerOffset;\n            }\n          }\n        }\n      }\n    };\n  }, [cornerOffset, cornerAbsoluteOffset]);\n  var placement = getPlacement(alignX, alignY);\n  var _usePopper = usePopper(target, tooltipRef, {\n      strategy: strategy,\n      placement: placement,\n      modifiers: [{\n        name: \"offset\",\n        options: {\n          offset: [offsetX, offsetY]\n        }\n      }, {\n        name: \"arrow\",\n        options: {\n          element: tooltipArrowRef,\n          padding: 14\n        }\n      }, {\n        name: \"preventOverflow\"\n      }, {\n        name: \"flip\"\n      }, arrowOffsetModiifer]\n    }),\n    styles = _usePopper.styles,\n    attributes = _usePopper.attributes;\n  var _useDOM = useDOM(),\n    document = _useDOM.document;\n  useGlobalEventListener(document, \"click\", isShown && onClose, {\n    passive: true\n  }); // NOTE: setting isShown to true used to trigger usePopper().forceUpdate()\n\n  var childRef = /*#__PURE__*/React.isValidElement(children) && (isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n  var patchedRef = useExternRef(setTarget, childRef);\n  var child = /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, _defineProperty({}, isDOMTypeElement(children) ? \"ref\" : \"getRootRef\", patchedRef)) : children;\n  return createScopedElement(React.Fragment, null, child, isShown && target != null && /*#__PURE__*/ReactDOM.createPortal(createScopedElement(SimpleTooltip, _extends({}, restProps, {\n    ref: function ref(el) {\n      return setTooltipRef(el);\n    },\n    arrowRef: function arrowRef(el) {\n      return setTooltipArrowRef(el);\n    },\n    style: {\n      arrow: styles.arrow,\n      container: styles.popper\n    },\n    attributes: {\n      arrow: (_attributes$arrow = attributes.arrow) !== null && _attributes$arrow !== void 0 ? _attributes$arrow : null,\n      container: (_attributes$popper = attributes.popper) !== null && _attributes$popper !== void 0 ? _attributes$popper : null\n    }\n  })), tooltipContainer));\n};\nTooltip.defaultProps = {\n  offsetX: 0,\n  offsetY: 15,\n  cornerOffset: 0,\n  isShown: true,\n  mode: \"accent\"\n}; // eslint-disable-next-line import/no-default-export\n\nexport default Tooltip;","map":{"version":3,"mappings":"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","names":["React","ReactDOM","classNames","getClassName","Subhead","useNavTransition","usePopper","tooltipContainerAttr","useExternRef","useDOM","warnOnce","hasReactNode","useGlobalEventListener","isDOMTypeElement","element","isValidElement","type","baseClassName","warn","IS_DEV","process","env","NODE_ENV","SimpleTooltip","forwardRef","ref","mode","header","text","arrowRef","_ref$style","style","attributes","createScopedElement","vkuiClass","container","arrow","weight","mapAlignX","x","getPlacement","alignX","alignY","filter","p","join","isVerticalPlacement","placement","startsWith","Tooltip","children","_isShown","isShown","_ref2$offsetX","offsetX","_ref2$offsetY","offsetY","onClose","_ref2$cornerOffset","cornerOffset","cornerAbsoluteOffset","restProps","entering","useState","_React$useState2","tooltipRef","setTooltipRef","_React$useState4","tooltipArrowRef","setTooltipArrowRef","_React$useState6","target","setTarget","multiChildren","Children","count","primitiveChild","_typeof","JSON","stringify","Boolean","tooltipContainer","useMemo","closest","strategy","position","Error","arrowOffsetModiifer","name","enabled","phase","fn","state","modifiersData","undefined","y","modifiers","options","offset","padding","styles","document","passive","childRef","props","getRootRef","patchedRef","child","cloneElement","Fragment","createPortal","el","popper","defaultProps"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\Tooltip\\Tooltip.tsx"],"sourcesContent":["import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { useNavTransition } from \"../NavTransitionContext/NavTransitionContext\";\nimport { Modifier, usePopper } from \"react-popper\";\nimport { Placement } from \"@popperjs/core\";\nimport { tooltipContainerAttr } from \"./TooltipContainer\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useDOM } from \"../../lib/dom\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport \"./Tooltip.css\";\n\ninterface SimpleTooltipProps extends Partial<TooltipProps> {\n  target?: HTMLDivElement;\n  arrowRef?: React.Ref<HTMLDivElement>;\n  style?: {\n    arrow: React.CSSProperties;\n    container: React.CSSProperties;\n  };\n  attributes?: {\n    arrow: React.HTMLAttributes<HTMLDivElement> | null;\n    container: React.HTMLAttributes<HTMLDivElement> | null;\n  };\n}\n\nconst isDOMTypeElement = (\n  element: React.ReactElement\n): element is React.DOMElement<any, any> => {\n  return React.isValidElement(element) && typeof element.type === \"string\";\n};\n\nconst baseClassName = getClassName(\"Tooltip\");\nconst warn = warnOnce(\"Tooltip\");\nconst IS_DEV = process.env.NODE_ENV === \"development\";\n\nconst SimpleTooltip = React.forwardRef<HTMLDivElement, SimpleTooltipProps>(\n  function SimpleTooltip(\n    { mode = \"accent\", header, text, arrowRef, style = {}, attributes },\n    ref\n  ) {\n    return (\n      <div vkuiClass={classNames(baseClassName, `Tooltip--${mode}`)}>\n        <div\n          vkuiClass=\"Tooltip__container\"\n          ref={ref}\n          style={style.container}\n          {...attributes?.container}\n        >\n          <div\n            vkuiClass=\"Tooltip__corner\"\n            style={style.arrow}\n            {...attributes?.arrow}\n            ref={arrowRef}\n          />\n          <div vkuiClass=\"Tooltip__content\">\n            {header && (\n              <Subhead weight=\"1\" vkuiClass=\"Tooltip__title\">\n                {header}\n              </Subhead>\n            )}\n            {text && <Subhead vkuiClass=\"Tooltip__text\">{text}</Subhead>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport interface TooltipProps {\n  /**\n   * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n   * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n   * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n   */\n  children: React.ReactElement;\n  mode?: \"accent\" | \"light\";\n  /**\n   * Если передан `false`, то рисуется просто `children`.\n   */\n  isShown?: boolean;\n  /**\n   * Текст тултипа.\n   */\n  text?: React.ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: React.ReactNode;\n  /**\n   * Положение по горизонтали (прижатие к левому или правому краю `children`).\n   * Если не задано, позиция по горизонтали определятся автоматически\n   */\n  alignX?: \"center\" | \"left\" | \"right\";\n  /**\n   * Положение по вертикали (расположение над или под `children`).\n   * Если не задано, позиция по вертикали определятся автоматически\n   */\n  alignY?: \"top\" | \"bottom\";\n  /**\n   * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n   */\n  offsetX?: number;\n  /**\n   * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n   */\n  offsetY?: number;\n  /**\n   * Сдвиг стрелочки относительно центра дочернего элемента.\n   */\n  cornerOffset?: number;\n  /**\n   * Сдвиг стрелочки относительно ширины тултипа\n   */\n  cornerAbsoluteOffset?: number;\n  /**\n   * Callback, который вызывается при клике по любому месту в пределах экрана.\n   */\n  onClose?: () => void;\n}\n\ndeclare type ArrowOffsetModifierOptions = {\n  offset: number;\n};\ndeclare type ArrowOffsetModifier = Modifier<\n  \"arrowOffset\",\n  ArrowOffsetModifierOptions\n>;\n\nfunction mapAlignX(x: TooltipProps[\"alignX\"]) {\n  switch (x) {\n    case \"left\":\n      return \"start\";\n    case \"right\":\n      return \"end\";\n    default:\n      return \"\";\n  }\n}\nfunction getPlacement(\n  alignX: TooltipProps[\"alignX\"],\n  alignY: TooltipProps[\"alignY\"]\n): Placement {\n  return [alignY || \"bottom\", mapAlignX(alignX || \"left\")]\n    .filter((p) => !!p)\n    .join(\"-\") as Placement;\n}\nfunction isVerticalPlacement(placement: Placement) {\n  return placement.startsWith(\"top\") || placement.startsWith(\"bottom\");\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({\n  children,\n  isShown: _isShown,\n  offsetX = 0,\n  offsetY = 15,\n  alignX,\n  alignY,\n  onClose,\n  cornerOffset = 0,\n  cornerAbsoluteOffset,\n  ...restProps\n}) => {\n  const { entering } = useNavTransition();\n  const isShown = _isShown && !entering;\n  const [tooltipRef, setTooltipRef] = React.useState<HTMLElement | null>(null);\n  const [tooltipArrowRef, setTooltipArrowRef] =\n    React.useState<HTMLElement | null>(null);\n  const [target, setTarget] = React.useState<HTMLElement>();\n\n  if (IS_DEV) {\n    const multiChildren = React.Children.count(children) > 1;\n    // Empty children is a noop\n    const primitiveChild =\n      hasReactNode(children) && typeof children !== \"object\";\n    (multiChildren || primitiveChild) &&\n      warn(\n        [\n          \"children must be a single React element, got\",\n          multiChildren && \"multiple\",\n          primitiveChild && JSON.stringify(children),\n        ]\n          .filter(Boolean)\n          .join(\" \")\n      );\n  }\n\n  /* eslint-disable no-restricted-properties */\n  /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion*/\n  const tooltipContainer = React.useMemo(\n    () => target?.closest(`[${tooltipContainerAttr}]`) as HTMLDivElement,\n    [target]\n  );\n  const strategy = React.useMemo(\n    () => (target?.style.position === \"fixed\" ? \"fixed\" : \"absolute\"),\n    [target]\n  );\n  /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion*/\n  /* eslint-enable no-restricted-properties */\n\n  if (IS_DEV && target && !tooltipContainer) {\n    throw new Error(\n      \"Use TooltipContainer for Tooltip outside Panel (see docs)\"\n    );\n  }\n\n  const arrowOffsetModiifer = React.useMemo<ArrowOffsetModifier>(() => {\n    return {\n      name: \"arrowOffset\",\n      enabled: true,\n      phase: \"main\",\n      fn({ state }) {\n        if (!state.modifiersData.arrow) {\n          return;\n        }\n        if (isVerticalPlacement(state.placement)) {\n          if (cornerAbsoluteOffset !== undefined) {\n            state.modifiersData.arrow.x = cornerAbsoluteOffset;\n          } else {\n            if (state.modifiersData.arrow?.x !== undefined) {\n              state.modifiersData.arrow.x += cornerOffset;\n            }\n          }\n        } else {\n          if (cornerAbsoluteOffset !== undefined) {\n            state.modifiersData.arrow.y = cornerAbsoluteOffset;\n          } else {\n            if (state.modifiersData.arrow?.y !== undefined) {\n              state.modifiersData.arrow.y += cornerOffset;\n            }\n          }\n        }\n      },\n    };\n  }, [cornerOffset, cornerAbsoluteOffset]);\n\n  const placement = getPlacement(alignX, alignY);\n  const { styles, attributes } = usePopper(target, tooltipRef, {\n    strategy,\n    placement,\n    modifiers: [\n      {\n        name: \"offset\",\n        options: {\n          offset: [offsetX, offsetY],\n        },\n      },\n      {\n        name: \"arrow\",\n        options: {\n          element: tooltipArrowRef,\n          padding: 14,\n        },\n      },\n      {\n        name: \"preventOverflow\",\n      },\n      {\n        name: \"flip\",\n      },\n      arrowOffsetModiifer,\n    ],\n  });\n\n  const { document } = useDOM();\n  useGlobalEventListener(document, \"click\", isShown && onClose, {\n    passive: true,\n  });\n  // NOTE: setting isShown to true used to trigger usePopper().forceUpdate()\n\n  const childRef =\n    React.isValidElement(children) &&\n    (isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n  const patchedRef = useExternRef(setTarget, childRef);\n  const child = React.isValidElement(children)\n    ? React.cloneElement(children, {\n        [isDOMTypeElement(children) ? \"ref\" : \"getRootRef\"]: patchedRef,\n      })\n    : children;\n\n  return (\n    <React.Fragment>\n      {child}\n      {isShown &&\n        target != null &&\n        ReactDOM.createPortal(\n          <SimpleTooltip\n            {...restProps}\n            ref={(el) => setTooltipRef(el)}\n            arrowRef={(el) => setTooltipArrowRef(el)}\n            style={{ arrow: styles.arrow, container: styles.popper }}\n            attributes={{\n              arrow: attributes.arrow ?? null,\n              container: attributes.popper ?? null,\n            }}\n          />,\n          tooltipContainer\n        )}\n    </React.Fragment>\n  );\n};\n\nTooltip.defaultProps = {\n  offsetX: 0,\n  offsetY: 15,\n  cornerOffset: 0,\n  isShown: true,\n  mode: \"accent\",\n};\n// eslint-disable-next-line import/no-default-export\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}