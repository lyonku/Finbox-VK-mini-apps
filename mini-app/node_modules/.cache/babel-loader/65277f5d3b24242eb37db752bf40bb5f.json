{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"top\", \"bottom\", \"status\", \"Component\", \"removable\", \"onRemove\", \"removePlaceholder\", \"getRootRef\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { hasReactNode, noop } from \"../../lib/utils\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { Removable } from \"../Removable/Removable\";\nexport var FormItem = function FormItem(_ref) {\n  var children = _ref.children,\n    top = _ref.top,\n    bottom = _ref.bottom,\n    _ref$status = _ref.status,\n    status = _ref$status === void 0 ? \"default\" : _ref$status,\n    _ref$Component = _ref.Component,\n    Component = _ref$Component === void 0 ? \"div\" : _ref$Component,\n    removable = _ref.removable,\n    _ref$onRemove = _ref.onRemove,\n    _onRemove = _ref$onRemove === void 0 ? noop : _ref$onRemove,\n    _ref$removePlaceholde = _ref.removePlaceholder,\n    removePlaceholder = _ref$removePlaceholde === void 0 ? \"Удалить\" : _ref$removePlaceholde,\n    getRootRef = _ref.getRootRef,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var platform = usePlatform();\n  var rootEl = useExternRef(getRootRef);\n  var _useAdaptivity = useAdaptivity(),\n    sizeY = _useAdaptivity.sizeY;\n  var wrappedChildren = createScopedElement(React.Fragment, null, hasReactNode(top) && createScopedElement(Subhead, {\n    vkuiClass: \"FormItem__top\"\n  }, top), children, hasReactNode(bottom) && createScopedElement(Caption, {\n    vkuiClass: \"FormItem__bottom\"\n  }, bottom));\n  return createScopedElement(Component, _extends({}, restProps, {\n    ref: rootEl,\n    vkuiClass: classNames(getClassName(\"FormItem\", platform), \"FormItem--\".concat(status), \"FormItem--sizeY-\".concat(sizeY), {\n      \"FormItem--withTop\": hasReactNode(top),\n      \"FormItem--removable\": removable\n    })\n  }), removable ? createScopedElement(Removable, {\n    align: \"start\",\n    onRemove: function onRemove(e) {\n      if (rootEl !== null && rootEl !== void 0 && rootEl.current) {\n        _onRemove(e, rootEl.current);\n      }\n    },\n    removePlaceholder: removePlaceholder\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"FormItem__removable\"\n  }, wrappedChildren)) : wrappedChildren);\n};","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,SAASC,YAAT,EAAuBC,IAAvB;AACA,OAAOC,OAAP;AACA,SAASC,OAAT;AACA,SAASC,aAAT;AACA,SAASC,SAAT;AAiBA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAW5B;EAAA,IAVnBC,QAUmB,QAVnBA,QAUmB;IATnBC,GASmB,QATnBA,GASmB;IARnBC,MAQmB,QARnBA,MAQmB;IAAAC,mBAPnBC,MAOmB;IAPnBA,MAOmB,4BAPV,SAOU;IAAAC,sBANnBC,SAMmB;IANnBA,SAMmB,+BANP,KAMO;IALnBC,SAKmB,QALnBA,SAKmB;IAAAC,qBAJnBC,QAImB;IAJnBA,SAImB,8BAJRf,IAIQ;IAAAgB,6BAHnBC,iBAGmB;IAHnBA,iBAGmB,sCAHC,SAGD;IAFnBC,UAEmB,QAFnBA,UAEmB;IADhBC,SACgB;EACnB,IAAMC,QAAQ,GAAGvB,WAAW,EAA5B;EACA,IAAMwB,MAAM,GAAGzB,YAAY,CAACsB,UAAD,CAA3B;EACA,qBAAkBf,aAAa,EAA/B;IAAQmB,KAAR,kBAAQA,KAAR;EAEA,IAAMC,eAAe,GACnBC,oBAAC9B,KAAD,CAAO+B,QAAP,QACG1B,YAAY,CAACQ,GAAD,CAAZ,IAAqBiB,oBAACvB,OAAD;IAASyB,SAAS,EAAC;EAAnB,GAAoCnB,GAApC,CADxB,EAEGD,QAFH,EAGGP,YAAY,CAACS,MAAD,CAAZ,IACCgB,oBAACtB,OAAD;IAASwB,SAAS,EAAC;EAAnB,GAAuClB,MAAvC,CAJJ,CADF;EAUA,OACEgB,oBAACZ,SAAD,eACMO,SADN;IAEEQ,GAAG,EAAEN,MAFP;IAGEK,SAAS,EAAE/B,UAAU,CACnBG,YAAY,CAAC,UAAD,EAAasB,QAAb,CADO,sBAENV,MAFM,6BAGAY,KAHA,GAInB;MACE,qBAAqBvB,YAAY,CAACQ,GAAD,CADnC;MAEE,uBAAuBM;IAFzB,CAJmB;EAHvB,IAaGA,SAAS,GACRW,oBAACpB,SAAD;IACEwB,KAAK,EAAC,OADR;IAEEb,QAAQ,EAAE,kBAACc,CAAD,EAAO;MACf,IAAIR,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAES,OAAZ,EAAqB;QACnBf,SAAQ,CAACc,CAAD,EAAIR,MAAM,CAACS,OAAX,CAAR;MACD;IACF,CANH;IAOEb,iBAAiB,EAAEA;EAPrB,GASEO;IAAKE,SAAS,EAAC;EAAf,GAAsCH,eAAtC,CATF,CADQ,GAaRA,eA1BJ,CADF;AA+BD,CAzDM","names":["React","classNames","useExternRef","usePlatform","getClassName","hasReactNode","noop","Subhead","Caption","useAdaptivity","Removable","FormItem","children","top","bottom","_ref$status","status","_ref$Component","Component","removable","_ref$onRemove","onRemove","_ref$removePlaceholde","removePlaceholder","getRootRef","restProps","platform","rootEl","sizeY","wrappedChildren","createScopedElement","Fragment","vkuiClass","ref","align","e","current"],"sources":["../../../src/components/FormItem/FormItem.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { hasReactNode, noop } from \"../../lib/utils\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { Removable, RemovableProps } from \"../Removable/Removable\";\nimport \"./FormItem.css\";\n\nexport interface FormItemProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent,\n    RemovableProps {\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n  status?: \"default\" | \"error\" | \"valid\";\n  /**\n   * Дает возможность удалить `FormItem`. Рекомендуется использовать только для `Input` или `Select`.\n   */\n  removable?: boolean;\n}\n\nexport const FormItem: React.FC<FormItemProps> = ({\n  children,\n  top,\n  bottom,\n  status = \"default\",\n  Component = \"div\",\n  removable,\n  onRemove = noop,\n  removePlaceholder = \"Удалить\",\n  getRootRef,\n  ...restProps\n}: FormItemProps) => {\n  const platform = usePlatform();\n  const rootEl = useExternRef(getRootRef);\n  const { sizeY } = useAdaptivity();\n\n  const wrappedChildren = (\n    <React.Fragment>\n      {hasReactNode(top) && <Subhead vkuiClass=\"FormItem__top\">{top}</Subhead>}\n      {children}\n      {hasReactNode(bottom) && (\n        <Caption vkuiClass=\"FormItem__bottom\">{bottom}</Caption>\n      )}\n    </React.Fragment>\n  );\n\n  return (\n    <Component\n      {...restProps}\n      ref={rootEl}\n      vkuiClass={classNames(\n        getClassName(\"FormItem\", platform),\n        `FormItem--${status}`,\n        `FormItem--sizeY-${sizeY}`,\n        {\n          \"FormItem--withTop\": hasReactNode(top),\n          \"FormItem--removable\": removable,\n        }\n      )}\n    >\n      {removable ? (\n        <Removable\n          align=\"start\"\n          onRemove={(e) => {\n            if (rootEl?.current) {\n              onRemove(e, rootEl.current);\n            }\n          }}\n          removePlaceholder={removePlaceholder}\n        >\n          <div vkuiClass=\"FormItem__removable\">{wrappedChildren}</div>\n        </Removable>\n      ) : (\n        wrappedChildren\n      )}\n    </Component>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}