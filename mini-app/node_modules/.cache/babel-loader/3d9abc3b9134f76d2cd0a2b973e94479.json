{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"onChange\", \"disablePast\", \"disableFuture\", \"shouldDisableDate\", \"onClose\", \"enableTime\", \"doneButtonText\", \"weekStartsOn\", \"getRootRef\", \"disablePickers\", \"changeHoursAriaLabel\", \"changeMinutesAriaLabel\", \"prevMonthAriaLabel\", \"nextMonthAriaLabel\", \"changeMonthAriaLabel\", \"changeYearAriaLabel\", \"showNeighboringMonth\", \"changeDayAriaLabel\", \"size\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { isSameMonth, isSameDay } from \"date-fns\";\nimport { CalendarHeader } from \"../CalendarHeader/CalendarHeader\";\nimport { CalendarDays } from \"../CalendarDays/CalendarDays\";\nimport { CalendarTime } from \"../CalendarTime/CalendarTime\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { navigateDate, setTimeEqual, isFirstDay, isLastDay } from \"../../lib/calendar\";\nimport { useCalendar } from \"../../hooks/useCalendar\";\nimport { classNames } from \"../../lib/classNames\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce(\"Calendar\");\nexport var Calendar = function Calendar(_ref) {\n  var value = _ref.value,\n    onChange = _ref.onChange,\n    disablePast = _ref.disablePast,\n    disableFuture = _ref.disableFuture,\n    shouldDisableDate = _ref.shouldDisableDate,\n    onClose = _ref.onClose,\n    _ref$enableTime = _ref.enableTime,\n    enableTime = _ref$enableTime === void 0 ? false : _ref$enableTime,\n    doneButtonText = _ref.doneButtonText,\n    _ref$weekStartsOn = _ref.weekStartsOn,\n    weekStartsOn = _ref$weekStartsOn === void 0 ? 1 : _ref$weekStartsOn,\n    getRootRef = _ref.getRootRef,\n    disablePickers = _ref.disablePickers,\n    changeHoursAriaLabel = _ref.changeHoursAriaLabel,\n    changeMinutesAriaLabel = _ref.changeMinutesAriaLabel,\n    prevMonthAriaLabel = _ref.prevMonthAriaLabel,\n    nextMonthAriaLabel = _ref.nextMonthAriaLabel,\n    changeMonthAriaLabel = _ref.changeMonthAriaLabel,\n    changeYearAriaLabel = _ref.changeYearAriaLabel,\n    showNeighboringMonth = _ref.showNeighboringMonth,\n    _ref$changeDayAriaLab = _ref.changeDayAriaLabel,\n    changeDayAriaLabel = _ref$changeDayAriaLab === void 0 ? \"Изменить день\" : _ref$changeDayAriaLab,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? \"m\" : _ref$size,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useCalendar = useCalendar({\n      value: value,\n      disableFuture: disableFuture,\n      disablePast: disablePast,\n      shouldDisableDate: shouldDisableDate\n    }),\n    viewDate = _useCalendar.viewDate,\n    setViewDate = _useCalendar.setViewDate,\n    setPrevMonth = _useCalendar.setPrevMonth,\n    setNextMonth = _useCalendar.setNextMonth,\n    focusedDay = _useCalendar.focusedDay,\n    setFocusedDay = _useCalendar.setFocusedDay,\n    isDayFocused = _useCalendar.isDayFocused,\n    isDayDisabled = _useCalendar.isDayDisabled,\n    resetSelectedDay = _useCalendar.resetSelectedDay;\n  useIsomorphicLayoutEffect(function () {\n    if (value) {\n      setViewDate(value);\n    }\n  }, [value]);\n  if (process.env.NODE_ENV === \"development\" && !disablePickers && size === \"s\") {\n    warn(\"Нельзя включить селекты выбора месяца/года если размер календаря 's'\");\n  }\n  if (process.env.NODE_ENV === \"development\" && enableTime && size === \"s\") {\n    warn(\"Нельзя включить выбор времени если размер календаря 's'\");\n  }\n  var handleKeyDown = React.useCallback(function (event) {\n    if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(event.key)) {\n      event.preventDefault();\n    }\n    var newFocusedDay = navigateDate(focusedDay !== null && focusedDay !== void 0 ? focusedDay : value, event.key);\n    if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate)) {\n      setViewDate(newFocusedDay);\n    }\n    setFocusedDay(newFocusedDay);\n  }, [focusedDay, setFocusedDay, setViewDate, value, viewDate]);\n  var onDayChange = React.useCallback(function (date) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(setTimeEqual(date, value));\n  }, [value, onChange]);\n  var isDayActive = React.useCallback(function (day) {\n    return Boolean(value && isSameDay(day, value));\n  }, [value]);\n  return createScopedElement(\"div\", _extends({}, props, {\n    ref: getRootRef,\n    vkuiClass: classNames(\"Calendar\", \"Calendar--size-\".concat(size))\n  }), createScopedElement(CalendarHeader, {\n    viewDate: viewDate,\n    onChange: setViewDate,\n    onNextMonth: setNextMonth,\n    onPrevMonth: setPrevMonth,\n    disablePickers: disablePickers || size === \"s\",\n    vkuiClass: \"Calendar__header\",\n    prevMonthAriaLabel: prevMonthAriaLabel,\n    nextMonthAriaLabel: nextMonthAriaLabel,\n    changeMonthAriaLabel: changeMonthAriaLabel,\n    changeYearAriaLabel: changeYearAriaLabel\n  }), createScopedElement(CalendarDays, {\n    viewDate: viewDate,\n    value: value,\n    weekStartsOn: weekStartsOn,\n    isDayFocused: isDayFocused,\n    tabIndex: 0,\n    \"aria-label\": changeDayAriaLabel,\n    onKeyDown: handleKeyDown,\n    onDayChange: onDayChange,\n    isDayActive: isDayActive,\n    isDaySelectionStart: isFirstDay,\n    isDaySelectionEnd: isLastDay,\n    isDayDisabled: isDayDisabled,\n    onBlur: resetSelectedDay,\n    showNeighboringMonth: showNeighboringMonth,\n    size: size\n  }), enableTime && value && size !== \"s\" && createScopedElement(\"div\", {\n    vkuiClass: \"Calendar__time\"\n  }, createScopedElement(CalendarTime, {\n    value: value,\n    onChange: onChange,\n    onClose: onClose,\n    doneButtonText: doneButtonText,\n    changeHoursAriaLabel: changeHoursAriaLabel,\n    changeMinutesAriaLabel: changeMinutesAriaLabel\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","isSameMonth","isSameDay","CalendarHeader","CalendarDays","CalendarTime","useIsomorphicLayoutEffect","navigateDate","setTimeEqual","isFirstDay","isLastDay","useCalendar","classNames","warnOnce","warn","Calendar","value","onChange","disablePast","disableFuture","shouldDisableDate","onClose","_ref$enableTime","enableTime","doneButtonText","_ref$weekStartsOn","weekStartsOn","getRootRef","disablePickers","changeHoursAriaLabel","changeMinutesAriaLabel","prevMonthAriaLabel","nextMonthAriaLabel","changeMonthAriaLabel","changeYearAriaLabel","showNeighboringMonth","_ref$changeDayAriaLab","changeDayAriaLabel","_ref$size","size","props","viewDate","setViewDate","setPrevMonth","setNextMonth","focusedDay","setFocusedDay","isDayFocused","isDayDisabled","resetSelectedDay","process","env","NODE_ENV","handleKeyDown","useCallback","event","includes","key","preventDefault","newFocusedDay","onDayChange","date","isDayActive","day","Boolean","createScopedElement","ref","vkuiClass","onNextMonth","onPrevMonth","tabIndex","onKeyDown","isDaySelectionStart","isDaySelectionEnd","onBlur"],"sources":["../../../src/components/Calendar/Calendar.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { isSameMonth, isSameDay } from \"date-fns\";\nimport {\n  CalendarHeader,\n  CalendarHeaderProps,\n} from \"../CalendarHeader/CalendarHeader\";\nimport { CalendarDays } from \"../CalendarDays/CalendarDays\";\nimport { CalendarTime, CalendarTimeProps } from \"../CalendarTime/CalendarTime\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport {\n  navigateDate,\n  setTimeEqual,\n  isFirstDay,\n  isLastDay,\n} from \"../../lib/calendar\";\nimport { useCalendar } from \"../../hooks/useCalendar\";\nimport { HasRootRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport \"./Calendar.css\";\n\nexport interface CalendarProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    Pick<CalendarTimeProps, \"changeHoursAriaLabel\" | \"changeMinutesAriaLabel\">,\n    Pick<\n      CalendarHeaderProps,\n      | \"prevMonthAriaLabel\"\n      | \"nextMonthAriaLabel\"\n      | \"changeMonthAriaLabel\"\n      | \"changeYearAriaLabel\"\n    >,\n    HasRootRef<HTMLDivElement> {\n  value?: Date;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  enableTime?: boolean;\n  disablePickers?: boolean;\n  doneButtonText?: string;\n  changeDayAriaLabel?: string;\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  showNeighboringMonth?: boolean;\n  size?: \"s\" | \"m\";\n  onChange?(value?: Date): void;\n  shouldDisableDate?(value: Date): boolean;\n  onClose?(): void;\n}\n\nconst warn = warnOnce(\"Calendar\");\n\nexport const Calendar: React.FC<CalendarProps> = ({\n  value,\n  onChange,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onClose,\n  enableTime = false,\n  doneButtonText,\n  weekStartsOn = 1,\n  getRootRef,\n  disablePickers,\n  changeHoursAriaLabel,\n  changeMinutesAriaLabel,\n  prevMonthAriaLabel,\n  nextMonthAriaLabel,\n  changeMonthAriaLabel,\n  changeYearAriaLabel,\n  showNeighboringMonth,\n  changeDayAriaLabel = \"Изменить день\",\n  size = \"m\",\n  ...props\n}) => {\n  const {\n    viewDate,\n    setViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n  } = useCalendar({ value, disableFuture, disablePast, shouldDisableDate });\n\n  useIsomorphicLayoutEffect(() => {\n    if (value) {\n      setViewDate(value);\n    }\n  }, [value]);\n\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    !disablePickers &&\n    size === \"s\"\n  ) {\n    warn(\n      \"Нельзя включить селекты выбора месяца/года если размер календаря 's'\"\n    );\n  }\n\n  if (process.env.NODE_ENV === \"development\" && enableTime && size === \"s\") {\n    warn(\"Нельзя включить выбор времени если размер календаря 's'\");\n  }\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (\n        [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(event.key)\n      ) {\n        event.preventDefault();\n      }\n\n      const newFocusedDay = navigateDate(focusedDay ?? value, event.key);\n\n      if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate)) {\n        setViewDate(newFocusedDay);\n      }\n      setFocusedDay(newFocusedDay);\n    },\n    [focusedDay, setFocusedDay, setViewDate, value, viewDate]\n  );\n\n  const onDayChange = React.useCallback(\n    (date: Date) => {\n      onChange?.(setTimeEqual(date, value as Date | undefined | null));\n    },\n    [value, onChange]\n  );\n\n  const isDayActive = React.useCallback(\n    (day: Date) => Boolean(value && isSameDay(day, value)),\n    [value]\n  );\n\n  return (\n    <div\n      {...props}\n      ref={getRootRef}\n      vkuiClass={classNames(\"Calendar\", `Calendar--size-${size}`)}\n    >\n      <CalendarHeader\n        viewDate={viewDate}\n        onChange={setViewDate}\n        onNextMonth={setNextMonth}\n        onPrevMonth={setPrevMonth}\n        disablePickers={disablePickers || size === \"s\"}\n        vkuiClass=\"Calendar__header\"\n        prevMonthAriaLabel={prevMonthAriaLabel}\n        nextMonthAriaLabel={nextMonthAriaLabel}\n        changeMonthAriaLabel={changeMonthAriaLabel}\n        changeYearAriaLabel={changeYearAriaLabel}\n      />\n      <CalendarDays\n        viewDate={viewDate}\n        value={value}\n        weekStartsOn={weekStartsOn}\n        isDayFocused={isDayFocused}\n        tabIndex={0}\n        aria-label={changeDayAriaLabel}\n        onKeyDown={handleKeyDown}\n        onDayChange={onDayChange}\n        isDayActive={isDayActive}\n        isDaySelectionStart={isFirstDay}\n        isDaySelectionEnd={isLastDay}\n        isDayDisabled={isDayDisabled}\n        onBlur={resetSelectedDay}\n        showNeighboringMonth={showNeighboringMonth}\n        size={size}\n      />\n      {enableTime && value && size !== \"s\" && (\n        <div vkuiClass=\"Calendar__time\">\n          <CalendarTime\n            value={value}\n            onChange={onChange}\n            onClose={onClose}\n            doneButtonText={doneButtonText}\n            changeHoursAriaLabel={changeHoursAriaLabel}\n            changeMinutesAriaLabel={changeMinutesAriaLabel}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}