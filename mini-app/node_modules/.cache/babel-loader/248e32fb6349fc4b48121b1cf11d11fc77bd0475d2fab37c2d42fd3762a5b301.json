{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { ModalType } from \"./types\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop, isFunction } from \"../../lib/utils\";\nfunction getModals(children) {\n  return React.Children.toArray(children);\n}\nvar warn = warnOnce(\"ModalRoot\");\nexport function modalTransitionReducer(state, action) {\n  if (action.type === \"setActive\" && action.id !== state.activeModal) {\n    var nextModal = action.id; // preserve exiting modal if switching mid-transition\n\n    var prevModal = state.exitingModal || state.activeModal;\n    var history = state.history ? _toConsumableArray(state.history) : [];\n    var isBack = Boolean(nextModal && history.includes(nextModal));\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history: history,\n      isBack: isBack\n    };\n  }\n  if (action.type === \"entered\" && action.id === state.enteringModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      enteringModal: null\n    });\n  }\n  if (action.type === \"exited\" && action.id === state.exitingModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      exitingModal: null\n    });\n  }\n  if (action.type === \"inited\" && action.id === state.activeModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      enteringModal: action.id\n    });\n  }\n  return state;\n}\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\n\nexport function useModalManager(activeModal, children, onClose) {\n  var initModal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  var modalsState = React.useRef({}).current;\n  getModals(children).forEach(function (Modal) {\n    var modalProps = Modal.props;\n    var id = getNavId(modalProps, warn);\n    var state = id !== undefined && modalsState[id] || {\n      id: id !== null && id !== void 0 ? id : null\n    };\n    state.onClose = Modal.props.onClose;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight; // ModalPage props\n\n    if (typeof modalProps.settlingHeight === \"number\") {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n  var isMissing = activeModal && !modalsState[activeModal];\n  var safeActiveModal = isMissing ? null : activeModal;\n  var _React$useReducer = React.useReducer(modalTransitionReducer, {\n      activeModal: safeActiveModal,\n      enteringModal: null,\n      exitingModal: null,\n      history: safeActiveModal ? [safeActiveModal] : [],\n      isBack: false\n    }),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    transitionState = _React$useReducer2[0],\n    dispatchTransition = _React$useReducer2[1]; // Map props to state, render activeModal for init\n\n  useIsomorphicLayoutEffect(function () {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === \"development\" && isMissing) {\n      warn(\"Can't transition - modal \".concat(activeModal, \" not found\"));\n    }\n    dispatchTransition({\n      type: \"setActive\",\n      id: safeActiveModal !== null && safeActiveModal !== void 0 ? safeActiveModal : null\n    });\n  }, [activeModal]); // Init activeModal & set enteringModal\n\n  useIsomorphicLayoutEffect(function () {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({\n        type: \"inited\",\n        id: transitionState.activeModal\n      });\n    }\n  }, [transitionState.activeModal]);\n  var isCard = function isCard(id) {\n    var _modalsState$id;\n    return id != null && ((_modalsState$id = modalsState[id]) === null || _modalsState$id === void 0 ? void 0 : _modalsState$id.type) === ModalType.CARD;\n  };\n  var onEnter = React.useCallback(function (id) {\n    return dispatchTransition({\n      type: \"entered\",\n      id: id\n    });\n  }, []);\n  var onExit = React.useCallback(function (id) {\n    return dispatchTransition({\n      type: \"exited\",\n      id: id\n    });\n  }, []);\n  var delayEnter = Boolean(transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)));\n  var getModalState = React.useCallback(function (id) {\n    return modalsState[id];\n  }, [modalsState]);\n  function closeActiveModal() {\n    var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      } else if (process.env.NODE_ENV === \"development\") {\n        warn(\"onClose is undefined\");\n      }\n    }\n  }\n  return _objectSpread(_objectSpread({\n    onEnter: onEnter,\n    onExit: onExit\n  }, transitionState), {}, {\n    delayEnter: delayEnter,\n    getModalState: getModalState,\n    closeActiveModal: closeActiveModal\n  });\n}\nexport function withModalManager() {\n  var initModal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n  return function (Wrapped) {\n    return function WithModalManager(props) {\n      var transitionManager = useModalManager(props.activeModal, props.children, props.onClose, initModal);\n      return createScopedElement(Wrapped, _extends({}, props, transitionManager));\n    };\n  };\n}","map":{"version":3,"mappings":"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","names":["React","ModalType","warnOnce","getNavId","useIsomorphicLayoutEffect","noop","isFunction","getModals","children","Children","toArray","warn","modalTransitionReducer","state","action","type","id","activeModal","nextModal","prevModal","exitingModal","history","isBack","Boolean","includes","splice","indexOf","push","enteringModal","useModalManager","onClose","initModal","modalsState","useRef","current","forEach","Modal","modalProps","props","undefined","dynamicContentHeight","settlingHeight","isMissing","safeActiveModal","useReducer","_React$useReducer2","transitionState","dispatchTransition","process","env","NODE_ENV","isCard","CARD","onEnter","useCallback","onExit","delayEnter","getModalState","closeActiveModal","modalState","withModalManager","Wrapped","WithModalManager","transitionManager","createScopedElement"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\ModalRoot\\useModalManager.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { ModalsState, ModalsStateEntry, ModalType } from \"./types\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop, isFunction } from \"../../lib/utils\";\n\ninterface ModalTransitionState {\n  activeModal?: string | null;\n  enteringModal?: string | null;\n  exitingModal?: string | null;\n\n  history?: string[];\n  isBack?: boolean | null;\n}\n\nexport interface ModalTransitionProps extends ModalTransitionState {\n  onEnter: (id: string | null) => void;\n  onExit: (id: string | null) => void;\n  getModalState: (id: string) => ModalsStateEntry;\n  closeActiveModal: VoidFunction;\n  delayEnter: boolean;\n}\n\nfunction getModals(children: React.ReactNode | React.ReactNode[]) {\n  return React.Children.toArray(children) as React.ReactElement[];\n}\n\nconst warn = warnOnce(\"ModalRoot\");\n\nexport function modalTransitionReducer(\n  state: ModalTransitionState,\n  action: {\n    type: \"setActive\" | \"entered\" | \"exited\" | \"inited\";\n    id: string | null;\n  }\n): ModalTransitionState {\n  if (action.type === \"setActive\" && action.id !== state.activeModal) {\n    const nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    const prevModal = state.exitingModal || state.activeModal;\n    let history = state.history ? [...state.history] : [];\n    const isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history,\n      isBack,\n    };\n  }\n  if (action.type === \"entered\" && action.id === state.enteringModal) {\n    return { ...state, enteringModal: null };\n  }\n  if (action.type === \"exited\" && action.id === state.exitingModal) {\n    return { ...state, exitingModal: null };\n  }\n  if (action.type === \"inited\" && action.id === state.activeModal) {\n    return { ...state, enteringModal: action.id };\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(\n  activeModal: string | null | undefined,\n  children: React.ReactNode | React.ReactNode[],\n  onClose: (id: string) => void,\n  initModal: (state: ModalsStateEntry) => void = noop\n): ModalTransitionProps {\n  const modalsState = React.useRef<ModalsState>({}).current;\n  getModals(children).forEach((Modal) => {\n    const modalProps = Modal.props;\n    const id = getNavId(modalProps, warn);\n    const state: ModalsStateEntry = (id !== undefined && modalsState[id]) || {\n      id: id ?? null,\n    };\n\n    state.onClose = Modal.props.onClose;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === \"number\") {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n\n  const isMissing = activeModal && !modalsState[activeModal];\n  const safeActiveModal = isMissing ? null : activeModal;\n  const [transitionState, dispatchTransition] = React.useReducer(\n    modalTransitionReducer,\n    {\n      activeModal: safeActiveModal,\n      enteringModal: null,\n      exitingModal: null,\n      history: safeActiveModal ? [safeActiveModal] : [],\n      isBack: false,\n    }\n  );\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(() => {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === \"development\" && isMissing) {\n      warn(`Can't transition - modal ${activeModal} not found`);\n    }\n    dispatchTransition({ type: \"setActive\", id: safeActiveModal ?? null });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(() => {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({ type: \"inited\", id: transitionState.activeModal });\n    }\n  }, [transitionState.activeModal]);\n\n  const isCard = (id: string | null | undefined) =>\n    id != null && modalsState[id]?.type === ModalType.CARD;\n  const onEnter = React.useCallback(\n    (id: string | null) => dispatchTransition({ type: \"entered\", id }),\n    []\n  );\n  const onExit = React.useCallback(\n    (id: string | null) => dispatchTransition({ type: \"exited\", id }),\n    []\n  );\n  const delayEnter = Boolean(\n    transitionState.exitingModal &&\n      (isCard(activeModal) || isCard(transitionState.exitingModal))\n  );\n  const getModalState = React.useCallback(\n    (id: string) => modalsState[id],\n    [modalsState]\n  );\n\n  function closeActiveModal() {\n    const modalState =\n      transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      } else if (process.env.NODE_ENV === \"development\") {\n        warn(\"onClose is undefined\");\n      }\n    }\n  }\n\n  return {\n    onEnter,\n    onExit,\n    ...transitionState,\n    delayEnter,\n    getModalState,\n    closeActiveModal,\n  };\n}\n\nexport function withModalManager(\n  initModal: (a: ModalsStateEntry) => void = noop\n) {\n  return function <Props extends ModalTransitionProps>(\n    Wrapped: React.ComponentType<Props>\n  ): React.FC<\n    Omit<Props, keyof ModalTransitionProps> & { activeModal?: string | null }\n  > {\n    return function WithModalManager(props) {\n      const transitionManager = useModalManager(\n        props.activeModal,\n        props.children,\n        (props as any).onClose,\n        initModal\n      );\n      return <Wrapped {...(props as any)} {...transitionManager} />;\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}