{"ast":null,"code":"import { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from \"../../hooks/useKeyboardInputTracker\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nexport var CalendarDay = /*#__PURE__*/React.memo(function (_ref) {\n  var day = _ref.day,\n    today = _ref.today,\n    selected = _ref.selected,\n    onChange = _ref.onChange,\n    hidden = _ref.hidden,\n    disabled = _ref.disabled,\n    active = _ref.active,\n    selectionStart = _ref.selectionStart,\n    selectionEnd = _ref.selectionEnd,\n    focused = _ref.focused,\n    onEnter = _ref.onEnter,\n    onLeave = _ref.onLeave,\n    hinted = _ref.hinted,\n    hintedSelectionStart = _ref.hintedSelectionStart,\n    hintedSelectionEnd = _ref.hintedSelectionEnd,\n    sameMonth = _ref.sameMonth,\n    size = _ref.size;\n  var locale = React.useContext(LocaleProviderContext);\n  var ref = React.useRef(null);\n  var onClick = React.useCallback(function () {\n    return onChange(day);\n  }, [day, onChange]);\n  var handleEnter = React.useCallback(function () {\n    return onEnter === null || onEnter === void 0 ? void 0 : onEnter(day);\n  }, [day, onEnter]);\n  var handleLeave = React.useCallback(function () {\n    return onLeave === null || onLeave === void 0 ? void 0 : onLeave(day);\n  }, [day, onLeave]);\n  React.useEffect(function () {\n    if (focused && ref.current) {\n      ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, {\n        bubbles: true\n      }));\n      ref.current.focus();\n    }\n  }, [focused]);\n  if (hidden) {\n    return createScopedElement(\"div\", {\n      vkuiClass: \"CalendarDay__hidden\"\n    });\n  }\n  return createScopedElement(Tappable, {\n    vkuiClass: classNames(\"CalendarDay\", \"CalendarDay--size-\".concat(size), {\n      \"CalendarDay--today\": today,\n      \"CalendarDay--selected\": selected && !disabled,\n      \"CalendarDay--active\": active && !disabled,\n      \"CalendarDay--selection-start\": selectionStart,\n      \"CalendarDay--selection-end\": selectionEnd,\n      \"CalendarDay--disabled\": disabled,\n      \"CalendarDay--not-same-month\": !sameMonth\n    }),\n    hoverMode: active ? \"CalendarDay--active-hover\" : \"CalendarDay--hover\",\n    hasActive: false,\n    onClick: onClick,\n    disabled: disabled,\n    \"aria-label\": new Intl.DateTimeFormat(locale, {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    }).format(day),\n    tabIndex: -1,\n    getRootRef: ref,\n    focusVisibleMode: active ? \"outside\" : \"inside\",\n    onEnter: handleEnter,\n    onLeave: handleLeave\n  }, createScopedElement(\"div\", {\n    vkuiClass: classNames(\"CalendarDay__hinted\", {\n      \"CalendarDay__hinted--active\": hinted,\n      \"CalendarDay__hinted--selection-start\": hintedSelectionStart,\n      \"CalendarDay__hinted--selection-end\": hintedSelectionEnd\n    })\n  }, createScopedElement(\"div\", {\n    vkuiClass: classNames(\"CalendarDay__inner\", {\n      \"CalendarDay__inner--active\": active && !disabled\n    })\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"CalendarDay__day-number\"\n  }, day.getDate()))));\n});\nCalendarDay.displayName = \"CalendarDay\";","map":{"version":3,"mappings":"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","names":["React","classNames","Tappable","ENABLE_KEYBOARD_INPUT_EVENT_NAME","LocaleProviderContext","CalendarDay","memo","day","today","selected","onChange","hidden","disabled","active","selectionStart","selectionEnd","focused","onEnter","onLeave","hinted","hintedSelectionStart","hintedSelectionEnd","sameMonth","size","locale","useContext","ref","useRef","onClick","useCallback","handleEnter","handleLeave","useEffect","current","dispatchEvent","Event","bubbles","focus","createScopedElement","vkuiClass","hoverMode","hasActive","Intl","DateTimeFormat","weekday","year","month","format","tabIndex","getRootRef","focusVisibleMode","getDate","displayName"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\CalendarDay\\CalendarDay.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from \"../../hooks/useKeyboardInputTracker\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nimport \"./CalendarDay.css\";\n\nexport interface CalendarDayProps {\n  day: Date;\n  today?: boolean;\n  selected?: boolean;\n  selectionStart?: boolean;\n  selectionEnd?: boolean;\n  hintedSelectionStart?: boolean;\n  hintedSelectionEnd?: boolean;\n  active?: boolean;\n  hidden?: boolean;\n  disabled?: boolean;\n  focused?: boolean;\n  hinted?: boolean;\n  sameMonth?: boolean;\n  size?: \"s\" | \"m\";\n  onChange(value: Date): void;\n  onEnter?(value: Date): void;\n  onLeave?(value: Date): void;\n}\n\nexport const CalendarDay: React.FC<CalendarDayProps> = React.memo(\n  ({\n    day,\n    today,\n    selected,\n    onChange,\n    hidden,\n    disabled,\n    active,\n    selectionStart,\n    selectionEnd,\n    focused,\n    onEnter,\n    onLeave,\n    hinted,\n    hintedSelectionStart,\n    hintedSelectionEnd,\n    sameMonth,\n    size,\n  }) => {\n    const locale = React.useContext(LocaleProviderContext);\n    const ref = React.useRef<HTMLElement>(null);\n    const onClick = React.useCallback(() => onChange(day), [day, onChange]);\n    const handleEnter = React.useCallback(() => onEnter?.(day), [day, onEnter]);\n    const handleLeave = React.useCallback(() => onLeave?.(day), [day, onLeave]);\n\n    React.useEffect(() => {\n      if (focused && ref.current) {\n        ref.current.dispatchEvent(\n          new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, { bubbles: true })\n        );\n        ref.current.focus();\n      }\n    }, [focused]);\n\n    if (hidden) {\n      return <div vkuiClass=\"CalendarDay__hidden\"></div>;\n    }\n\n    return (\n      <Tappable\n        vkuiClass={classNames(\"CalendarDay\", `CalendarDay--size-${size}`, {\n          \"CalendarDay--today\": today,\n          \"CalendarDay--selected\": selected && !disabled,\n          \"CalendarDay--active\": active && !disabled,\n          \"CalendarDay--selection-start\": selectionStart,\n          \"CalendarDay--selection-end\": selectionEnd,\n          \"CalendarDay--disabled\": disabled,\n          \"CalendarDay--not-same-month\": !sameMonth,\n        })}\n        hoverMode={active ? \"CalendarDay--active-hover\" : \"CalendarDay--hover\"}\n        hasActive={false}\n        onClick={onClick}\n        disabled={disabled}\n        aria-label={new Intl.DateTimeFormat(locale, {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        }).format(day)}\n        tabIndex={-1}\n        getRootRef={ref}\n        focusVisibleMode={active ? \"outside\" : \"inside\"}\n        onEnter={handleEnter}\n        onLeave={handleLeave}\n      >\n        <div\n          vkuiClass={classNames(\"CalendarDay__hinted\", {\n            \"CalendarDay__hinted--active\": hinted,\n            \"CalendarDay__hinted--selection-start\": hintedSelectionStart,\n            \"CalendarDay__hinted--selection-end\": hintedSelectionEnd,\n          })}\n        >\n          <div\n            vkuiClass={classNames(\"CalendarDay__inner\", {\n              \"CalendarDay__inner--active\": active && !disabled,\n            })}\n          >\n            <div vkuiClass=\"CalendarDay__day-number\">{day.getDate()}</div>\n          </div>\n        </div>\n      </Tappable>\n    );\n  }\n);\n\nCalendarDay.displayName = \"CalendarDay\";\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}