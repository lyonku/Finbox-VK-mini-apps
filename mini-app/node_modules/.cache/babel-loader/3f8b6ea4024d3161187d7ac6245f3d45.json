{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"getScrollToLeft\", \"getScrollToRight\", \"showArrows\", \"scrollAnimationDuration\", \"hasMouse\", \"getRef\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport HorizontalScrollArrow from \"./HorizontalScrollArrow\";\nimport { easeInOutSine } from \"../../lib/fx\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { classNames } from \"../../lib/classNames\";\n\n/**\n * timing method\n */\nfunction now() {\n  return performance && performance.now ? performance.now() : Date.now();\n}\n/**\n * Код анимации скрола, на основе полифила: https://github.com/iamdustan/smoothscroll\n * Константа взята из полифила (468), на дизайн-ревью уточнили до 250\n * @var {number} SCROLL_ONE_FRAME_TIME время анимации скролла\n */\n\nvar SCROLL_ONE_FRAME_TIME = 250;\nfunction doScroll(_ref) {\n  var scrollElement = _ref.scrollElement,\n    getScrollPosition = _ref.getScrollPosition,\n    animationQueue = _ref.animationQueue,\n    onScrollToRightBorder = _ref.onScrollToRightBorder,\n    onScrollEnd = _ref.onScrollEnd,\n    onScrollStart = _ref.onScrollStart,\n    initialScrollWidth = _ref.initialScrollWidth,\n    _ref$scrollAnimationD = _ref.scrollAnimationDuration,\n    scrollAnimationDuration = _ref$scrollAnimationD === void 0 ? SCROLL_ONE_FRAME_TIME : _ref$scrollAnimationD;\n  if (!scrollElement || !getScrollPosition) {\n    return;\n  }\n  /**\n   * максимальное значение сдвига влево\n   */\n\n  var maxLeft = initialScrollWidth - scrollElement.offsetWidth;\n  var startLeft = scrollElement.scrollLeft;\n  var endLeft = getScrollPosition(startLeft);\n  onScrollStart();\n  if (endLeft >= maxLeft) {\n    onScrollToRightBorder();\n    endLeft = maxLeft;\n  }\n  var startTime = now();\n  (function scroll() {\n    if (!scrollElement) {\n      onScrollEnd();\n      return;\n    }\n    var time = now();\n    var elapsed = Math.min((time - startTime) / scrollAnimationDuration, 1);\n    var value = easeInOutSine(elapsed);\n    var currentLeft = startLeft + (endLeft - startLeft) * value;\n    scrollElement.scrollLeft = Math.ceil(currentLeft);\n    if (scrollElement.scrollLeft !== Math.max(0, endLeft)) {\n      requestAnimationFrame(scroll);\n      return;\n    }\n    onScrollEnd();\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  })();\n}\nvar HorizontalScroll = function HorizontalScroll(_ref2) {\n  var children = _ref2.children,\n    getScrollToLeft = _ref2.getScrollToLeft,\n    getScrollToRight = _ref2.getScrollToRight,\n    _ref2$showArrows = _ref2.showArrows,\n    showArrows = _ref2$showArrows === void 0 ? true : _ref2$showArrows,\n    _ref2$scrollAnimation = _ref2.scrollAnimationDuration,\n    scrollAnimationDuration = _ref2$scrollAnimation === void 0 ? SCROLL_ONE_FRAME_TIME : _ref2$scrollAnimation,\n    hasMouse = _ref2.hasMouse,\n    getRef = _ref2.getRef,\n    restProps = _objectWithoutProperties(_ref2, _excluded);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    canScrollLeft = _React$useState2[0],\n    setCanScrollLeft = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    canScrollRight = _React$useState4[0],\n    setCanScrollRight = _React$useState4[1];\n  var isCustomScrollingRef = React.useRef(false);\n  var scrollerRef = useExternRef(getRef);\n  var animationQueue = React.useRef([]);\n  function scrollTo(getScrollPosition) {\n    var scrollElement = scrollerRef.current;\n    animationQueue.current.push(function () {\n      var _scrollElement$firstE;\n      return doScroll({\n        scrollElement: scrollElement,\n        getScrollPosition: getScrollPosition,\n        animationQueue: animationQueue.current,\n        onScrollToRightBorder: function onScrollToRightBorder() {\n          return setCanScrollRight(false);\n        },\n        onScrollEnd: function onScrollEnd() {\n          return isCustomScrollingRef.current = false;\n        },\n        onScrollStart: function onScrollStart() {\n          return isCustomScrollingRef.current = true;\n        },\n        initialScrollWidth: (scrollElement === null || scrollElement === void 0 ? void 0 : (_scrollElement$firstE = scrollElement.firstElementChild) === null || _scrollElement$firstE === void 0 ? void 0 : _scrollElement$firstE.scrollWidth) || 0,\n        scrollAnimationDuration: scrollAnimationDuration\n      });\n    });\n    if (animationQueue.current.length === 1) {\n      animationQueue.current[0]();\n    }\n  }\n  var onscroll = React.useCallback(function () {\n    if (showArrows && hasMouse && scrollerRef.current && !isCustomScrollingRef.current) {\n      var scrollElement = scrollerRef.current;\n      setCanScrollLeft(scrollElement.scrollLeft > 0);\n      setCanScrollRight(scrollElement.scrollLeft + scrollElement.offsetWidth < scrollElement.scrollWidth);\n    }\n  }, [hasMouse, scrollerRef, showArrows]);\n  var scrollEvent = useEventListener(\"scroll\", onscroll);\n  React.useEffect(function () {\n    if (scrollerRef.current) {\n      scrollEvent.add(scrollerRef.current);\n    }\n  }, [scrollEvent, scrollerRef]);\n  React.useEffect(onscroll, [scrollerRef, children, onscroll]);\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(\"HorizontalScroll\", _defineProperty({}, \"HorizontalScroll--withConstArrows\", showArrows === \"always\"))\n  }), showArrows && hasMouse && canScrollLeft && createScopedElement(HorizontalScrollArrow, {\n    direction: \"left\",\n    onClick: function onClick() {\n      if (getScrollToLeft) {\n        scrollTo(getScrollToLeft);\n      }\n    }\n  }), showArrows && hasMouse && canScrollRight && createScopedElement(HorizontalScrollArrow, {\n    direction: \"right\",\n    onClick: function onClick() {\n      if (getScrollToRight) {\n        scrollTo(getScrollToRight);\n      }\n    }\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"HorizontalScroll__in\",\n    ref: scrollerRef\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"HorizontalScroll__in-wrapper\"\n  }, children)));\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(HorizontalScroll, {\n  hasMouse: true\n});","map":{"version":3,"mappings":"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","names":["React","withAdaptivity","HorizontalScrollArrow","easeInOutSine","useEventListener","useExternRef","classNames","now","performance","Date","SCROLL_ONE_FRAME_TIME","doScroll","scrollElement","getScrollPosition","animationQueue","onScrollToRightBorder","onScrollEnd","onScrollStart","initialScrollWidth","_ref$scrollAnimationD","scrollAnimationDuration","maxLeft","offsetWidth","startLeft","scrollLeft","endLeft","startTime","scroll","time","elapsed","Math","min","value","currentLeft","ceil","max","requestAnimationFrame","shift","length","HorizontalScroll","children","getScrollToLeft","getScrollToRight","_ref2$showArrows","showArrows","_ref2$scrollAnimation","hasMouse","getRef","restProps","useState","_React$useState2","canScrollLeft","setCanScrollLeft","_React$useState4","canScrollRight","setCanScrollRight","isCustomScrollingRef","useRef","scrollerRef","scrollTo","current","push","firstElementChild","scrollWidth","onscroll","useCallback","scrollEvent","useEffect","add","createScopedElement","vkuiClass","direction","onClick","ref"],"sources":["../../../src/components/HorizontalScroll/HorizontalScroll.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport HorizontalScrollArrow from \"./HorizontalScrollArrow\";\nimport { easeInOutSine } from \"../../lib/fx\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { HasRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./HorizontalScroll.css\";\n\ninterface ScrollContext {\n  scrollElement: HTMLElement | null;\n  scrollAnimationDuration: number;\n  animationQueue: VoidFunction[];\n  getScrollPosition: (currentPosition: number) => number;\n  onScrollToRightBorder: VoidFunction;\n  onScrollEnd: VoidFunction;\n  onScrollStart: VoidFunction;\n  /**\n   * Начальная ширина прокрутки.\n   * В некоторых случаях может отличаться от текущей ширины прокрутки из-за transforms: translate\n   */\n  initialScrollWidth: number;\n}\n\nexport type ScrollPositionHandler = (currentPosition: number) => number;\n\nexport interface HorizontalScrollProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    AdaptivityProps,\n    HasRef<HTMLDivElement> {\n  /**\n   * Функция для расчета величины прокрутки при клике на левую стрелку.\n   */\n  getScrollToLeft?: ScrollPositionHandler;\n  /**\n   * Функция для расчета величины прокрутки при клике на правую стрелку.\n   */\n  getScrollToRight?: ScrollPositionHandler;\n  showArrows?: boolean | \"always\";\n  scrollAnimationDuration?: number;\n}\n\n/**\n * timing method\n */\nfunction now() {\n  return performance && performance.now ? performance.now() : Date.now();\n}\n\n/**\n * Код анимации скрола, на основе полифила: https://github.com/iamdustan/smoothscroll\n * Константа взята из полифила (468), на дизайн-ревью уточнили до 250\n * @var {number} SCROLL_ONE_FRAME_TIME время анимации скролла\n */\nconst SCROLL_ONE_FRAME_TIME = 250;\n\nfunction doScroll({\n  scrollElement,\n  getScrollPosition,\n  animationQueue,\n  onScrollToRightBorder,\n  onScrollEnd,\n  onScrollStart,\n  initialScrollWidth,\n  scrollAnimationDuration = SCROLL_ONE_FRAME_TIME,\n}: ScrollContext) {\n  if (!scrollElement || !getScrollPosition) {\n    return;\n  }\n\n  /**\n   * максимальное значение сдвига влево\n   */\n  const maxLeft = initialScrollWidth - scrollElement.offsetWidth;\n\n  let startLeft = scrollElement.scrollLeft;\n  let endLeft = getScrollPosition(startLeft);\n\n  onScrollStart();\n\n  if (endLeft >= maxLeft) {\n    onScrollToRightBorder();\n    endLeft = maxLeft;\n  }\n\n  const startTime = now();\n\n  (function scroll() {\n    if (!scrollElement) {\n      onScrollEnd();\n      return;\n    }\n\n    const time = now();\n    const elapsed = Math.min((time - startTime) / scrollAnimationDuration, 1);\n\n    const value = easeInOutSine(elapsed);\n\n    const currentLeft = startLeft + (endLeft - startLeft) * value;\n    scrollElement.scrollLeft = Math.ceil(currentLeft);\n\n    if (scrollElement.scrollLeft !== Math.max(0, endLeft)) {\n      requestAnimationFrame(scroll);\n      return;\n    }\n\n    onScrollEnd();\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  })();\n}\n\nconst HorizontalScroll: React.FC<HorizontalScrollProps> = ({\n  children,\n  getScrollToLeft,\n  getScrollToRight,\n  showArrows = true,\n  scrollAnimationDuration = SCROLL_ONE_FRAME_TIME,\n  hasMouse,\n  getRef,\n  ...restProps\n}: HorizontalScrollProps) => {\n  const [canScrollLeft, setCanScrollLeft] = React.useState(false);\n  const [canScrollRight, setCanScrollRight] = React.useState(false);\n\n  const isCustomScrollingRef = React.useRef(false);\n\n  const scrollerRef = useExternRef(getRef);\n\n  const animationQueue = React.useRef<VoidFunction[]>([]);\n\n  function scrollTo(getScrollPosition: (offset: number) => number) {\n    const scrollElement = scrollerRef.current;\n\n    animationQueue.current.push(() =>\n      doScroll({\n        scrollElement,\n        getScrollPosition,\n        animationQueue: animationQueue.current,\n        onScrollToRightBorder: () => setCanScrollRight(false),\n        onScrollEnd: () => (isCustomScrollingRef.current = false),\n        onScrollStart: () => (isCustomScrollingRef.current = true),\n        initialScrollWidth: scrollElement?.firstElementChild?.scrollWidth || 0,\n        scrollAnimationDuration,\n      })\n    );\n    if (animationQueue.current.length === 1) {\n      animationQueue.current[0]();\n    }\n  }\n\n  const onscroll = React.useCallback(() => {\n    if (\n      showArrows &&\n      hasMouse &&\n      scrollerRef.current &&\n      !isCustomScrollingRef.current\n    ) {\n      const scrollElement = scrollerRef.current;\n\n      setCanScrollLeft(scrollElement.scrollLeft > 0);\n      setCanScrollRight(\n        scrollElement.scrollLeft + scrollElement.offsetWidth <\n          scrollElement.scrollWidth\n      );\n    }\n  }, [hasMouse, scrollerRef, showArrows]);\n\n  const scrollEvent = useEventListener(\"scroll\", onscroll);\n  React.useEffect(() => {\n    if (scrollerRef.current) {\n      scrollEvent.add(scrollerRef.current);\n    }\n  }, [scrollEvent, scrollerRef]);\n  React.useEffect(onscroll, [scrollerRef, children, onscroll]);\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\"HorizontalScroll\", {\n        [\"HorizontalScroll--withConstArrows\"]: showArrows === \"always\",\n      })}\n    >\n      {showArrows && hasMouse && canScrollLeft && (\n        <HorizontalScrollArrow\n          direction=\"left\"\n          onClick={() => {\n            if (getScrollToLeft) {\n              scrollTo(getScrollToLeft);\n            }\n          }}\n        />\n      )}\n      {showArrows && hasMouse && canScrollRight && (\n        <HorizontalScrollArrow\n          direction=\"right\"\n          onClick={() => {\n            if (getScrollToRight) {\n              scrollTo(getScrollToRight);\n            }\n          }}\n        />\n      )}\n      <div vkuiClass=\"HorizontalScroll__in\" ref={scrollerRef}>\n        <div vkuiClass=\"HorizontalScroll__in-wrapper\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(HorizontalScroll, {\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}