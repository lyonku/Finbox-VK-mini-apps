{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nvar _excluded = [\"searchable\", \"name\", \"className\", \"getRef\", \"getRootRef\", \"popupDirection\", \"options\", \"sizeY\", \"platform\", \"style\", \"onChange\", \"onBlur\", \"onFocus\", \"onClick\", \"renderOption\", \"children\", \"emptyText\", \"onInputChange\", \"filterFn\", \"renderDropdown\", \"onOpen\", \"onClose\", \"fetching\", \"icon\", \"dropdownOffsetDistance\", \"fixDropdownWidth\", \"forceDropdownPortal\"],\n  _excluded2 = [\"option\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport SelectMimicry from \"../SelectMimicry/SelectMimicry\";\nimport { debounce, setRef, multiRef } from \"../../lib/utils\";\nimport { classNames } from \"../../lib/classNames\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport CustomSelectOption from \"../CustomSelectOption/CustomSelectOption\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Input from \"../Input/Input\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { defaultFilterFn } from \"../../lib/select\";\nimport { is } from \"../../lib/is\";\nimport { CustomSelectDropdown } from \"../CustomSelectDropdown/CustomSelectDropdown\";\nvar findIndexAfter = function findIndexAfter() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex(function (option, i) {\n    return i > startIndex && !option.disabled;\n  });\n};\nvar findIndexBefore = function findIndexBefore() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var endIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options.length;\n  var result = -1;\n  if (options === undefined || endIndex <= 0) {\n    return result;\n  }\n  for (var i = endIndex - 1; i >= 0; i--) {\n    var _option = options[i];\n    if (!_option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\nvar warn = warnOnce(\"CustomSelect\");\nvar checkOptionsValueType = function checkOptionsValueType(options) {\n  if (new Set(options.map(function (item) {\n    return _typeof(item.value);\n  })).size > 1) {\n    warn(\"Some values of your options have different types. CustomSelect onChange always returns a string type.\");\n  }\n};\nexport var SelectType;\n(function (SelectType) {\n  SelectType[\"Default\"] = \"default\";\n  SelectType[\"Plain\"] = \"plain\";\n})(SelectType || (SelectType = {}));\nvar CustomSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomSelect, _React$Component);\n  var _super = _createSuper(CustomSelect);\n  function CustomSelect(props) {\n    var _this;\n    _classCallCheck(this, CustomSelect);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"keyboardInput\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"isControlledOutside\", false);\n    _defineProperty(_assertThisInitialized(_this), \"selectEl\", null);\n    _defineProperty(_assertThisInitialized(_this), \"scrollBoxRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"resetKeyboardInput\", function () {\n      _this.keyboardInput = \"\";\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getSelectedItem\", function () {\n      var _this$state = _this.state,\n        selectedOptionIndex = _this$state.selectedOptionIndex,\n        options = _this$state.options;\n      if (!(options !== null && options !== void 0 && options.length)) {\n        return null;\n      }\n      return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"filter\", function (options, inputValue, filterFn) {\n      return typeof filterFn === \"function\" ? options.filter(function (option) {\n        return filterFn(inputValue, option);\n      }) : options;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"open\", function () {\n      _this.setState(function (_ref) {\n        var selectedOptionIndex = _ref.selectedOptionIndex;\n        return {\n          opened: true,\n          focusedOptionIndex: selectedOptionIndex\n        };\n      }, function () {\n        var selectedOptionIndex = _this.state.selectedOptionIndex;\n        if (selectedOptionIndex !== undefined && _this.isValidIndex(selectedOptionIndex)) {\n          _this.scrollToElement(selectedOptionIndex, true);\n        }\n      });\n      typeof _this.props.onOpen === \"function\" && _this.props.onOpen();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"close\", function () {\n      _this.resetKeyboardInput();\n      _this.setState(function () {\n        return {\n          inputValue: \"\",\n          opened: false,\n          focusedOptionIndex: -1,\n          options: _this.props.options\n        };\n      });\n      typeof _this.props.onClose === \"function\" && _this.props.onClose();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"selectFocused\", function () {\n      var focusedOptionIndex = _this.state.focusedOptionIndex;\n      if (focusedOptionIndex !== undefined) {\n        _this.select(focusedOptionIndex);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"select\", function (index) {\n      var _this$state$options;\n      if (!_this.isValidIndex(index)) {\n        return;\n      }\n      var item = (_this$state$options = _this.state.options) === null || _this$state$options === void 0 ? void 0 : _this$state$options[index];\n      _this.setState({\n        nativeSelectValue: item === null || item === void 0 ? void 0 : item.value\n      }, function () {\n        var _this$selectEl;\n        var event = new Event(\"change\", {\n          bubbles: true\n        });\n        (_this$selectEl = _this.selectEl) === null || _this$selectEl === void 0 ? void 0 : _this$selectEl.dispatchEvent(event);\n      });\n      _this.close();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function () {\n      _this.state.opened ? _this.close() : _this.open();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onFocus\", function () {\n      var _this$selectEl2;\n      var event = new Event(\"focus\");\n      (_this$selectEl2 = _this.selectEl) === null || _this$selectEl2 === void 0 ? void 0 : _this$selectEl2.dispatchEvent(event);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function () {\n      var _this$selectEl3;\n      _this.close();\n      var event = new Event(\"blur\");\n      (_this$selectEl3 = _this.selectEl) === null || _this$selectEl3 === void 0 ? void 0 : _this$selectEl3.dispatchEvent(event);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"focusOptionByIndex\", function (index) {\n      var _this$state$options$l, _this$state$options2, _this$state$options3;\n      var scrollTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (index === undefined || index < 0 || index > ((_this$state$options$l = (_this$state$options2 = _this.state.options) === null || _this$state$options2 === void 0 ? void 0 : _this$state$options2.length) !== null && _this$state$options$l !== void 0 ? _this$state$options$l : 0) - 1) {\n        return;\n      }\n      var option = (_this$state$options3 = _this.state.options) === null || _this$state$options3 === void 0 ? void 0 : _this$state$options3[index];\n      if (option !== null && option !== void 0 && option.disabled) {\n        return;\n      }\n      scrollTo && _this.scrollToElement(index);\n      _this.setState(function (prevState) {\n        return (\n          // Это оптимизация, прежде всего, под `onMouseOver`\n          prevState.focusedOptionIndex !== index ? {\n            focusedOptionIndex: index\n          } : null\n        );\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"focusOption\", function (type) {\n      var focusedOptionIndex = _this.state.focusedOptionIndex;\n      var index = focusedOptionIndex;\n      if (type === \"next\") {\n        var nextIndex = findIndexAfter(_this.state.options, index);\n        index = nextIndex === -1 ? findIndexAfter(_this.state.options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === \"prev\") {\n        var beforeIndex = findIndexBefore(_this.state.options, index);\n        index = beforeIndex === -1 ? findIndexBefore(_this.state.options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      _this.focusOptionByIndex(index);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleOptionHover\", function (e) {\n      var _e$currentTarget$pare;\n      _this.focusOptionByIndex(Array.prototype.indexOf.call((_e$currentTarget$pare = e.currentTarget.parentNode) === null || _e$currentTarget$pare === void 0 ? void 0 : _e$currentTarget$pare.children, e.currentTarget), false);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleOptionDown\", function (e) {\n      e.preventDefault();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleOptionClick\", function (e) {\n      var _e$currentTarget$pare2, _this$state$options4;\n      var index = Array.prototype.indexOf.call((_e$currentTarget$pare2 = e.currentTarget.parentNode) === null || _e$currentTarget$pare2 === void 0 ? void 0 : _e$currentTarget$pare2.children, e.currentTarget);\n      var option = (_this$state$options4 = _this.state.options) === null || _this$state$options4 === void 0 ? void 0 : _this$state$options4[index];\n      if (option && !option.disabled) {\n        _this.selectFocused();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"resetFocusedOption\", function () {\n      _this.setState({\n        focusedOptionIndex: -1\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onKeyboardInput\", function (key) {\n      var _this$state$options5;\n      var fullInput = _this.keyboardInput + key;\n      var optionIndex = (_this$state$options5 = _this.state.options) === null || _this$state$options5 === void 0 ? void 0 : _this$state$options5.findIndex(function (option) {\n        return option.label.toLowerCase().includes(fullInput);\n      });\n      if (optionIndex !== undefined && optionIndex > -1) {\n        _this.focusOptionByIndex(optionIndex);\n      }\n      _this.keyboardInput = fullInput;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onLabelClick\", function (e) {\n      var _this$scrollBoxRef$cu;\n      if ((_this$scrollBoxRef$cu = _this.scrollBoxRef.current) !== null && _this$scrollBoxRef$cu !== void 0 && _this$scrollBoxRef$cu.contains(e.target)) {\n        e.preventDefault();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNativeSelectChange\", function (e) {\n      var newSelectedOptionIndex = _this.findSelectedIndex(_this.state.options, e.currentTarget.value);\n      if (_this.state.selectedOptionIndex !== newSelectedOptionIndex) {\n        var _this$props$onChange, _this$props;\n        if (!_this.isControlledOutside) {\n          _this.setState({\n            selectedOptionIndex: newSelectedOptionIndex\n          });\n        }\n        (_this$props$onChange = (_this$props = _this.props).onChange) === null || _this$props$onChange === void 0 ? void 0 : _this$props$onChange.call(_this$props, e);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onInputChange\", function (e) {\n      if (_this.props.onInputChange) {\n        var _options = _this.props.onInputChange(e, _this.props.options);\n        if (_options) {\n          if (process.env.NODE_ENV === \"development\") {\n            warn(\"This filtration method is deprecated. Return value of onInputChange will\" + \" be ignored in v5.0.0. For custom filtration please update props.options by yourself or use filterFn property\");\n          }\n          _this.setState({\n            options: _options,\n            selectedOptionIndex: _this.findSelectedIndex(_options, _this.state.nativeSelectValue),\n            inputValue: e.target.value\n          });\n        } else {\n          _this.setState({\n            inputValue: e.target.value\n          });\n        }\n      } else {\n        var _options2 = _this.filter(_this.props.options, e.target.value, _this.props.filterFn);\n        _this.setState({\n          options: _options2,\n          selectedOptionIndex: _this.findSelectedIndex(_options2, _this.state.nativeSelectValue),\n          inputValue: e.target.value\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onInputKeyDown\", function (event) {\n      [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) && _this.areOptionsShown && event.preventDefault();\n      switch (event.key) {\n        case \"ArrowUp\":\n          _this.areOptionsShown && _this.focusOption(\"prev\");\n          break;\n        case \"ArrowDown\":\n          _this.areOptionsShown && _this.focusOption(\"next\");\n          break;\n        case \"Escape\":\n          _this.close();\n          break;\n        case \"Enter\":\n          _this.areOptionsShown && _this.selectFocused();\n          break;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDownSelect\", function (event) {\n      var opened = _this.state.opened;\n      if (event.key.length === 1 && event.key !== \" \") {\n        _this.onKeyboardInput(event.key);\n        return;\n      }\n      [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) && _this.areOptionsShown && event.preventDefault();\n      switch (event.key) {\n        case \"ArrowUp\":\n          if (opened) {\n            _this.areOptionsShown && _this.focusOption(\"prev\");\n          } else {\n            _this.open();\n          }\n          break;\n        case \"ArrowDown\":\n          if (opened) {\n            _this.areOptionsShown && _this.focusOption(\"next\");\n          } else {\n            _this.open();\n          }\n          break;\n        case \"Escape\":\n          _this.close();\n          break;\n        case \"Enter\":\n        case \"Spacebar\":\n        case \" \":\n          if (opened) {\n            _this.areOptionsShown && _this.selectFocused();\n          } else {\n            _this.open();\n          }\n          break;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", debounce(_this.resetKeyboardInput, 1000));\n    _defineProperty(_assertThisInitialized(_this), \"renderOption\", function (option, index) {\n      var _this$state2 = _this.state,\n        focusedOptionIndex = _this$state2.focusedOptionIndex,\n        selectedOptionIndex = _this$state2.selectedOptionIndex;\n      var renderOption = _this.props.renderOption;\n      var hovered = index === focusedOptionIndex;\n      var selected = index === selectedOptionIndex;\n      return createScopedElement(React.Fragment, {\n        key: \"\".concat(option.value)\n      }, renderOption({\n        option: option,\n        hovered: hovered,\n        children: option.label,\n        selected: selected,\n        disabled: option.disabled,\n        onClick: _this.handleOptionClick,\n        onMouseDown: _this.handleOptionDown,\n        // Используем `onMouseOver` вместо `onMouseEnter`.\n        // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n        //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n        //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n        //  2. Если это тач-устройство.\n        //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n        //     но не на тот, на который нажали в первый раз.\n        // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n        onMouseOver: _this.handleOptionHover\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"selectRef\", function (element) {\n      _this.selectEl = element;\n      if (_this.props.getRef) {\n        setRef(element, _this.props.getRef);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPlacementChange\", function (placement) {\n      _this.setState(function () {\n        return {\n          popperPlacement: placement\n        };\n      });\n    });\n    var value = props.value,\n      defaultValue = props.defaultValue;\n    var initialValue = value !== undefined ? value : defaultValue;\n    _this.keyboardInput = \"\";\n    if (process.env.NODE_ENV === \"development\") {\n      checkOptionsValueType(props.options);\n    }\n    _this.state = {\n      opened: false,\n      focusedOptionIndex: -1,\n      selectedOptionIndex: _this.findSelectedIndex(props.options, initialValue),\n      nativeSelectValue: initialValue,\n      options: props.options,\n      inputValue: \"\"\n    };\n    if (props.value !== undefined) {\n      _this.isControlledOutside = true;\n    }\n    return _this;\n  }\n  _createClass(CustomSelect, [{\n    key: \"areOptionsShown\",\n    get: function get() {\n      return this.scrollBoxRef.current !== null;\n    }\n  }, {\n    key: \"findSelectedIndex\",\n    value: function findSelectedIndex(options, value) {\n      var _options$findIndex;\n      return (_options$findIndex = options === null || options === void 0 ? void 0 : options.findIndex(function (item) {\n        value = typeof item.value === \"number\" ? Number(value) : value;\n        return item.value === value;\n      })) !== null && _options$findIndex !== void 0 ? _options$findIndex : -1;\n    }\n  }, {\n    key: \"isValidIndex\",\n    value: function isValidIndex(index) {\n      var _this$state$options$l2, _this$state$options6;\n      return index >= 0 && index < ((_this$state$options$l2 = (_this$state$options6 = this.state.options) === null || _this$state$options6 === void 0 ? void 0 : _this$state$options6.length) !== null && _this$state$options$l2 !== void 0 ? _this$state$options$l2 : 0);\n    }\n  }, {\n    key: \"scrollToElement\",\n    value: function scrollToElement(index) {\n      var center = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var dropdown = this.scrollBoxRef.current;\n      var item = dropdown ? dropdown.children[index] : null;\n      if (!item || !dropdown) {\n        return;\n      }\n      var dropdownHeight = dropdown.offsetHeight;\n      var scrollTop = dropdown.scrollTop;\n      var itemTop = item.offsetTop;\n      var itemHeight = item.offsetHeight;\n      if (center) {\n        dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n      } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n        dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n      } else if (itemTop < scrollTop) {\n        dropdown.scrollTop = itemTop;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Внутри useEffect и так is, можно убрать\n      if (!is(prevProps.value, this.props.value) || prevProps.options !== this.props.options) {\n        if (process.env.NODE_ENV === \"development\") {\n          checkOptionsValueType(this.props.options);\n        }\n        this.isControlledOutside = this.props.value !== undefined;\n        var _value = this.props.value === undefined ? this.state.nativeSelectValue : this.props.value;\n        var _options3 = this.props.searchable && this.state.inputValue !== undefined ? this.filter(this.props.options, this.state.inputValue, this.props.filterFn) : this.props.options;\n        this.setState({\n          nativeSelectValue: _value,\n          selectedOptionIndex: this.findSelectedIndex(_options3, _value),\n          options: _options3\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$popperPla;\n      var _this$state3 = this.state,\n        opened = _this$state3.opened,\n        nativeSelectValue = _this$state3.nativeSelectValue,\n        stateOptions = _this$state3.options;\n      var _this$props2 = this.props,\n        searchable = _this$props2.searchable,\n        name = _this$props2.name,\n        className = _this$props2.className,\n        getRef = _this$props2.getRef,\n        getRootRef = _this$props2.getRootRef,\n        popupDirection = _this$props2.popupDirection,\n        options = _this$props2.options,\n        sizeY = _this$props2.sizeY,\n        platform = _this$props2.platform,\n        style = _this$props2.style,\n        onChange = _this$props2.onChange,\n        onBlur = _this$props2.onBlur,\n        onFocus = _this$props2.onFocus,\n        onClick = _this$props2.onClick,\n        renderOption = _this$props2.renderOption,\n        children = _this$props2.children,\n        emptyText = _this$props2.emptyText,\n        onInputChange = _this$props2.onInputChange,\n        filterFn = _this$props2.filterFn,\n        renderDropdown = _this$props2.renderDropdown,\n        onOpen = _this$props2.onOpen,\n        onClose = _this$props2.onClose,\n        fetching = _this$props2.fetching,\n        icon = _this$props2.icon,\n        dropdownOffsetDistance = _this$props2.dropdownOffsetDistance,\n        fixDropdownWidth = _this$props2.fixDropdownWidth,\n        forceDropdownPortal = _this$props2.forceDropdownPortal,\n        restProps = _objectWithoutProperties(_this$props2, _excluded);\n      var selected = this.getSelectedItem();\n      var label = selected ? selected.label : undefined;\n      var defaultDropdownContent = stateOptions !== undefined && stateOptions.length > 0 ? stateOptions.map(this.renderOption) : createScopedElement(Caption, {\n        vkuiClass: \"CustomSelect__empty\"\n      }, this.props.emptyText);\n      var resolvedContent;\n      if (typeof renderDropdown === \"function\") {\n        resolvedContent = renderDropdown({\n          defaultDropdownContent: defaultDropdownContent\n        });\n      } else {\n        resolvedContent = defaultDropdownContent;\n      }\n      var isPopperDirectionTop = (_this$state$popperPla = this.state.popperPlacement) === null || _this$state$popperPla === void 0 ? void 0 : _this$state$popperPla.includes(\"top\");\n      return createScopedElement(\"label\", {\n        vkuiClass: getClassName(\"CustomSelect\", platform),\n        className: className,\n        style: style,\n        ref: multiRef(this.containerRef, getRootRef),\n        onClick: this.onLabelClick\n      }, opened && searchable ? createScopedElement(Input, _extends({}, restProps, {\n        autoFocus: true,\n        onBlur: this.onBlur,\n        vkuiClass: classNames({\n          CustomSelect__open: opened,\n          \"CustomSelect__open--popupDirectionTop\": isPopperDirectionTop,\n          \"CustomSelect__open--not-adjacent\": dropdownOffsetDistance > 0\n        }),\n        value: this.state.inputValue,\n        onKeyDown: this.onInputKeyDown,\n        onChange: this.onInputChange // TODO Ожидается, что клик поймает нативный select, но его перехвает Input. К сожалению, это приводит конфликтам типизации.\n        // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n        // @ts-ignore\n        ,\n\n        onClick: onClick,\n        after: icon,\n        placeholder: restProps.placeholder\n      })) : createScopedElement(SelectMimicry, _extends({}, restProps, {\n        \"aria-hidden\": true,\n        onClick: this.onClick,\n        onKeyDown: this.handleKeyDownSelect,\n        onKeyUp: this.handleKeyUp,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        vkuiClass: classNames({\n          CustomSelect__open: opened,\n          \"CustomSelect__open--popupDirectionTop\": isPopperDirectionTop,\n          \"CustomSelect__open--not-adjacent\": dropdownOffsetDistance > 0\n        }),\n        after: icon\n      }), label), createScopedElement(\"select\", {\n        ref: this.selectRef,\n        name: name,\n        onChange: this.onNativeSelectChange,\n        onBlur: onBlur,\n        onFocus: onFocus,\n        onClick: onClick,\n        value: nativeSelectValue,\n        \"aria-hidden\": true,\n        vkuiClass: \"CustomSelect__control\"\n      }, options.map(function (item) {\n        return createScopedElement(\"option\", {\n          key: \"\".concat(item.value),\n          value: item.value\n        });\n      })), opened && createScopedElement(CustomSelectDropdown, {\n        targetRef: this.containerRef,\n        placement: popupDirection,\n        scrollBoxRef: this.scrollBoxRef,\n        onPlacementChange: this.onPlacementChange,\n        onMouseLeave: this.resetFocusedOption,\n        fetching: fetching,\n        offsetDistance: dropdownOffsetDistance,\n        sameWidth: fixDropdownWidth,\n        forcePortal: forceDropdownPortal\n      }, resolvedContent));\n    }\n  }]);\n  return CustomSelect;\n}(React.Component); // eslint-disable-next-line import/no-default-export\n\n_defineProperty(CustomSelect, \"defaultProps\", {\n  searchable: false,\n  renderOption: function renderOption(_ref2) {\n    var option = _ref2.option,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n    return createScopedElement(CustomSelectOption, props);\n  },\n  options: [],\n  emptyText: \"Ничего не найдено\",\n  filterFn: defaultFilterFn,\n  icon: createScopedElement(DropdownIcon, null),\n  dropdownOffsetDistance: 0,\n  fixDropdownWidth: true,\n  selectType: SelectType.Default\n});\nexport default withPlatform(withAdaptivity(CustomSelect, {\n  sizeY: true\n}));","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B;AACA,SAASC,UAAT;AAEA,SAASC,cAAT;AACA,SAASC,YAAT;AACA,OAAOC,kBAAP;AAGA,SAASC,YAAT;AAGA,OAAOC,KAAP;AACA,SAASC,YAAT;AACA,SAASC,OAAT;AACA,SAASC,QAAT;AACA,SAASC,eAAT;AACA,SAASC,EAAT;AAEA,SAASC,oBAAT;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAGlB;EAAA,IAFHC,OAEG,uEAFsC,EAEtC;EAAA,IADHC,UACG,uEADU,CAAC,CACX;EACH,IAAIA,UAAU,IAAID,OAAO,CAACE,MAAR,GAAiB,CAAnC,EAAsC;IACpC,OAAO,CAAC,CAAR;EACD;EACD,OAAOF,OAAO,CAACG,SAAR,CAAkB,UAACC,MAAD,EAASC,CAAT;IAAA,OAAeA,CAAC,GAAGJ,UAAJ,IAAkB,CAACG,MAAM,CAACE,QAAzC;EAAA,CAAlB,CAAP;AACD,CARD;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAGnB;EAAA,IAFHP,OAEG,uEAFsC,EAEtC;EAAA,IADHQ,QACG,uEADgBR,OAAO,CAACE,MACxB;EACH,IAAIO,MAAM,GAAG,CAAC,CAAd;EACA,IAAIT,OAAO,KAAKU,SAAZ,IAAyBF,QAAQ,IAAI,CAAzC,EAA4C;IAC1C,OAAOC,MAAP;EACD;EACD,KAAK,IAAIJ,CAAC,GAAGG,QAAQ,GAAG,CAAxB,EAA2BH,CAAC,IAAI,CAAhC,EAAmCA,CAAC,EAApC,EAAwC;IACtC,IAAID,OAAM,GAAGJ,OAAO,CAACK,CAAD,CAApB;IAEA,IAAI,CAACD,OAAM,CAACE,QAAZ,EAAsB;MACpBG,MAAM,GAAGJ,CAAT;MACA;IACD;EACF;EACD,OAAOI,MAAP;AACD,CAjBD;AAmBA,IAAME,IAAI,GAAGhB,QAAQ,CAAC,cAAD,CAArB;AAEA,IAAMiB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACZ,OAAD,EAA4C;EACxE,IAAI,IAAIa,GAAJ,CAAQb,OAAO,CAACc,GAAR,CAAY,UAACC,IAAD;IAAA,eAAiBA,IAAI,CAACC,KAAtB;EAAA,CAAZ,CAAR,EAAkDC,IAAlD,GAAyD,CAA7D,EAAgE;IAC9DN,IAAI,CACF,uGADE,CAAJ;EAGD;AACF,CAND;AAUA,WAAYO,UAAZ;WAAYA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;IAuFNC,Y;;;EAkBJ,sBAAmBC,KAAnB,EAA6C;IAAA;IAAAC;IAC3CC,0BAAMF,KAAN;IAD2CG;IAAAA,sEA4Bf,KA5Be;IAAAA,2DA6BA,IA7BA;IAAAA,4EA8BbzC,KAAK,CAAC0C,SAAN,EA9Ba;IAAAD,4EA+BbzC,KAAK,CAAC0C,SAAN,EA/Ba;IAAAD,qEAiCP,YAAM;MAC1CD,MAAKG,aAAL,GAAqB,EAArB;IACD,CAnC4C;IAAAF,kEAqCV,YAAM;MACvC,kBAAyCD,MAAKI,KAA9C;QAAQC,mBAAR,eAAQA,mBAAR;QAA6B3B,OAA7B,eAA6BA,OAA7B;MAEA,IAAI,EAACA,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEE,MAAV,CAAJ,EAAsB;QACpB,OAAO,IAAP;MACD;MAED,OAAOyB,mBAAmB,KAAKjB,SAAxB,GACHV,OAAO,CAAC2B,mBAAD,CADJ,GAEHjB,SAFJ;IAGD,CA/C4C;IAAAa,yDAqDpC,UACPvB,OADO,EAEP4B,UAFO,EAGPC,QAHO,EAIJ;MACH,OAAO,OAAOA,QAAP,KAAoB,UAApB,GACH7B,OAAO,CAAC8B,MAAR,CAAe,UAAC1B,MAAD;QAAA,OAAYyB,QAAQ,CAACD,UAAD,EAAaxB,MAAb,CAApB;MAAA,CAAf,CADG,GAEHJ,OAFJ;IAGD,CA7D4C;IAAAuB,uDA2EtC,YAAM;MACXD,MAAKS,QAAL,CACE;QAAA,IAAGJ,mBAAH,QAAGA,mBAAH;QAAA,OAA8B;UAC5BK,MAAM,EAAE,IADoB;UAE5BC,kBAAkB,EAAEN;QAFQ,CAA9B;MAAA,CADF,EAKE,YAAM;QACJ,IAAQA,mBAAR,GAAgCL,MAAKI,KAArC,CAAQC,mBAAR;QAEA,IACEA,mBAAmB,KAAKjB,SAAxB,IACAY,MAAKY,YAAL,CAAkBP,mBAAlB,CAFF,EAGE;UACAL,MAAKa,eAAL,CAAqBR,mBAArB,EAA0C,IAA1C;QACD;MACF,CAdH;MAgBA,OAAOL,MAAKF,KAAL,CAAWgB,MAAlB,KAA6B,UAA7B,IAA2Cd,MAAKF,KAAL,CAAWgB,MAAX,EAA3C;IACD,CA7F4C;IAAAb,wDA+FrC,YAAM;MACZD,MAAKe,kBAAL;MAEAf,MAAKS,QAAL,CAAc;QAAA,OAAO;UACnBH,UAAU,EAAE,EADO;UAEnBI,MAAM,EAAE,KAFW;UAGnBC,kBAAkB,EAAE,CAAC,CAHF;UAInBjC,OAAO,EAAEsB,MAAKF,KAAL,CAAWpB;QAJD,CAAP;MAAA,CAAd;MAMA,OAAOsB,MAAKF,KAAL,CAAWkB,OAAlB,KAA8B,UAA9B,IAA4ChB,MAAKF,KAAL,CAAWkB,OAAX,EAA5C;IACD,CAzG4C;IAAAf,gEA+G7B,YAAM;MACpB,IAAQU,kBAAR,GAA+BX,MAAKI,KAApC,CAAQO,kBAAR;MAEA,IAAIA,kBAAkB,KAAKvB,SAA3B,EAAsC;QACpCY,MAAKiB,MAAL,CAAYN,kBAAZ;MACD;IACF,CArH4C;IAAAV,yDAuHpC,UAACiB,KAAD,EAAmB;MAAA;MAC1B,IAAI,CAAClB,MAAKY,YAAL,CAAkBM,KAAlB,CAAL,EAA+B;QAC7B;MACD;MAED,IAAMzB,IAAI,0BAAGO,MAAKI,KAAL,CAAW1B,OAAd,wDAAGyC,oBAAqBD,KAArB,CAAb;MAEAlB,MAAKS,QAAL,CACE;QACEW,iBAAiB,EAAE3B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEC;MAD3B,CADF,EAIE,YAAM;QAAA;QACJ,IAAM2B,KAAK,GAAG,IAAIC,KAAJ,CAAU,QAAV,EAAoB;UAAEC,OAAO,EAAE;QAAX,CAApB,CAAd;QACA,wBAAKC,QAAL,kEAAeC,aAAf,CAA6BJ,KAA7B;MACD,CAPH;MASArB,MAAK0B,KAAL;IACD,CAxI4C;IAAAzB,0DA0InC,YAAM;MACdD,MAAKI,KAAL,CAAWM,MAAX,GAAoBV,MAAK0B,KAAL,EAApB,GAAmC1B,MAAK2B,IAAL,EAAnC;IACD,CA5I4C;IAAA1B,0DA8InC,YAAM;MAAA;MACd,IAAMoB,KAAK,GAAG,IAAIC,KAAJ,CAAU,OAAV,CAAd;MACA,yBAAKE,QAAL,oEAAeC,aAAf,CAA6BJ,KAA7B;IACD,CAjJ4C;IAAApB,yDAmJpC,YAAM;MAAA;MACbD,MAAK0B,KAAL;MACA,IAAML,KAAK,GAAG,IAAIC,KAAJ,CAAU,MAAV,CAAd;MACA,yBAAKE,QAAL,oEAAeC,aAAf,CAA6BJ,KAA7B;IACD,CAvJ4C;IAAApB,qEA+KxB,UAACiB,KAAD,EAAgD;MAAA;MAAA,IAApBU,QAAoB,uEAAT,IAAS;MACnE,IACEV,KAAK,KAAK9B,SAAV,IACA8B,KAAK,GAAG,CADR,IAEAA,KAAK,GAAG,kDAAClB,MAAKI,KAAL,CAAW1B,OAAZ,yDAACmD,qBAAoBjD,MAArB,yEAA+B,CAA/B,IAAoC,CAH9C,EAIE;QACA;MACD;MAED,IAAME,MAAM,2BAAGkB,MAAKI,KAAL,CAAW1B,OAAd,yDAAGoD,qBAAqBZ,KAArB,CAAf;MAEA,IAAIpC,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEE,QAAZ,EAAsB;QACpB;MACD;MAED4C,QAAQ,IAAI5B,MAAKa,eAAL,CAAqBK,KAArB,CAAZ;MAEAlB,MAAKS,QAAL,CAAc,UAACsB,SAAD;QAAA;UACZ;UACAA,SAAS,CAACpB,kBAAV,KAAiCO,KAAjC,GACI;YACEP,kBAAkB,EAAEO;UADtB,CADJ,GAII;QAAA;MANQ,CAAd;IAQD,CAxM4C;IAAAjB,8DA0M/B,UAAC+B,IAAD,EAA2B;MACvC,IAAQrB,kBAAR,GAA+BX,MAAKI,KAApC,CAAQO,kBAAR;MACA,IAAIO,KAAK,GAAGP,kBAAZ;MAEA,IAAIqB,IAAI,KAAK,MAAb,EAAqB;QACnB,IAAMC,SAAS,GAAGxD,cAAc,CAACuB,MAAKI,KAAL,CAAW1B,OAAZ,EAAqBwC,KAArB,CAAhC;QACAA,KAAK,GAAGe,SAAS,KAAK,CAAC,CAAf,GAAmBxD,cAAc,CAACuB,MAAKI,KAAL,CAAW1B,OAAZ,CAAjC,GAAwDuD,SAAhE,CAFmB,CAEwD;MAC5E,CAHD,MAGO,IAAID,IAAI,KAAK,MAAb,EAAqB;QAC1B,IAAME,WAAW,GAAGjD,eAAe,CAACe,MAAKI,KAAL,CAAW1B,OAAZ,EAAqBwC,KAArB,CAAnC;QACAA,KAAK,GACHgB,WAAW,KAAK,CAAC,CAAjB,GAAqBjD,eAAe,CAACe,MAAKI,KAAL,CAAW1B,OAAZ,CAApC,GAA2DwD,WAD7D,CAF0B,CAGgD;MAC3E;;MAEDlC,MAAKmC,kBAAL,CAAwBjB,KAAxB;IACD,CAxN4C;IAAAjB,oEA0NN,UAACmC,CAAD,EAAsC;MAAA;MAC3EpC,MAAKmC,kBAAL,CACEE,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,0BACEJ,CAAC,CAACK,aAAF,CAAgBC,UADlB,0DACEC,sBAA4BC,QAD9B,EAEER,CAAC,CAACK,aAFJ,CADF,EAKE,KALF;IAOD,CAlO4C;IAAAxC,mEAoOP,UAACmC,CAAD,EAAsC;MAC1EA,CAAC,CAACS,cAAF;IACD,CAtO4C;IAAA5C,oEAwON,UAACmC,CAAD,EAAsC;MAAA;MAC3E,IAAMlB,KAAK,GAAGmB,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,2BACZJ,CAAC,CAACK,aAAF,CAAgBC,UADJ,2DACZI,uBAA4BF,QADhB,EAEZR,CAAC,CAACK,aAFU,CAAd;MAIA,IAAM3D,MAAM,2BAAGkB,MAAKI,KAAL,CAAW1B,OAAd,yDAAGqE,qBAAqB7B,KAArB,CAAf;MAEA,IAAIpC,MAAM,IAAI,CAACA,MAAM,CAACE,QAAtB,EAAgC;QAC9BgB,MAAKgD,aAAL;MACD;IACF,CAlP4C;IAAA/C,qEAoPxB,YAAM;MACzBD,MAAKS,QAAL,CAAc;QAAEE,kBAAkB,EAAE,CAAC;MAAvB,CAAd;IACD,CAtP4C;IAAAV,kEAwP3B,UAACgD,GAAD,EAAiB;MAAA;MACjC,IAAMC,SAAS,GAAGlD,MAAKG,aAAL,GAAqB8C,GAAvC;MAEA,IAAME,WAAW,2BAAGnD,MAAKI,KAAL,CAAW1B,OAAd,yDAAG0E,qBAAoBvE,SAApB,CAA8B,UAACC,MAAD,EAAY;QAC5D,OAAOA,MAAM,CAACuE,KAAP,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,SAApC,CAAP;MACD,CAFmB,CAApB;MAIA,IAAIC,WAAW,KAAK/D,SAAhB,IAA6B+D,WAAW,GAAG,CAAC,CAAhD,EAAmD;QACjDnD,MAAKmC,kBAAL,CAAwBgB,WAAxB;MACD;MAEDnD,MAAKG,aAAL,GAAqB+C,SAArB;IACD,CApQ4C;IAAAjD,+DA0Q9B,UAACmC,CAAD,EAA2C;MAAA;MACxD,6BAAIpC,MAAKwD,YAAL,CAAkBC,OAAtB,kDAAIC,sBAA2BC,QAA3B,CAAoCvB,CAAC,CAACwB,MAAtC,CAAJ,EAA2D;QACzDxB,CAAC,CAACS,cAAF;MACD;IACF,CA9Q4C;IAAA5C,uEAgRuB,UAACmC,CAAD,EAAO;MACzE,IAAMyB,sBAAsB,GAAG7D,MAAK8D,iBAAL,CAC7B9D,MAAKI,KAAL,CAAW1B,OADkB,EAE7B0D,CAAC,CAACK,aAAF,CAAgB/C,KAFa,CAA/B;MAKA,IAAIM,MAAKI,KAAL,CAAWC,mBAAX,KAAmCwD,sBAAvC,EAA+D;QAAA;QAC7D,IAAI,CAAC7D,MAAK+D,mBAAV,EAA+B;UAC7B/D,MAAKS,QAAL,CAAc;YACZJ,mBAAmB,EAAEwD;UADT,CAAd;QAGD;QACD,6CAAK/D,KAAL,EAAWkE,QAAX,gGAAsB5B,CAAtB;MACD;IACF,CA9R4C;IAAAnC,gEAgSe,UAACmC,CAAD,EAAO;MACjE,IAAIpC,MAAKF,KAAL,CAAWmE,aAAf,EAA8B;QAC5B,IAAMvF,QAAO,GAAGsB,MAAKF,KAAL,CAAWmE,aAAX,CAAyB7B,CAAzB,EAA4BpC,MAAKF,KAAL,CAAWpB,OAAvC,CAAhB;QACA,IAAIA,QAAJ,EAAa;UACX,IAAIwF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;YAC1C/E,IAAI,CACF,6EACE,+GAFA,CAAJ;UAID;UACDW,MAAKS,QAAL,CAAc;YACZ/B,OAAO,EAAPA,QADY;YAEZ2B,mBAAmB,EAAEL,MAAK8D,iBAAL,CACnBpF,QADmB,EAEnBsB,MAAKI,KAAL,CAAWgB,iBAFQ,CAFT;YAMZd,UAAU,EAAE8B,CAAC,CAACwB,MAAF,CAASlE;UANT,CAAd;QAQD,CAfD,MAeO;UACLM,MAAKS,QAAL,CAAc;YAAEH,UAAU,EAAE8B,CAAC,CAACwB,MAAF,CAASlE;UAAvB,CAAd;QACD;MACF,CApBD,MAoBO;QACL,IAAMhB,SAAO,GAAGsB,MAAKQ,MAAL,CACdR,MAAKF,KAAL,CAAWpB,OADG,EAEd0D,CAAC,CAACwB,MAAF,CAASlE,KAFK,EAGdM,MAAKF,KAAL,CAAWS,QAHG,CAAhB;QAKAP,MAAKS,QAAL,CAAc;UACZ/B,OAAO,EAAPA,SADY;UAEZ2B,mBAAmB,EAAEL,MAAK8D,iBAAL,CACnBpF,SADmB,EAEnBsB,MAAKI,KAAL,CAAWgB,iBAFQ,CAFT;UAMZd,UAAU,EAAE8B,CAAC,CAACwB,MAAF,CAASlE;QANT,CAAd;MAQD;IACF,CApU4C;IAAAO,iEAsUkB,UAACoB,KAAD,EAAW;MACxE,CAAC,SAAD,EAAY,WAAZ,EAAyB,QAAzB,EAAmC,OAAnC,EAA4CkC,QAA5C,CAAqDlC,KAAK,CAAC4B,GAA3D,KACEjD,MAAKqE,eADP,IAEEhD,KAAK,CAACwB,cAAN,EAFF;MAIA,QAAQxB,KAAK,CAAC4B,GAAd;QACE,KAAK,SAAL;UACEjD,MAAKqE,eAAL,IAAwBrE,MAAKsE,WAAL,CAAiB,MAAjB,CAAxB;UACA;QACF,KAAK,WAAL;UACEtE,MAAKqE,eAAL,IAAwBrE,MAAKsE,WAAL,CAAiB,MAAjB,CAAxB;UACA;QACF,KAAK,QAAL;UACEtE,MAAK0B,KAAL;UACA;QACF,KAAK,OAAL;UACE1B,MAAKqE,eAAL,IAAwBrE,MAAKgD,aAAL,EAAxB;UACA;MAAA;IAEL,CAzV4C;IAAA/C,sEA2VvB,UAACoB,KAAD,EAAgC;MACpD,IAAQX,MAAR,GAAmBV,MAAKI,KAAxB,CAAQM,MAAR;MAEA,IAAIW,KAAK,CAAC4B,GAAN,CAAUrE,MAAV,KAAqB,CAArB,IAA0ByC,KAAK,CAAC4B,GAAN,KAAc,GAA5C,EAAiD;QAC/CjD,MAAKuE,eAAL,CAAqBlD,KAAK,CAAC4B,GAA3B;QACA;MACD;MAED,CAAC,SAAD,EAAY,WAAZ,EAAyB,QAAzB,EAAmC,OAAnC,EAA4CM,QAA5C,CAAqDlC,KAAK,CAAC4B,GAA3D,KACEjD,MAAKqE,eADP,IAEEhD,KAAK,CAACwB,cAAN,EAFF;MAIA,QAAQxB,KAAK,CAAC4B,GAAd;QACE,KAAK,SAAL;UACE,IAAIvC,MAAJ,EAAY;YACVV,MAAKqE,eAAL,IAAwBrE,MAAKsE,WAAL,CAAiB,MAAjB,CAAxB;UACD,CAFD,MAEO;YACLtE,MAAK2B,IAAL;UACD;UACD;QACF,KAAK,WAAL;UACE,IAAIjB,MAAJ,EAAY;YACVV,MAAKqE,eAAL,IAAwBrE,MAAKsE,WAAL,CAAiB,MAAjB,CAAxB;UACD,CAFD,MAEO;YACLtE,MAAK2B,IAAL;UACD;UACD;QACF,KAAK,QAAL;UACE3B,MAAK0B,KAAL;UACA;QACF,KAAK,OAAL;QACA,KAAK,UAAL;QACA,KAAK,GAAL;UACE,IAAIhB,MAAJ,EAAY;YACVV,MAAKqE,eAAL,IAAwBrE,MAAKgD,aAAL,EAAxB;UACD,CAFD,MAEO;YACLhD,MAAK2B,IAAL;UACD;UACD;MAAA;IAEL,CAnY4C;IAAA1B,8DAqY/BvC,QAAQ,CAACsC,MAAKe,kBAAN,EAA0B,IAA1B,CArYuB;IAAAd,+DAsa9B,UAACnB,MAAD,EAAsCoC,KAAtC,EAAwD;MACrE,mBAAoDlB,MAAKI,KAAzD;QAAQO,kBAAR,gBAAQA,kBAAR;QAA4BN,mBAA5B,gBAA4BA,mBAA5B;MACA,IAAQmE,YAAR,GAAyBxE,MAAKF,KAA9B,CAAQ0E,YAAR;MACA,IAAMC,OAAO,GAAGvD,KAAK,KAAKP,kBAA1B;MACA,IAAM+D,QAAQ,GAAGxD,KAAK,KAAKb,mBAA3B;MAEA,OACEsE,oBAACnH,KAAD,CAAOoH,QAAP;QAAgB3B,GAAG,YAAKnE,MAAM,CAACY,KAAZ;MAAnB,GACG8E,YAAY,CAAE;QACb1F,MAAM,EAANA,MADa;QAEb2F,OAAO,EAAPA,OAFa;QAGb7B,QAAQ,EAAE9D,MAAM,CAACuE,KAHJ;QAIbqB,QAAQ,EAARA,QAJa;QAKb1F,QAAQ,EAAEF,MAAM,CAACE,QALJ;QAMb6F,OAAO,EAAE7E,MAAK8E,iBAND;QAObC,WAAW,EAAE/E,MAAKgF,gBAPL;QAQb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAC,WAAW,EAAEjF,MAAKkF;MAhBL,CAAF,CADf,CADF;IAsBD,CAlc4C;IAAAjF,4DAocjC,UAACkF,OAAD,EAAgC;MAC1CnF,MAAKwB,QAAL,GAAgB2D,OAAhB;MACA,IAAInF,MAAKF,KAAL,CAAWsF,MAAf,EAAuB;QACrBzH,MAAM,CAACwH,OAAD,EAAUnF,MAAKF,KAAL,CAAWsF,MAArB,CAAN;MACD;IACF,CAzc4C;IAAAnF,oEA2czB,UAACoF,SAAD,EAA2B;MAC7CrF,MAAKS,QAAL,CAAc;QAAA,OAAO;UACnB6E,eAAe,EAAED;QADE,CAAP;MAAA,CAAd;IAGD,CA/c4C;IAG3C,IAAQ3F,KAAR,GAAgCI,KAAhC,CAAQJ,KAAR;MAAe6F,YAAf,GAAgCzF,KAAhC,CAAeyF,YAAf;IAEA,IAAMC,YAAY,GAAG9F,KAAK,KAAKN,SAAV,GAAsBM,KAAtB,GAA8B6F,YAAnD;IAEAvF,MAAKG,aAAL,GAAqB,EAArB;IAEA,IAAI+D,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;MAC1C9E,qBAAqB,CAACQ,KAAK,CAACpB,OAAP,CAArB;IACD;IAEDsB,MAAKI,KAAL,GAAa;MACXM,MAAM,EAAE,KADG;MAEXC,kBAAkB,EAAE,CAAC,CAFV;MAGXN,mBAAmB,EAAEL,MAAK8D,iBAAL,CAAuBhE,KAAK,CAACpB,OAA7B,EAAsC8G,YAAtC,CAHV;MAIXpE,iBAAiB,EAAEoE,YAJR;MAKX9G,OAAO,EAAEoB,KAAK,CAACpB,OALJ;MAMX4B,UAAU,EAAE;IAND,CAAb;IASA,IAAIR,KAAK,CAACJ,KAAN,KAAgBN,SAApB,EAA+B;MAC7BY,MAAK+D,mBAAL,GAA2B,IAA3B;IACD;IAxB0C;EAyB5C;;;SAwBD,eAAsB;MACpB,OAAO,KAAKP,YAAL,CAAkBC,OAAlB,KAA8B,IAArC;IACD;;;WAYD,2BACE/E,OADF,EAEEgB,KAFF,EAGE;MAAA;MACA,6BACEhB,OADF,aACEA,OADF,uBACEA,OAAO,CAAEG,SAAT,CAAmB,UAACY,IAAD,EAAU;QAC3BC,KAAK,GAAG,OAAOD,IAAI,CAACC,KAAZ,KAAsB,QAAtB,GAAiC+F,MAAM,CAAC/F,KAAD,CAAvC,GAAiDA,KAAzD;QACA,OAAOD,IAAI,CAACC,KAAL,KAAeA,KAAtB;MACD,CAHD,CADF,mEAIQ,CAAC,CAJT;IAMD;;;WAkCD,sBAAqBwB,KAArB,EAAoC;MAAA;MAClC,OAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,sDAAI,KAAKd,KAAL,CAAW1B,OAAf,yDAAIgH,qBAAoB9G,MAAxB,2EAAkC,CAAlC,CAA1B;IACD;;;WA4CD,yBAAwBsC,KAAxB,EAAuD;MAAA,IAAhByE,MAAgB,uEAAP,KAAO;MACrD,IAAMC,QAAQ,GAAG,KAAKpC,YAAL,CAAkBC,OAAnC;MACA,IAAMhE,IAAI,GAAGmG,QAAQ,GAAIA,QAAQ,CAAChD,QAAT,CAAkB1B,KAAlB,CAAJ,GAA+C,IAApE;MAEA,IAAI,CAACzB,IAAD,IAAS,CAACmG,QAAd,EAAwB;QACtB;MACD;MAED,IAAMC,cAAc,GAAGD,QAAQ,CAACE,YAAhC;MACA,IAAMC,SAAS,GAAGH,QAAQ,CAACG,SAA3B;MACA,IAAMC,OAAO,GAAGvG,IAAI,CAACwG,SAArB;MACA,IAAMC,UAAU,GAAGzG,IAAI,CAACqG,YAAxB;MAEA,IAAIH,MAAJ,EAAY;QACVC,QAAQ,CAACG,SAAT,GAAqBC,OAAO,GAAGH,cAAc,GAAG,CAA3B,GAA+BK,UAAU,GAAG,CAAjE;MACD,CAFD,MAEO,IAAIF,OAAO,GAAGE,UAAV,GAAuBL,cAAc,GAAGE,SAA5C,EAAuD;QAC5DH,QAAQ,CAACG,SAAT,GAAqBC,OAAO,GAAGH,cAAV,GAA2BK,UAAhD;MACD,CAFM,MAEA,IAAIF,OAAO,GAAGD,SAAd,EAAyB;QAC9BH,QAAQ,CAACG,SAAT,GAAqBC,OAArB;MACD;IACF;;;WA0ND,4BAAmBG,SAAnB,EAAiD;MAC/C;MACA,IACE,CAAC5H,EAAE,CAAC4H,SAAS,CAACzG,KAAX,EAAkB,KAAKI,KAAL,CAAWJ,KAA7B,CAAH,IACAyG,SAAS,CAACzH,OAAV,KAAsB,KAAKoB,KAAL,CAAWpB,OAFnC,EAGE;QACA,IAAIwF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;UAC1C9E,qBAAqB,CAAC,KAAKQ,KAAL,CAAWpB,OAAZ,CAArB;QACD;QAED,KAAKqF,mBAAL,GAA2B,KAAKjE,KAAL,CAAWJ,KAAX,KAAqBN,SAAhD;QACA,IAAMM,MAAK,GACT,KAAKI,KAAL,CAAWJ,KAAX,KAAqBN,SAArB,GACI,KAAKgB,KAAL,CAAWgB,iBADf,GAEI,KAAKtB,KAAL,CAAWJ,KAHjB;QAIA,IAAMhB,SAAO,GACX,KAAKoB,KAAL,CAAWsG,UAAX,IAAyB,KAAKhG,KAAL,CAAWE,UAAX,KAA0BlB,SAAnD,GACI,KAAKoB,MAAL,CACE,KAAKV,KAAL,CAAWpB,OADb,EAEE,KAAK0B,KAAL,CAAWE,UAFb,EAGE,KAAKR,KAAL,CAAWS,QAHb,CADJ,GAMI,KAAKT,KAAL,CAAWpB,OAPjB;QAQA,KAAK+B,QAAL,CAAc;UACZW,iBAAiB,EAAE1B,MADP;UAEZW,mBAAmB,EAAE,KAAKyD,iBAAL,CAAuBpF,SAAvB,EAAgCgB,MAAhC,CAFT;UAGZhB,OAAO,EAAPA;QAHY,CAAd;MAKD;IACF;;;WA6CD,kBAAS;MAAA;MACP,mBAA6D,KAAK0B,KAAlE;QAAQM,MAAR,gBAAQA,MAAR;QAAgBU,iBAAhB,gBAAgBA,iBAAhB;QAA4CiF,YAA5C,gBAAmC3H,OAAnC;MACA,mBA6BI,KAAKoB,KA7BT;QACEsG,UADF,gBACEA,UADF;QAEEE,IAFF,gBAEEA,IAFF;QAGEC,SAHF,gBAGEA,SAHF;QAIEnB,MAJF,gBAIEA,MAJF;QAKEoB,UALF,gBAKEA,UALF;QAMEC,cANF,gBAMEA,cANF;QAOE/H,OAPF,gBAOEA,OAPF;QAQEgI,KARF,gBAQEA,KARF;QASEC,QATF,gBASEA,QATF;QAUEC,KAVF,gBAUEA,KAVF;QAWE5C,QAXF,gBAWEA,QAXF;QAYE6C,MAZF,gBAYEA,MAZF;QAaEC,OAbF,gBAaEA,OAbF;QAcEjC,OAdF,gBAcEA,OAdF;QAeEL,YAfF,gBAeEA,YAfF;QAgBE5B,QAhBF,gBAgBEA,QAhBF;QAiBEmE,SAjBF,gBAiBEA,SAjBF;QAkBE9C,aAlBF,gBAkBEA,aAlBF;QAmBE1D,QAnBF,gBAmBEA,QAnBF;QAoBEyG,cApBF,gBAoBEA,cApBF;QAqBElG,MArBF,gBAqBEA,MArBF;QAsBEE,OAtBF,gBAsBEA,OAtBF;QAuBEiG,QAvBF,gBAuBEA,QAvBF;QAwBEC,IAxBF,gBAwBEA,IAxBF;QAyBEC,sBAzBF,gBAyBEA,sBAzBF;QA0BEC,gBA1BF,gBA0BEA,gBA1BF;QA2BEC,mBA3BF,gBA2BEA,mBA3BF;QA4BKC,SA5BL;MA8BA,IAAM5C,QAAQ,GAAG,KAAK6C,eAAL,EAAjB;MACA,IAAMlE,KAAK,GAAGqB,QAAQ,GAAGA,QAAQ,CAACrB,KAAZ,GAAoBjE,SAA1C;MAEA,IAAMoI,sBAAsB,GAC1BnB,YAAY,KAAKjH,SAAjB,IAA8BiH,YAAY,CAACzH,MAAb,GAAsB,CAApD,GACEyH,YAAY,CAAC7G,GAAb,CAAiB,KAAKgF,YAAtB,CADF,GAGEG,oBAACvG,OAAD;QAASqJ,SAAS,EAAC;MAAnB,GACG,KAAK3H,KAAL,CAAWiH,SADd,CAJJ;MASA,IAAIW,eAAJ;MAEA,IAAI,OAAOV,cAAP,KAA0B,UAA9B,EAA0C;QACxCU,eAAe,GAAGV,cAAc,CAAC;UAAEQ,sBAAsB,EAAtBA;QAAF,CAAD,CAAhC;MACD,CAFD,MAEO;QACLE,eAAe,GAAGF,sBAAlB;MACD;MAED,IAAMG,oBAAoB,4BAAG,KAAKvH,KAAL,CAAWkF,eAAd,0DAAGsC,sBAA4BrE,QAA5B,CAAqC,KAArC,CAA7B;MAEA,OACEoB;QACE8C,SAAS,EAAExJ,YAAY,CAAC,cAAD,EAAiB0I,QAAjB,CADzB;QAEEJ,SAAS,EAAEA,SAFb;QAGEK,KAAK,EAAEA,KAHT;QAIEiB,GAAG,EAAEjK,QAAQ,CAAC,KAAKkK,YAAN,EAAoBtB,UAApB,CAJf;QAKE3B,OAAO,EAAE,KAAKkD;MALhB,GAOGrH,MAAM,IAAI0F,UAAV,GACCzB,oBAACzG,KAAD,eACMoJ,SADN;QAEEU,SAAS,MAFX;QAGEnB,MAAM,EAAE,KAAKA,MAHf;QAIEY,SAAS,EAAE5J,UAAU,CAAC;UACpBoK,kBAAkB,EAAEvH,MADA;UAEpB,yCAAyCiH,oBAFrB;UAGpB,oCACGR,sBAAD,GAAqC;QAJnB,CAAD,CAJvB;QAUEzH,KAAK,EAAE,KAAKU,KAAL,CAAWE,UAVpB;QAWE4H,SAAS,EAAE,KAAKC,cAXlB;QAYEnE,QAAQ,EAAE,KAAKC,aAZjB,CAaE;QACA;QACA;QAAA;;QACAY,OAAO,EAAEA,OAhBX;QAiBEuD,KAAK,EAAElB,IAjBT;QAkBEmB,WAAW,EAAEf,SAAS,CAACe;MAlBzB,GADD,GAsBC1D,oBAAClH,aAAD,eACM6J,SADN;QAEE,eAAa,IAFf;QAGEzC,OAAO,EAAE,KAAKA,OAHhB;QAIEqD,SAAS,EAAE,KAAKI,mBAJlB;QAKEC,OAAO,EAAE,KAAKC,WALhB;QAME1B,OAAO,EAAE,KAAKA,OANhB;QAOED,MAAM,EAAE,KAAKA,MAPf;QAQEY,SAAS,EAAE5J,UAAU,CAAC;UACpBoK,kBAAkB,EAAEvH,MADA;UAEpB,yCAAyCiH,oBAFrB;UAGpB,oCACGR,sBAAD,GAAqC;QAJnB,CAAD,CARvB;QAcEiB,KAAK,EAAElB;MAdT,IAgBG7D,KAhBH,CA7BJ,EAgDEsB;QACEkD,GAAG,EAAE,KAAKY,SADZ;QAEEnC,IAAI,EAAEA,IAFR;QAGEtC,QAAQ,EAAE,KAAK0E,oBAHjB;QAIE7B,MAAM,EAAEA,MAJV;QAKEC,OAAO,EAAEA,OALX;QAMEjC,OAAO,EAAEA,OANX;QAOEnF,KAAK,EAAE0B,iBAPT;QAQE,eAAa,IARf;QASEqG,SAAS,EAAC;MATZ,GAWG/I,OAAO,CAACc,GAAR,CAAY,UAACC,IAAD;QAAA,OACXkF;UAAQ1B,GAAG,YAAKxD,IAAI,CAACC,KAAV,CAAX;UAA8BA,KAAK,EAAED,IAAI,CAACC;QAA1C,EADW;MAAA,CAAZ,CAXH,CAhDF,EA+DGgB,MAAM,IACLiE,oBAACnG,oBAAD;QACEmK,SAAS,EAAE,KAAKb,YADlB;QAEEzC,SAAS,EAAEoB,cAFb;QAGEjD,YAAY,EAAE,KAAKA,YAHrB;QAIEoF,iBAAiB,EAAE,KAAKA,iBAJ1B;QAKEC,YAAY,EAAE,KAAKC,kBALrB;QAME7B,QAAQ,EAAEA,QANZ;QAOE8B,cAAc,EAAE5B,sBAPlB;QAQE6B,SAAS,EAAE5B,gBARb;QASE6B,WAAW,EAAE5B;MATf,GAWGK,eAXH,CAhEJ,CADF;IAiFD;;;EA1mBwBlK,KAAK,CAAC0L,S,GA6mBjC;;gBA7mBMrJ,Y,kBAI8C;EAChDuG,UAAU,EAAE,KADoC;EAEhD5B,YAFgD,+BAEI;IAAA,IAArC1F,MAAqC,SAArCA,MAAqC;MAA1BgB,KAA0B;IAClD,OAAO6E,oBAAC3G,kBAAD,EAAwB8B,KAAxB,CAAP;EACD,CAJ+C;EAKhDpB,OAAO,EAAE,EALuC;EAMhDqI,SAAS,EAAE,mBANqC;EAOhDxG,QAAQ,EAAEjC,eAPsC;EAQhD4I,IAAI,EAAEvC,oBAACxG,YAAD,OAR0C;EAShDgJ,sBAAsB,EAAE,CATwB;EAUhDC,gBAAgB,EAAE,IAV8B;EAWhD+B,UAAU,EAAEvJ,UAAU,CAACwJ;AAXyB,C;AA0mBpD,eAAerL,YAAY,CACzBD,cAAc,CAAC+B,YAAD,EAAe;EAC3B6G,KAAK,EAAE;AADoB,CAAf,CADW,CAA3B","names":["React","SelectMimicry","debounce","setRef","multiRef","classNames","withAdaptivity","withPlatform","CustomSelectOption","getClassName","Input","DropdownIcon","Caption","warnOnce","defaultFilterFn","is","CustomSelectDropdown","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","undefined","warn","checkOptionsValueType","Set","map","item","value","size","SelectType","CustomSelect","props","_classCallCheck","_this","_defineProperty","createRef","keyboardInput","state","selectedOptionIndex","inputValue","filterFn","filter","setState","opened","focusedOptionIndex","isValidIndex","scrollToElement","onOpen","resetKeyboardInput","onClose","select","index","_this$state$options","nativeSelectValue","event","Event","bubbles","selectEl","dispatchEvent","close","open","scrollTo","_this$state$options2","_this$state$options3","prevState","type","nextIndex","beforeIndex","focusOptionByIndex","e","Array","prototype","indexOf","call","currentTarget","parentNode","_e$currentTarget$pare","children","preventDefault","_e$currentTarget$pare2","_this$state$options4","selectFocused","key","fullInput","optionIndex","_this$state$options5","label","toLowerCase","includes","scrollBoxRef","current","_this$scrollBoxRef$cu","contains","target","newSelectedOptionIndex","findSelectedIndex","isControlledOutside","onChange","onInputChange","process","env","NODE_ENV","areOptionsShown","focusOption","onKeyboardInput","renderOption","hovered","selected","createScopedElement","Fragment","onClick","handleOptionClick","onMouseDown","handleOptionDown","onMouseOver","handleOptionHover","element","getRef","placement","popperPlacement","defaultValue","initialValue","Number","_this$state$options6","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","prevProps","searchable","stateOptions","name","className","getRootRef","popupDirection","sizeY","platform","style","onBlur","onFocus","emptyText","renderDropdown","fetching","icon","dropdownOffsetDistance","fixDropdownWidth","forceDropdownPortal","restProps","getSelectedItem","defaultDropdownContent","vkuiClass","resolvedContent","isPopperDirectionTop","_this$state$popperPla","ref","containerRef","onLabelClick","autoFocus","CustomSelect__open","onKeyDown","onInputKeyDown","after","placeholder","handleKeyDownSelect","onKeyUp","handleKeyUp","selectRef","onNativeSelectChange","targetRef","onPlacementChange","onMouseLeave","resetFocusedOption","offsetDistance","sameWidth","forcePortal","Component","selectType","Default"],"sources":["C:\\Users\\zpili\\Desktop\\Finbox-VK-mini-apps\\mini-app\\node_modules\\@vkontakte\\vkui\\src\\components\\CustomSelect\\CustomSelect.tsx"],"sourcesContent":["import * as React from \"react\";\nimport SelectMimicry from \"../SelectMimicry/SelectMimicry\";\nimport { debounce, setRef, multiRef } from \"../../lib/utils\";\nimport { classNames } from \"../../lib/classNames\";\nimport { NativeSelectProps } from \"../NativeSelect/NativeSelect\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport CustomSelectOption, {\n  CustomSelectOptionProps,\n} from \"../CustomSelectOption/CustomSelectOption\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { FormFieldProps } from \"../FormField/FormField\";\nimport { HasPlatform } from \"../../types\";\nimport Input from \"../Input/Input\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { defaultFilterFn } from \"../../lib/select\";\nimport { is } from \"../../lib/is\";\nimport { Placement } from \"../Popper/Popper\";\nimport { CustomSelectDropdown } from \"../CustomSelectDropdown/CustomSelectDropdown\";\nimport \"./CustomSelect.css\";\n\nconst findIndexAfter = (\n  options: CustomSelectOptionInterface[] = [],\n  startIndex = -1\n) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length\n) => {\n  let result = -1;\n  if (options === undefined || endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce(\"CustomSelect\");\n\nconst checkOptionsValueType = (options: CustomSelectOptionInterface[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      \"Some values of your options have different types. CustomSelect onChange always returns a string type.\"\n    );\n  }\n};\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>[\"value\"];\n\nexport enum SelectType {\n  Default = \"default\",\n  Plain = \"plain\",\n}\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\ninterface CustomSelectState {\n  inputValue?: string;\n  opened?: boolean;\n  focusedOptionIndex?: number;\n  selectedOptionIndex?: number;\n  nativeSelectValue?: SelectValue;\n  options?: CustomSelectOptionInterface[];\n  popperPlacement?: Placement;\n}\n\nexport interface CustomSelectProps\n  extends NativeSelectProps,\n    HasPlatform,\n    FormFieldProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`\n   */\n  emptyText?: string;\n  onInputChange?: (\n    e: React.ChangeEvent,\n    options: CustomSelectOptionInterface[]\n  ) => void | CustomSelectOptionInterface[];\n  options: Array<{\n    value: SelectValue;\n    label: string;\n    [index: string]: any;\n  }>;\n  /**\n   * Функция для кастомной фильтрации. По-умолчанию поиск производится по option.label.\n   */\n  filterFn?:\n    | false\n    | ((\n        value: string,\n        option: CustomSelectOptionInterface,\n        getOptionLabel?: (\n          option: Partial<CustomSelectOptionInterface>\n        ) => string\n      ) => boolean);\n  popupDirection?: \"top\" | \"bottom\";\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](#/CustomSelectOption?id=props)\n   */\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В defaultDropdownContent содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если true, то в дропдауне вместо списка опций рисуется спиннер. При переданных renderDropdown и fetching: true,\n   * \"победит\" renderDropdown\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  icon?: React.ReactNode;\n  dropdownOffsetDistance?: number;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\nclass CustomSelect extends React.Component<\n  CustomSelectProps,\n  CustomSelectState\n> {\n  static defaultProps: Partial<CustomSelectProps> = {\n    searchable: false,\n    renderOption({ option, ...props }): React.ReactNode {\n      return <CustomSelectOption {...props} />;\n    },\n    options: [],\n    emptyText: \"Ничего не найдено\",\n    filterFn: defaultFilterFn,\n    icon: <DropdownIcon />,\n    dropdownOffsetDistance: 0,\n    fixDropdownWidth: true,\n    selectType: SelectType.Default,\n  };\n\n  public constructor(props: CustomSelectProps) {\n    super(props);\n\n    const { value, defaultValue } = props;\n\n    const initialValue = value !== undefined ? value : defaultValue;\n\n    this.keyboardInput = \"\";\n\n    if (process.env.NODE_ENV === \"development\") {\n      checkOptionsValueType(props.options);\n    }\n\n    this.state = {\n      opened: false,\n      focusedOptionIndex: -1,\n      selectedOptionIndex: this.findSelectedIndex(props.options, initialValue),\n      nativeSelectValue: initialValue,\n      options: props.options,\n      inputValue: \"\",\n    };\n\n    if (props.value !== undefined) {\n      this.isControlledOutside = true;\n    }\n  }\n\n  private keyboardInput: string;\n  private isControlledOutside = false;\n  private selectEl: HTMLSelectElement | null = null;\n  private readonly scrollBoxRef = React.createRef<HTMLDivElement>();\n  private readonly containerRef = React.createRef<HTMLLabelElement>();\n\n  private readonly resetKeyboardInput = () => {\n    this.keyboardInput = \"\";\n  };\n\n  private readonly getSelectedItem = () => {\n    const { selectedOptionIndex, options } = this.state;\n\n    if (!options?.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined\n      ? options[selectedOptionIndex]\n      : undefined;\n  };\n\n  get areOptionsShown() {\n    return this.scrollBoxRef.current !== null;\n  }\n\n  filter = (\n    options: CustomSelectProps[\"options\"],\n    inputValue: string,\n    filterFn: CustomSelectProps[\"filterFn\"]\n  ) => {\n    return typeof filterFn === \"function\"\n      ? options.filter((option) => filterFn(inputValue, option))\n      : options;\n  };\n\n  findSelectedIndex(\n    options: CustomSelectOptionInterface[] | undefined,\n    value: SelectValue\n  ) {\n    return (\n      options?.findIndex((item) => {\n        value = typeof item.value === \"number\" ? Number(value) : value;\n        return item.value === value;\n      }) ?? -1\n    );\n  }\n\n  open = () => {\n    this.setState(\n      ({ selectedOptionIndex }) => ({\n        opened: true,\n        focusedOptionIndex: selectedOptionIndex,\n      }),\n      () => {\n        const { selectedOptionIndex } = this.state;\n\n        if (\n          selectedOptionIndex !== undefined &&\n          this.isValidIndex(selectedOptionIndex)\n        ) {\n          this.scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    );\n    typeof this.props.onOpen === \"function\" && this.props.onOpen();\n  };\n\n  close = () => {\n    this.resetKeyboardInput();\n\n    this.setState(() => ({\n      inputValue: \"\",\n      opened: false,\n      focusedOptionIndex: -1,\n      options: this.props.options,\n    }));\n    typeof this.props.onClose === \"function\" && this.props.onClose();\n  };\n\n  private isValidIndex(index: number) {\n    return index >= 0 && index < (this.state.options?.length ?? 0);\n  }\n\n  selectFocused = () => {\n    const { focusedOptionIndex } = this.state;\n\n    if (focusedOptionIndex !== undefined) {\n      this.select(focusedOptionIndex);\n    }\n  };\n\n  select = (index: number) => {\n    if (!this.isValidIndex(index)) {\n      return;\n    }\n\n    const item = this.state.options?.[index];\n\n    this.setState(\n      {\n        nativeSelectValue: item?.value,\n      },\n      () => {\n        const event = new Event(\"change\", { bubbles: true });\n        this.selectEl?.dispatchEvent(event);\n      }\n    );\n    this.close();\n  };\n\n  onClick = () => {\n    this.state.opened ? this.close() : this.open();\n  };\n\n  onFocus = () => {\n    const event = new Event(\"focus\");\n    this.selectEl?.dispatchEvent(event);\n  };\n\n  onBlur = () => {\n    this.close();\n    const event = new Event(\"blur\");\n    this.selectEl?.dispatchEvent(event);\n  };\n\n  private scrollToElement(index: number, center = false) {\n    const dropdown = this.scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }\n\n  focusOptionByIndex = (index: number | undefined, scrollTo = true) => {\n    if (\n      index === undefined ||\n      index < 0 ||\n      index > (this.state.options?.length ?? 0) - 1\n    ) {\n      return;\n    }\n\n    const option = this.state.options?.[index];\n\n    if (option?.disabled) {\n      return;\n    }\n\n    scrollTo && this.scrollToElement(index);\n\n    this.setState((prevState) =>\n      // Это оптимизация, прежде всего, под `onMouseOver`\n      prevState.focusedOptionIndex !== index\n        ? {\n            focusedOptionIndex: index,\n          }\n        : null\n    );\n  };\n\n  focusOption = (type: \"next\" | \"prev\") => {\n    const { focusedOptionIndex } = this.state;\n    let index = focusedOptionIndex;\n\n    if (type === \"next\") {\n      const nextIndex = findIndexAfter(this.state.options, index);\n      index = nextIndex === -1 ? findIndexAfter(this.state.options) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === \"prev\") {\n      const beforeIndex = findIndexBefore(this.state.options, index);\n      index =\n        beforeIndex === -1 ? findIndexBefore(this.state.options) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    this.focusOptionByIndex(index);\n  };\n\n  handleOptionHover: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    this.focusOptionByIndex(\n      Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget\n      ),\n      false\n    );\n  };\n\n  handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n  };\n\n  handleOptionClick: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n    const index = Array.prototype.indexOf.call(\n      e.currentTarget.parentNode?.children,\n      e.currentTarget\n    );\n    const option = this.state.options?.[index];\n\n    if (option && !option.disabled) {\n      this.selectFocused();\n    }\n  };\n\n  resetFocusedOption = () => {\n    this.setState({ focusedOptionIndex: -1 });\n  };\n\n  onKeyboardInput = (key: string) => {\n    const fullInput = this.keyboardInput + key;\n\n    const optionIndex = this.state.options?.findIndex((option) => {\n      return option.label.toLowerCase().includes(fullInput);\n    });\n\n    if (optionIndex !== undefined && optionIndex > -1) {\n      this.focusOptionByIndex(optionIndex);\n    }\n\n    this.keyboardInput = fullInput;\n  };\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  onLabelClick = (e: React.MouseEvent<HTMLLabelElement>) => {\n    if (this.scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  };\n\n  onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = this.findSelectedIndex(\n      this.state.options,\n      e.currentTarget.value\n    );\n\n    if (this.state.selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!this.isControlledOutside) {\n        this.setState({\n          selectedOptionIndex: newSelectedOptionIndex,\n        });\n      }\n      this.props.onChange?.(e);\n    }\n  };\n\n  onInputChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    if (this.props.onInputChange) {\n      const options = this.props.onInputChange(e, this.props.options);\n      if (options) {\n        if (process.env.NODE_ENV === \"development\") {\n          warn(\n            \"This filtration method is deprecated. Return value of onInputChange will\" +\n              \" be ignored in v5.0.0. For custom filtration please update props.options by yourself or use filterFn property\"\n          );\n        }\n        this.setState({\n          options,\n          selectedOptionIndex: this.findSelectedIndex(\n            options,\n            this.state.nativeSelectValue\n          ),\n          inputValue: e.target.value,\n        });\n      } else {\n        this.setState({ inputValue: e.target.value });\n      }\n    } else {\n      const options = this.filter(\n        this.props.options,\n        e.target.value,\n        this.props.filterFn\n      );\n      this.setState({\n        options,\n        selectedOptionIndex: this.findSelectedIndex(\n          options,\n          this.state.nativeSelectValue\n        ),\n        inputValue: e.target.value,\n      });\n    }\n  };\n\n  onInputKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (event) => {\n    [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) &&\n      this.areOptionsShown &&\n      event.preventDefault();\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        this.areOptionsShown && this.focusOption(\"prev\");\n        break;\n      case \"ArrowDown\":\n        this.areOptionsShown && this.focusOption(\"next\");\n        break;\n      case \"Escape\":\n        this.close();\n        break;\n      case \"Enter\":\n        this.areOptionsShown && this.selectFocused();\n        break;\n    }\n  };\n\n  handleKeyDownSelect = (event: React.KeyboardEvent) => {\n    const { opened } = this.state;\n\n    if (event.key.length === 1 && event.key !== \" \") {\n      this.onKeyboardInput(event.key);\n      return;\n    }\n\n    [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) &&\n      this.areOptionsShown &&\n      event.preventDefault();\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        if (opened) {\n          this.areOptionsShown && this.focusOption(\"prev\");\n        } else {\n          this.open();\n        }\n        break;\n      case \"ArrowDown\":\n        if (opened) {\n          this.areOptionsShown && this.focusOption(\"next\");\n        } else {\n          this.open();\n        }\n        break;\n      case \"Escape\":\n        this.close();\n        break;\n      case \"Enter\":\n      case \"Spacebar\":\n      case \" \":\n        if (opened) {\n          this.areOptionsShown && this.selectFocused();\n        } else {\n          this.open();\n        }\n        break;\n    }\n  };\n\n  handleKeyUp = debounce(this.resetKeyboardInput, 1000);\n\n  componentDidUpdate(prevProps: CustomSelectProps) {\n    // Внутри useEffect и так is, можно убрать\n    if (\n      !is(prevProps.value, this.props.value) ||\n      prevProps.options !== this.props.options\n    ) {\n      if (process.env.NODE_ENV === \"development\") {\n        checkOptionsValueType(this.props.options);\n      }\n\n      this.isControlledOutside = this.props.value !== undefined;\n      const value =\n        this.props.value === undefined\n          ? this.state.nativeSelectValue\n          : this.props.value;\n      const options =\n        this.props.searchable && this.state.inputValue !== undefined\n          ? this.filter(\n              this.props.options,\n              this.state.inputValue,\n              this.props.filterFn\n            )\n          : this.props.options;\n      this.setState({\n        nativeSelectValue: value,\n        selectedOptionIndex: this.findSelectedIndex(options, value),\n        options,\n      });\n    }\n  }\n\n  renderOption = (option: CustomSelectOptionInterface, index: number) => {\n    const { focusedOptionIndex, selectedOptionIndex } = this.state;\n    const { renderOption } = this.props;\n    const hovered = index === focusedOptionIndex;\n    const selected = index === selectedOptionIndex;\n\n    return (\n      <React.Fragment key={`${option.value}`}>\n        {renderOption!({\n          option,\n          hovered,\n          children: option.label,\n          selected,\n          disabled: option.disabled,\n          onClick: this.handleOptionClick,\n          onMouseDown: this.handleOptionDown,\n          // Используем `onMouseOver` вместо `onMouseEnter`.\n          // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n          //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n          //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n          //  2. Если это тач-устройство.\n          //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n          //     но не на тот, на который нажали в первый раз.\n          // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n          onMouseOver: this.handleOptionHover,\n        })}\n      </React.Fragment>\n    );\n  };\n\n  selectRef = (element: HTMLSelectElement) => {\n    this.selectEl = element;\n    if (this.props.getRef) {\n      setRef(element, this.props.getRef);\n    }\n  };\n\n  onPlacementChange = (placement?: Placement) => {\n    this.setState(() => ({\n      popperPlacement: placement,\n    }));\n  };\n\n  render() {\n    const { opened, nativeSelectValue, options: stateOptions } = this.state;\n    const {\n      searchable,\n      name,\n      className,\n      getRef,\n      getRootRef,\n      popupDirection,\n      options,\n      sizeY,\n      platform,\n      style,\n      onChange,\n      onBlur,\n      onFocus,\n      onClick,\n      renderOption,\n      children,\n      emptyText,\n      onInputChange,\n      filterFn,\n      renderDropdown,\n      onOpen,\n      onClose,\n      fetching,\n      icon,\n      dropdownOffsetDistance,\n      fixDropdownWidth,\n      forceDropdownPortal,\n      ...restProps\n    } = this.props;\n    const selected = this.getSelectedItem();\n    const label = selected ? selected.label : undefined;\n\n    const defaultDropdownContent =\n      stateOptions !== undefined && stateOptions.length > 0 ? (\n        stateOptions.map(this.renderOption)\n      ) : (\n        <Caption vkuiClass=\"CustomSelect__empty\">\n          {this.props.emptyText}\n        </Caption>\n      );\n\n    let resolvedContent;\n\n    if (typeof renderDropdown === \"function\") {\n      resolvedContent = renderDropdown({ defaultDropdownContent });\n    } else {\n      resolvedContent = defaultDropdownContent;\n    }\n\n    const isPopperDirectionTop = this.state.popperPlacement?.includes(\"top\");\n\n    return (\n      <label\n        vkuiClass={getClassName(\"CustomSelect\", platform)}\n        className={className}\n        style={style}\n        ref={multiRef(this.containerRef, getRootRef)}\n        onClick={this.onLabelClick}\n      >\n        {opened && searchable ? (\n          <Input\n            {...restProps}\n            autoFocus\n            onBlur={this.onBlur}\n            vkuiClass={classNames({\n              CustomSelect__open: opened,\n              \"CustomSelect__open--popupDirectionTop\": isPopperDirectionTop,\n              \"CustomSelect__open--not-adjacent\":\n                (dropdownOffsetDistance as number) > 0,\n            })}\n            value={this.state.inputValue}\n            onKeyDown={this.onInputKeyDown}\n            onChange={this.onInputChange}\n            // TODO Ожидается, что клик поймает нативный select, но его перехвает Input. К сожалению, это приводит конфликтам типизации.\n            // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n            // @ts-ignore\n            onClick={onClick}\n            after={icon}\n            placeholder={restProps.placeholder}\n          />\n        ) : (\n          <SelectMimicry\n            {...restProps}\n            aria-hidden={true}\n            onClick={this.onClick}\n            onKeyDown={this.handleKeyDownSelect}\n            onKeyUp={this.handleKeyUp}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            vkuiClass={classNames({\n              CustomSelect__open: opened,\n              \"CustomSelect__open--popupDirectionTop\": isPopperDirectionTop,\n              \"CustomSelect__open--not-adjacent\":\n                (dropdownOffsetDistance as number) > 0,\n            })}\n            after={icon}\n          >\n            {label}\n          </SelectMimicry>\n        )}\n        <select\n          ref={this.selectRef}\n          name={name}\n          onChange={this.onNativeSelectChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onClick={onClick}\n          value={nativeSelectValue}\n          aria-hidden={true}\n          vkuiClass=\"CustomSelect__control\"\n        >\n          {options.map((item) => (\n            <option key={`${item.value}`} value={item.value} />\n          ))}\n        </select>\n        {opened && (\n          <CustomSelectDropdown\n            targetRef={this.containerRef}\n            placement={popupDirection}\n            scrollBoxRef={this.scrollBoxRef}\n            onPlacementChange={this.onPlacementChange}\n            onMouseLeave={this.resetFocusedOption}\n            fetching={fetching}\n            offsetDistance={dropdownOffsetDistance}\n            sameWidth={fixDropdownWidth}\n            forcePortal={forceDropdownPortal}\n          >\n            {resolvedContent}\n          </CustomSelectDropdown>\n        )}\n      </label>\n    );\n  }\n}\n\n// eslint-disable-next-line import/no-default-export\nexport default withPlatform(\n  withAdaptivity(CustomSelect, {\n    sizeY: true,\n  })\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}